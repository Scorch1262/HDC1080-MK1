

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri May 28 16:31:36 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,inline
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=2,class=CODE,delta=1
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   124                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   125                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   126                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   127  0000                     
   128                           ; Version 2.20
   129                           ; Generated 05/05/2020 GMT
   130                           ; 
   131                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   132                           ; All rights reserved.
   133                           ; 
   134                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   135                           ; 
   136                           ; Redistribution and use in source and binary forms, with or without modification, are
   137                           ; permitted provided that the following conditions are met:
   138                           ; 
   139                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   140                           ;        conditions and the following disclaimer.
   141                           ; 
   142                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   143                           ;        of conditions and the following disclaimer in the documentation and/or other
   144                           ;        materials provided with the distribution.
   145                           ; 
   146                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   147                           ;        software without specific prior written permission.
   148                           ; 
   149                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   150                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   151                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   152                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   153                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   154                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   155                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   156                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   157                           ; 
   158                           ; 
   159                           ; Code-generator required, PIC18F46K20 Definitions
   160                           ; 
   161                           ; SFR Addresses
   162  0000                     
   163                           	psect	smallconst
   164  001000                     __psmallconst:
   165                           	callstack 0
   166  001000  00                 	db	0
   167  001001                     _fsmStateTable:
   168                           	callstack 0
   169  001001  86                 	db	low _I2C_DO_IDLE
   170  001002  4B                 	db	high _I2C_DO_IDLE
   171  001003  5E                 	db	low _I2C_DO_SEND_ADR_READ
   172  001004  4B                 	db	high _I2C_DO_SEND_ADR_READ
   173  001005  4E                 	db	low _I2C_DO_SEND_ADR_WRITE
   174  001006  4B                 	db	high _I2C_DO_SEND_ADR_WRITE
   175  001007  F6                 	db	low _I2C_DO_TX
   176  001008  3A                 	db	high _I2C_DO_TX
   177  001009  30                 	db	low _I2C_DO_RX
   178  00100A  3F                 	db	high _I2C_DO_RX
   179  00100B  7A                 	db	low _I2C_DO_RCEN
   180  00100C  4B                 	db	high _I2C_DO_RCEN
   181  00100D  FA                 	db	low _I2C_DO_TX_EMPTY
   182  00100E  40                 	db	high _I2C_DO_TX_EMPTY
   183  00100F  18                 	db	low _I2C_DO_SEND_RESTART_READ
   184  001010  4C                 	db	high _I2C_DO_SEND_RESTART_READ
   185  001011  10                 	db	low _I2C_DO_SEND_RESTART_WRITE
   186  001012  4C                 	db	high _I2C_DO_SEND_RESTART_WRITE
   187  001013  08                 	db	low _I2C_DO_SEND_RESTART
   188  001014  4C                 	db	high _I2C_DO_SEND_RESTART
   189  001015  00                 	db	low _I2C_DO_SEND_STOP
   190  001016  4C                 	db	high _I2C_DO_SEND_STOP
   191  001017  F8                 	db	low _I2C_DO_RX_ACK
   192  001018  4B                 	db	high _I2C_DO_RX_ACK
   193  001019  F0                 	db	low _I2C_DO_RX_NACK_STOP
   194  00101A  4B                 	db	high _I2C_DO_RX_NACK_STOP
   195  00101B  E8                 	db	low _I2C_DO_RX_NACK_RESTART
   196  00101C  4B                 	db	high _I2C_DO_RX_NACK_RESTART
   197  00101D  6E                 	db	low _I2C_DO_RESET
   198  00101E  4B                 	db	high _I2C_DO_RESET
   199  00101F  44                 	db	low _I2C_DO_ADDRESS_NACK
   200  001020  43                 	db	high _I2C_DO_ADDRESS_NACK
   201  001021                     __end_of_fsmStateTable:
   202                           	callstack 0
   203  001021                     STR_2:
   204                           
   205                           ; BSR set to: 0
   206  001021  4C                 	db	76	;'L'
   207  001022  75                 	db	117	;'u'
   208  001023  66                 	db	102	;'f'
   209  001024  74                 	db	116	;'t'
   210  001025  66                 	db	102	;'f'
   211  001026  65                 	db	101	;'e'
   212  001027  75                 	db	117	;'u'
   213  001028  63                 	db	99	;'c'
   214  001029  68                 	db	104	;'h'
   215  00102A  74                 	db	116	;'t'
   216  00102B  69                 	db	105	;'i'
   217  00102C  67                 	db	103	;'g'
   218  00102D  6B                 	db	107	;'k'
   219  00102E  65                 	db	101	;'e'
   220  00102F  69                 	db	105	;'i'
   221  001030  74                 	db	116	;'t'
   222  001031  20                 	db	32
   223  001032  3D                 	db	61	;'='
   224  001033  20                 	db	32
   225  001034  25                 	db	37
   226  001035  34                 	db	52	;'4'
   227  001036  2E                 	db	46
   228  001037  32                 	db	50	;'2'
   229  001038  66                 	db	102	;'f'
   230  001039  25                 	db	37
   231  00103A  25                 	db	37
   232  00103B  0D                 	db	13
   233  00103C  0A                 	db	10
   234  00103D  00                 	db	0
   235  00103E                     STR_1:
   236                           
   237                           ; BSR set to: 0
   238  00103E  54                 	db	84	;'T'
   239  00103F  65                 	db	101	;'e'
   240  001040  6D                 	db	109	;'m'
   241  001041  70                 	db	112	;'p'
   242  001042  65                 	db	101	;'e'
   243  001043  72                 	db	114	;'r'
   244  001044  61                 	db	97	;'a'
   245  001045  74                 	db	116	;'t'
   246  001046  75                 	db	117	;'u'
   247  001047  72                 	db	114	;'r'
   248  001048  20                 	db	32
   249  001049  3D                 	db	61	;'='
   250  00104A  20                 	db	32
   251  00104B  25                 	db	37
   252  00104C  30                 	db	48	;'0'
   253  00104D  2E                 	db	46
   254  00104E  32                 	db	50	;'2'
   255  00104F  66                 	db	102	;'f'
   256  001050  43                 	db	67	;'C'
   257  001051  20                 	db	32
   258  001052  20                 	db	32
   259  001053  20                 	db	32
   260  001054  00                 	db	0
   261  001055                     STR_3:
   262                           
   263                           ; BSR set to: 0
   264  001055  49                 	db	73	;'I'
   265  001056  4E                 	db	78	;'N'
   266  001057  46                 	db	70	;'F'
   267  001058  00                 	db	0
   268  001059                     STR_7:
   269                           
   270                           ; BSR set to: 0
   271  001059  4E                 	db	78	;'N'
   272  00105A  41                 	db	65	;'A'
   273  00105B  4E                 	db	78	;'N'
   274  00105C  00                 	db	0
   275  00105D                     STR_4:
   276                           
   277                           ; BSR set to: 0
   278  00105D  69                 	db	105	;'i'
   279  00105E  6E                 	db	110	;'n'
   280  00105F  66                 	db	102	;'f'
   281  001060  00                 	db	0
   282  001061                     STR_8:
   283                           
   284                           ; BSR set to: 0
   285  001061  6E                 	db	110	;'n'
   286  001062  61                 	db	97	;'a'
   287  001063  6E                 	db	110	;'n'
   288  001064  00                 	db	0
   289  001065                     STR_11:
   290                           
   291                           ; BSR set to: 0
   292  001065  6C                 	db	108	;'l'
   293  001066  66                 	db	102	;'f'
   294  001067  00                 	db	0
   295  001068  00                 	db	0	; dummy byte at the end
   296  0000                     
   297                           	psect	nvBANK0
   298  0000FA                     __pnvBANK0:
   299                           	callstack 0
   300  0000FA                     _EUSART_RxDefaultInterruptHandler:
   301                           	callstack 0
   302  0000FA                     	ds	2
   303  0000FC                     _EUSART_TxDefaultInterruptHandler:
   304                           	callstack 0
   305  0000FC                     	ds	2
   306  0000FE                     _eusartTxBufferRemaining:
   307                           	callstack 0
   308  0000FE                     	ds	1
   309                           
   310                           	psect	nvBANK1
   311  00017E                     __pnvBANK1:
   312                           	callstack 0
   313  00017E                     _EUSART_ErrorHandler:
   314                           	callstack 0
   315  00017E                     	ds	2
   316  000180                     _EUSART_OverrunErrorHandler:
   317                           	callstack 0
   318  000180                     	ds	2
   319  000182                     _EUSART_FramingErrorHandler:
   320                           	callstack 0
   321  000182                     	ds	2
   322  0000                     _RCONbits	set	4048
   323  0000                     _RCREG	set	4014
   324  0000                     _RCSTAbits	set	4011
   325  0000                     _TXREG	set	4013
   326  0000                     _TXSTAbits	set	4012
   327  0000                     _SPBRGH	set	4016
   328  0000                     _SPBRG	set	4015
   329  0000                     _TXSTA	set	4012
   330  0000                     _RCSTA	set	4011
   331  0000                     _BAUDCON	set	4024
   332  0000                     _INTCONbits	set	4082
   333  0000                     _INTCON2bits	set	4081
   334  0000                     _WPUB	set	3964
   335  0000                     _ANSELH	set	3967
   336  0000                     _ANSEL	set	3966
   337  0000                     _TRISD	set	3989
   338  0000                     _TRISC	set	3988
   339  0000                     _TRISB	set	3987
   340  0000                     _TRISA	set	3986
   341  0000                     _TRISE	set	3990
   342  0000                     _LATC	set	3979
   343  0000                     _LATB	set	3978
   344  0000                     _LATA	set	3977
   345  0000                     _LATD	set	3980
   346  0000                     _LATE	set	3981
   347  0000                     _OSCTUNE	set	3995
   348  0000                     _OSCCON	set	4051
   349  0000                     _PIR1bits	set	3998
   350  0000                     _PIE1bits	set	3997
   351  0000                     _SSPSTATbits	set	4039
   352  0000                     _PIR2bits	set	4001
   353  0000                     _SSPCON2bits	set	4037
   354  0000                     _SSPBUF	set	4041
   355  0000                     _SSPCON1bits	set	4038
   356  0000                     _SSPADD	set	4040
   357  0000                     _SSPCON2	set	4037
   358  0000                     _SSPCON1	set	4038
   359  0000                     _SSPSTAT	set	4039
   360                           
   361                           ; #config settings
   362                           
   363                           	psect	cinit
   364  0049C8                     __pcinit:
   365                           	callstack 0
   366  0049C8                     start_initialization:
   367                           	callstack 0
   368  0049C8                     __initialization:
   369                           	callstack 0
   370                           
   371                           ; Clear objects allocated to BANK1 (126 bytes)
   372  0049C8  EE01  F000         	lfsr	0,__pbssBANK1
   373  0049CC  0E7E               	movlw	126
   374  0049CE                     clear_0:
   375  0049CE  6AEE               	clrf	postinc0,c
   376  0049D0  06E8               	decf	wreg,f,c
   377  0049D2  E1FD               	bnz	clear_0
   378                           
   379                           ; Clear objects allocated to BANK0 (53 bytes)
   380  0049D4  EE00  F0C5         	lfsr	0,__pbssBANK0
   381  0049D8  0E35               	movlw	53
   382  0049DA                     clear_1:
   383  0049DA  6AEE               	clrf	postinc0,c
   384  0049DC  06E8               	decf	wreg,f,c
   385  0049DE  E1FD               	bnz	clear_1
   386                           
   387                           ; Clear objects allocated to COMRAM (4 bytes)
   388  0049E0  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   389  0049E2  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   390  0049E4  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   391  0049E6  6A56               	clrf	__pbssCOMRAM& (0+255),c
   392  0049E8                     end_of_initialization:
   393                           	callstack 0
   394  0049E8                     __end_of__initialization:
   395                           	callstack 0
   396  0049E8  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   397  0049EA  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   398  0049EC  0100               	movlb	0
   399  0049EE  EF3D  F01E         	goto	_main	;jump to C main() function
   400                           
   401                           	psect	bssCOMRAM
   402  000056                     __pbssCOMRAM:
   403                           	callstack 0
   404  000056                     _eusartRxTail:
   405                           	callstack 0
   406  000056                     	ds	1
   407  000057                     _eusartRxHead:
   408                           	callstack 0
   409  000057                     	ds	1
   410  000058                     _eusartTxTail:
   411                           	callstack 0
   412  000058                     	ds	1
   413  000059                     _eusartTxHead:
   414                           	callstack 0
   415  000059                     	ds	1
   416                           
   417                           	psect	bssBANK0
   418  0000C5                     __pbssBANK0:
   419                           	callstack 0
   420  0000C5                     _eusartRxStatusBuffer:
   421                           	callstack 0
   422  0000C5                     	ds	8
   423  0000CD                     _eusartRxBuffer:
   424                           	callstack 0
   425  0000CD                     	ds	8
   426  0000D5                     _eusartTxBuffer:
   427                           	callstack 0
   428  0000D5                     	ds	8
   429  0000DD                     floorf@F524:
   430                           	callstack 0
   431  0000DD                     	ds	4
   432  0000E1                     ___fpclassifyf@F463:
   433                           	callstack 0
   434  0000E1                     	ds	4
   435  0000E5                     _lufthumy:
   436                           	callstack 0
   437  0000E5                     	ds	4
   438  0000E9                     _temperatur:
   439                           	callstack 0
   440  0000E9                     	ds	4
   441  0000ED                     _writeBuffer:
   442                           	callstack 0
   443  0000ED                     	ds	3
   444  0000F0                     _nout:
   445                           	callstack 0
   446  0000F0                     	ds	2
   447  0000F2                     _width:
   448                           	callstack 0
   449  0000F2                     	ds	2
   450  0000F4                     _prec:
   451                           	callstack 0
   452  0000F4                     	ds	2
   453  0000F6                     _flags:
   454                           	callstack 0
   455  0000F6                     	ds	2
   456  0000F8                     _eusartRxLastError:
   457                           	callstack 0
   458  0000F8                     	ds	1
   459  0000F9                     _eusartRxCount:
   460                           	callstack 0
   461  0000F9                     	ds	1
   462                           
   463                           	psect	bssBANK1
   464  000100                     __pbssBANK1:
   465                           	callstack 0
   466  000100                     _I2C_Status:
   467                           	callstack 0
   468  000100                     	ds	36
   469  000124                     _dbuf:
   470                           	callstack 0
   471  000124                     	ds	80
   472  000174                     _readBuffer:
   473                           	callstack 0
   474  000174                     	ds	10
   475                           
   476                           	psect	cstackBANK1
   477  000184                     __pcstackBANK1:
   478                           	callstack 0
   479  000184                     	ds	2
   480  000186                     printf@ap:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x2
   484  000186                     	ds	2
   485  000188                     ??_main:
   486                           
   487                           ; 1 bytes @ 0x4
   488  000188                     	ds	2
   489                           
   490                           	psect	cstackBANK0
   491  000060                     __pcstackBANK0:
   492                           	callstack 0
   493  000060                     ??_efgtoa:
   494                           
   495                           ; 1 bytes @ 0x0
   496  000060                     	ds	5
   497  000065                     efgtoa@ou:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x5
   501  000065                     	ds	4
   502  000069                     _efgtoa$2102:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x9
   506  000069                     	ds	2
   507  00006B                     _efgtoa$2103:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0xB
   511  00006B                     	ds	2
   512  00006D                     _efgtoa$2108:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0xD
   516  00006D                     	ds	2
   517  00006F                     _efgtoa$2112:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0xF
   521  00006F                     	ds	2
   522  000071                     _efgtoa$2113:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x11
   526  000071                     	ds	2
   527  000073                     _efgtoa$2114:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x13
   531  000073                     	ds	2
   532  000075                     efgtoa@t:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x15
   536  000075                     	ds	2
   537  000077                     efgtoa@pp:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x17
   541  000077                     	ds	2
   542  000079                     efgtoa@m:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x19
   546  000079                     	ds	2
   547  00007B                     efgtoa@ne:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x1B
   551  00007B                     	ds	2
   552  00007D                     efgtoa@d:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x1D
   556  00007D                     	ds	2
   557  00007F                     efgtoa@sign:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x1F
   561  00007F                     	ds	2
   562  000081                     efgtoa@p:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x21
   566  000081                     	ds	2
   567  000083                     efgtoa@nmode:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x23
   571  000083                     	ds	1
   572  000084                     efgtoa@w:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x24
   576  000084                     	ds	2
   577  000086                     efgtoa@mode:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x26
   581  000086                     	ds	1
   582  000087                     efgtoa@h:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x27
   586  000087                     	ds	4
   587  00008B                     efgtoa@l:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x2B
   591  00008B                     	ds	4
   592  00008F                     efgtoa@i:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x2F
   596  00008F                     	ds	2
   597  000091                     efgtoa@g:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x31
   601  000091                     	ds	4
   602  000095                     efgtoa@e:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x35
   606  000095                     	ds	2
   607  000097                     efgtoa@n:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x37
   611  000097                     	ds	2
   612  000099                     efgtoa@u:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x39
   616  000099                     	ds	4
   617  00009D                     ?_vfpfcnvrt:
   618                           	callstack 0
   619  00009D                     vfpfcnvrt@fp:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x3D
   623  00009D                     	ds	2
   624  00009F                     vfpfcnvrt@fmt:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x3F
   628  00009F                     	ds	2
   629  0000A1                     vfpfcnvrt@ap:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x41
   633  0000A1                     	ds	2
   634  0000A3                     ??_vfpfcnvrt:
   635                           
   636                           ; 1 bytes @ 0x43
   637  0000A3                     	ds	4
   638  0000A7                     vfpfcnvrt@done:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x47
   642  0000A7                     	ds	2
   643  0000A9                     _vfpfcnvrt$2128:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x49
   647  0000A9                     	ds	2
   648  0000AB                     _vfpfcnvrt$2129:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x4B
   652  0000AB                     	ds	2
   653  0000AD                     _vfpfcnvrt$2133:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x4D
   657  0000AD                     	ds	2
   658  0000AF                     vfpfcnvrt@f:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x4F
   662  0000AF                     	ds	4
   663  0000B3                     vfpfcnvrt@ct:
   664                           	callstack 0
   665                           
   666                           ; 3 bytes @ 0x53
   667  0000B3                     	ds	3
   668  0000B6                     vfpfcnvrt@c:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x56
   672  0000B6                     	ds	1
   673  0000B7                     ?_vfprintf:
   674                           	callstack 0
   675  0000B7                     vfprintf@fp:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x57
   679  0000B7                     	ds	2
   680  0000B9                     vfprintf@fmt:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x59
   684  0000B9                     	ds	2
   685  0000BB                     vfprintf@ap:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x5B
   689  0000BB                     	ds	2
   690  0000BD                     vfprintf@cfmt:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x5D
   694  0000BD                     	ds	2
   695  0000BF                     ?_printf:
   696                           	callstack 0
   697  0000BF                     printf@fmt:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x5F
   701  0000BF                     	ds	6
   702                           
   703                           	psect	cstackCOMRAM
   704  000001                     __pcstackCOMRAM:
   705                           	callstack 0
   706  000001                     ??_INTERRUPT_InterruptManager:
   707  000001                     
   708                           ; 1 bytes @ 0x0
   709  000001                     	ds	4
   710  000005                     ?_strlen:
   711                           	callstack 0
   712  000005                     ?___fpclassifyf:
   713                           	callstack 0
   714  000005                     ?_isupper:
   715                           	callstack 0
   716  000005                     ?_isdigit:
   717                           	callstack 0
   718  000005                     ?_strncmp:
   719                           	callstack 0
   720  000005                     ?_isspace:
   721                           	callstack 0
   722  000005                     ?___wmul:
   723                           	callstack 0
   724  000005                     ?___awdiv:
   725                           	callstack 0
   726  000005                     ?___awmod:
   727                           	callstack 0
   728  000005                     ?___flmul:
   729                           	callstack 0
   730  000005                     ?___flneg:
   731                           	callstack 0
   732  000005                     ?___fltol:
   733                           	callstack 0
   734  000005                     ?___xxtofl:
   735                           	callstack 0
   736  000005                     I2C_Open@address:
   737                           	callstack 0
   738  000005                     I2C_Close@returnValue:
   739                           	callstack 0
   740  000005                     I2C_MasterSendTxData@data:
   741                           	callstack 0
   742  000005                     EUSART_Write@txData:
   743                           	callstack 0
   744  000005                     I2C_SetBuffer@buffer:
   745                           	callstack 0
   746  000005                     I2C_SetCallback@cb:
   747                           	callstack 0
   748  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   749                           	callstack 0
   750  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   751                           	callstack 0
   752  000005                     EUSART_SetErrorHandler@interruptHandler:
   753                           	callstack 0
   754  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   755                           	callstack 0
   756  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   757                           	callstack 0
   758  000005                     ___wmul@multiplier:
   759                           	callstack 0
   760  000005                     ___awdiv@dividend:
   761                           	callstack 0
   762  000005                     ___awmod@dividend:
   763                           	callstack 0
   764  000005                     isdigit@c:
   765                           	callstack 0
   766  000005                     isspace@c:
   767                           	callstack 0
   768  000005                     isupper@c:
   769                           	callstack 0
   770  000005                     strcpy@dest:
   771                           	callstack 0
   772  000005                     strlen@s:
   773                           	callstack 0
   774  000005                     strncmp@_l:
   775                           	callstack 0
   776  000005                     ___fleq@ff1:
   777                           	callstack 0
   778  000005                     ___flneg@f1:
   779                           	callstack 0
   780  000005                     ___fltol@f1:
   781                           	callstack 0
   782  000005                     ___flmul@b:
   783                           	callstack 0
   784  000005                     ___xxtofl@val:
   785                           	callstack 0
   786  000005                     ___fpclassifyf@x:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x4
   790  000005                     	ds	1
   791  000006                     I2C_Open@returnValue:
   792                           	callstack 0
   793  000006                     putch@txData:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x5
   797  000006                     	ds	1
   798  000007                     ??_isupper:
   799  000007                     ??_isdigit:
   800  000007                     ??_isspace:
   801  000007                     I2C_SetBuffer@bufferSize:
   802                           	callstack 0
   803  000007                     I2C_SetCallback@ptr:
   804                           	callstack 0
   805  000007                     ___wmul@multiplicand:
   806                           	callstack 0
   807  000007                     ___awdiv@divisor:
   808                           	callstack 0
   809  000007                     ___awmod@divisor:
   810                           	callstack 0
   811  000007                     fputc@c:
   812                           	callstack 0
   813  000007                     strcpy@src:
   814                           	callstack 0
   815  000007                     strlen@a:
   816                           	callstack 0
   817  000007                     strncmp@_r:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x6
   821  000007                     	ds	2
   822  000009                     ??___fpclassifyf:
   823  000009                     ??_strcpy:
   824  000009                     ??___fltol:
   825  000009                     ??___xxtofl:
   826  000009                     I2C_SetCallback@idx:
   827                           	callstack 0
   828  000009                     ___awdiv@counter:
   829                           	callstack 0
   830  000009                     ___awmod@counter:
   831                           	callstack 0
   832  000009                     ___wmul@product:
   833                           	callstack 0
   834  000009                     fputc@fp:
   835                           	callstack 0
   836  000009                     strncmp@n:
   837                           	callstack 0
   838  000009                     ___fleq@ff2:
   839                           	callstack 0
   840  000009                     ___flmul@a:
   841                           	callstack 0
   842                           
   843                           ; 4 bytes @ 0x8
   844  000009                     	ds	1
   845  00000A                     ___awdiv@sign:
   846                           	callstack 0
   847  00000A                     ___awmod@sign:
   848                           	callstack 0
   849  00000A                     I2C_SetDataCompleteCallback@cb:
   850                           	callstack 0
   851  00000A                     I2C_SetAddressNackCallback@cb:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x9
   855  00000A                     	ds	1
   856  00000B                     ??_fputc:
   857  00000B                     ??_strncmp:
   858  00000B                     ?_tolower:
   859                           	callstack 0
   860  00000B                     _isspace$2198:
   861                           	callstack 0
   862  00000B                     ___awdiv@quotient:
   863                           	callstack 0
   864  00000B                     strcpy@s:
   865                           	callstack 0
   866  00000B                     tolower@c:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0xA
   870  00000B                     	ds	1
   871  00000C                     ?_atoi:
   872                           	callstack 0
   873  00000C                     I2C_SetDataCompleteCallback@ptr:
   874                           	callstack 0
   875  00000C                     I2C_SetAddressNackCallback@ptr:
   876                           	callstack 0
   877  00000C                     atoi@s:
   878                           	callstack 0
   879  00000C                     strncmp@l:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0xB
   883  00000C                     	ds	1
   884  00000D                     ??___flmul:
   885  00000D                     ??_tolower:
   886  00000D                     ??___fleq:
   887  00000D                     ___fltol@sign1:
   888                           	callstack 0
   889  00000D                     ___xxtofl@sign:
   890                           	callstack 0
   891  00000D                     ___fpclassifyf@e:
   892                           	callstack 0
   893  00000D                     strcpy@d:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0xC
   897  00000D                     	ds	1
   898  00000E                     ??_atoi:
   899  00000E                     ___fltol@exp1:
   900                           	callstack 0
   901  00000E                     ___xxtofl@exp:
   902                           	callstack 0
   903  00000E                     rd1RegCompleteHandler@ptr:
   904                           	callstack 0
   905  00000E                     rd2RegCompleteHandler@ptr:
   906                           	callstack 0
   907  00000E                     wr1RegCompleteHandler@ptr:
   908                           	callstack 0
   909  00000E                     wr2RegCompleteHandler@ptr:
   910                           	callstack 0
   911  00000E                     rdBlkRegCompleteHandler@ptr:
   912                           	callstack 0
   913  00000E                     I2C_CallbackReturnReset@funPtr:
   914                           	callstack 0
   915  00000E                     strncmp@r:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0xD
   919  00000E                     	ds	1
   920  00000F                     ___xxtofl@arg:
   921                           	callstack 0
   922  00000F                     ___fpclassifyf@u:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0xE
   926  00000F                     	ds	1
   927  000010                     ??_I2C_DO_TX:
   928  000010                     ??_I2C_DO_RX:
   929  000010                     ??_I2C_DO_TX_EMPTY:
   930  000010                     ??_I2C_DO_ADDRESS_NACK:
   931  000010                     fputs@s:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0xF
   935  000010                     	ds	1
   936  000011                     ___flmul@sign:
   937                           	callstack 0
   938  000011                     _tolower$2256:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x10
   942  000011                     	ds	1
   943  000012                     ??_I2C_MasterFsm:
   944  000012                     ___flmul@aexp:
   945                           	callstack 0
   946  000012                     atoi@neg:
   947                           	callstack 0
   948  000012                     fputs@fp:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x11
   952  000012                     	ds	1
   953  000013                     ___flmul@grs:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x12
   957  000013                     	ds	1
   958  000014                     I2C_MasterOperation@read:
   959                           	callstack 0
   960  000014                     fputs@c:
   961                           	callstack 0
   962  000014                     _atoi$2167:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x13
   966  000014                     	ds	1
   967  000015                     I2C_MasterOperation@returnValue:
   968                           	callstack 0
   969  000015                     fputs@i:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x14
   973  000015                     	ds	1
   974  000016                     I2C_Write1ByteRegister@reg:
   975                           	callstack 0
   976  000016                     I2C_WriteNBytes@data:
   977                           	callstack 0
   978  000016                     I2C_ReadNBytes@data:
   979                           	callstack 0
   980  000016                     _atoi$2169:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x15
   984  000016                     	ds	1
   985  000017                     ?_pad:
   986                           	callstack 0
   987  000017                     I2C_Write1ByteRegister@data:
   988                           	callstack 0
   989  000017                     ___flmul@bexp:
   990                           	callstack 0
   991  000017                     pad@fp:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x16
   995  000017                     	ds	1
   996  000018                     I2C_Write1ByteRegister@address:
   997                           	callstack 0
   998  000018                     _atoi$2168:
   999                           	callstack 0
  1000  000018                     I2C_WriteNBytes@len:
  1001                           	callstack 0
  1002  000018                     I2C_ReadNBytes@len:
  1003                           	callstack 0
  1004  000018                     ___flmul@prod:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0x17
  1008  000018                     	ds	1
  1009  000019                     ??_HDC1080_Init:
  1010  000019                     pad@buf:
  1011                           	callstack 0
  1012  000019                     atoi@n:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x18
  1016  000019                     	ds	1
  1017  00001A                     I2C_WriteNBytes@address:
  1018                           	callstack 0
  1019  00001A                     I2C_ReadNBytes@address:
  1020                           	callstack 0
  1021                           
  1022                           ; 1 bytes @ 0x19
  1023  00001A                     	ds	1
  1024  00001B                     ??_HDC1080_Read:
  1025  00001B                     pad@p:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x1A
  1029  00001B                     	ds	1
  1030  00001C                     ___flmul@temp:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x1B
  1034  00001C                     	ds	1
  1035  00001D                     ??_pad:
  1036  00001D                     HDC1080_Read@regist:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x1C
  1040  00001D                     	ds	1
  1041  00001E                     ?___fldiv:
  1042                           	callstack 0
  1043  00001E                     pad@i:
  1044                           	callstack 0
  1045  00001E                     ___flge@ff1:
  1046                           	callstack 0
  1047  00001E                     ___fldiv@b:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x1D
  1051  00001E                     	ds	2
  1052  000020                     pad@w:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x1F
  1056  000020                     	ds	2
  1057  000022                     ___flge@ff2:
  1058                           	callstack 0
  1059  000022                     ___fldiv@a:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x21
  1063  000022                     	ds	4
  1064  000026                     ??___fldiv:
  1065  000026                     ??___flge:
  1066                           
  1067                           ; 1 bytes @ 0x25
  1068  000026                     	ds	4
  1069  00002A                     ___fldiv@rem:
  1070                           	callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x29
  1073  00002A                     	ds	4
  1074  00002E                     ___fldiv@sign:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x2D
  1078  00002E                     	ds	1
  1079  00002F                     ___fldiv@new_exp:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x2E
  1083  00002F                     	ds	2
  1084  000031                     ___fldiv@grs:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x30
  1088  000031                     	ds	4
  1089  000035                     ___fldiv@bexp:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x34
  1093  000035                     	ds	1
  1094  000036                     ___fldiv@aexp:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x35
  1098  000036                     	ds	1
  1099  000037                     ?_HDC1080_humy_GetValue:
  1100                           	callstack 0
  1101  000037                     ?___fladd:
  1102                           	callstack 0
  1103  000037                     ?_floorf:
  1104                           	callstack 0
  1105  000037                     ___fladd@b:
  1106                           	callstack 0
  1107  000037                     floorf@x:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x36
  1111  000037                     	ds	4
  1112  00003B                     ??_HDC1080_humy_GetValue:
  1113  00003B                     ??_floorf:
  1114  00003B                     ___fladd@a:
  1115                           	callstack 0
  1116                           
  1117                           ; 4 bytes @ 0x3A
  1118  00003B                     	ds	2
  1119  00003D                     HDC1080_humy_GetValue@humyDataAnz:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x3C
  1123  00003D                     	ds	2
  1124  00003F                     ??___fladd:
  1125                           
  1126                           ; 1 bytes @ 0x3E
  1127  00003F                     	ds	2
  1128  000041                     floorf@m:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x40
  1132  000041                     	ds	2
  1133  000043                     ___fladd@signs:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x42
  1137  000043                     	ds	1
  1138  000044                     ___fladd@aexp:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x43
  1142  000044                     	ds	1
  1143  000045                     ___fladd@bexp:
  1144                           	callstack 0
  1145  000045                     floorf@e:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x44
  1149  000045                     	ds	1
  1150  000046                     ___fladd@grs:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x45
  1154  000046                     	ds	1
  1155  000047                     ?_HDC1080_temp_GetValue:
  1156                           	callstack 0
  1157  000047                     ?___flsub:
  1158                           	callstack 0
  1159  000047                     ___flsub@b:
  1160                           	callstack 0
  1161  000047                     floorf@u:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x46
  1165  000047                     	ds	4
  1166  00004B                     ??_HDC1080_temp_GetValue:
  1167  00004B                     ___flsub@a:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x4A
  1171  00004B                     	ds	2
  1172  00004D                     HDC1080_temp_GetValue@tempDataAnz:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x4C
  1176  00004D                     	ds	2
  1177  00004F                     ?_efgtoa:
  1178                           	callstack 0
  1179  00004F                     efgtoa@fp:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x4E
  1183  00004F                     	ds	2
  1184  000051                     efgtoa@f:
  1185                           	callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x50
  1188  000051                     	ds	4
  1189  000055                     efgtoa@c:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x54
  1193  000055                     	ds	1
  1194  000056                     
  1195                           ; 1 bytes @ 0x55
  1196 ;;
  1197 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1198 ;;
  1199 ;; *************** function _main *****************
  1200 ;; Defined at:
  1201 ;;		line 54 in file "main.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;Total ram usage:        2 bytes
  1220 ;; Hardware stack levels required when called:   15
  1221 ;; This function calls:
  1222 ;;		_HDC1080_Init
  1223 ;;		_HDC1080_humy_GetValue
  1224 ;;		_HDC1080_temp_GetValue
  1225 ;;		_SYSTEM_Initialize
  1226 ;;		_printf
  1227 ;; This function is called by:
  1228 ;;		Startup code after reset
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text0
  1233  003C7A                     __ptext0:
  1234                           	callstack 0
  1235  003C7A                     _main:
  1236                           	callstack 16
  1237  003C7A                     
  1238                           ;main.c: 56:     SYSTEM_Initialize();
  1239  003C7A  EC80  F025         	call	_SYSTEM_Initialize	;wreg free
  1240  003C7E                     
  1241                           ;main.c: 57:     HDC1080_Init();
  1242  003C7E  EC0E  F025         	call	_HDC1080_Init	;wreg free
  1243  003C82                     
  1244                           ;main.c: 58:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1245  003C82  0E06               	movlw	6
  1246  003C84  0101               	movlb	1	; () banked
  1247  003C86  6F89               	movwf	(??_main+1)& (0+255),b
  1248  003C88  0E13               	movlw	19
  1249  003C8A  6F88               	movwf	??_main& (0+255),b
  1250  003C8C  0EAD               	movlw	173
  1251  003C8E                     u8377:
  1252  003C8E  2EE8               	decfsz	wreg,f,c
  1253  003C90  D7FE               	bra	u8377
  1254  003C92  2F88               	decfsz	??_main& (0+255),f,b
  1255  003C94  D7FC               	bra	u8377
  1256  003C96  2F89               	decfsz	(??_main+1)& (0+255),f,b
  1257  003C98  D7FA               	bra	u8377
  1258  003C9A  F000 F000          	nop2	
  1259  003C9E                     
  1260                           ;main.c: 65:     (INTCONbits.GIE = 1);
  1261  003C9E  8EF2               	bsf	242,7,c	;volatile
  1262  003CA0                     
  1263                           ;main.c: 71:     (INTCONbits.PEIE = 1);
  1264  003CA0  8CF2               	bsf	242,6,c	;volatile
  1265  003CA2                     l7633:
  1266                           
  1267                           ;main.c: 77:         temperatur = HDC1080_temp_GetValue();
  1268  003CA2  EC4E  F01C         	call	_HDC1080_temp_GetValue	;wreg free
  1269  003CA6  C047  F0E9         	movff	?_HDC1080_temp_GetValue,_temperatur
  1270  003CAA  C048  F0EA         	movff	?_HDC1080_temp_GetValue+1,_temperatur+1
  1271  003CAE  C049  F0EB         	movff	?_HDC1080_temp_GetValue+2,_temperatur+2
  1272  003CB2  C04A  F0EC         	movff	?_HDC1080_temp_GetValue+3,_temperatur+3
  1273  003CB6                     
  1274                           ;main.c: 78:         lufthumy = HDC1080_humy_GetValue();
  1275  003CB6  ECED  F01E         	call	_HDC1080_humy_GetValue	;wreg free
  1276  003CBA  C037  F0E5         	movff	?_HDC1080_humy_GetValue,_lufthumy
  1277  003CBE  C038  F0E6         	movff	?_HDC1080_humy_GetValue+1,_lufthumy+1
  1278  003CC2  C039  F0E7         	movff	?_HDC1080_humy_GetValue+2,_lufthumy+2
  1279  003CC6  C03A  F0E8         	movff	?_HDC1080_humy_GetValue+3,_lufthumy+3
  1280  003CCA                     
  1281                           ;main.c: 79:         printf("Temperatur = %0.2fC   ",temperatur);
  1282  003CCA  0E3E               	movlw	low STR_1
  1283  003CCC  0100               	movlb	0	; () banked
  1284  003CCE  6FBF               	movwf	printf@fmt& (0+255),b
  1285  003CD0  0E10               	movlw	high STR_1
  1286  003CD2  6FC0               	movwf	(printf@fmt+1)& (0+255),b
  1287  003CD4  C0E9  F0C1         	movff	_temperatur,?_printf+2
  1288  003CD8  C0EA  F0C2         	movff	_temperatur+1,?_printf+3
  1289  003CDC  C0EB  F0C3         	movff	_temperatur+2,?_printf+4
  1290  003CE0  C0EC  F0C4         	movff	_temperatur+3,?_printf+5
  1291  003CE4  ECF9  F024         	call	_printf	;wreg free
  1292  003CE8                     
  1293                           ;main.c: 80:         printf("Luftfeuchtigkeit = %4.2f%%\r\n",lufthumy);
  1294  003CE8  0E21               	movlw	low STR_2
  1295  003CEA  0100               	movlb	0	; () banked
  1296  003CEC  6FBF               	movwf	printf@fmt& (0+255),b
  1297  003CEE  0E10               	movlw	high STR_2
  1298  003CF0  6FC0               	movwf	(printf@fmt+1)& (0+255),b
  1299  003CF2  C0E5  F0C1         	movff	_lufthumy,?_printf+2
  1300  003CF6  C0E6  F0C2         	movff	_lufthumy+1,?_printf+3
  1301  003CFA  C0E7  F0C3         	movff	_lufthumy+2,?_printf+4
  1302  003CFE  C0E8  F0C4         	movff	_lufthumy+3,?_printf+5
  1303  003D02  ECF9  F024         	call	_printf	;wreg free
  1304  003D06                     
  1305                           ;main.c: 81:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1306  003D06  0E06               	movlw	6
  1307  003D08  0101               	movlb	1	; () banked
  1308  003D0A  6F89               	movwf	(??_main+1)& (0+255),b
  1309  003D0C  0E13               	movlw	19
  1310  003D0E  6F88               	movwf	??_main& (0+255),b
  1311  003D10  0EAD               	movlw	173
  1312  003D12                     u8387:
  1313  003D12  2EE8               	decfsz	wreg,f,c
  1314  003D14  D7FE               	bra	u8387
  1315  003D16  2F88               	decfsz	??_main& (0+255),f,b
  1316  003D18  D7FC               	bra	u8387
  1317  003D1A  2F89               	decfsz	(??_main+1)& (0+255),f,b
  1318  003D1C  D7FA               	bra	u8387
  1319  003D1E  F000 F000          	nop2	
  1320  003D22  EF51  F01E         	goto	l7633
  1321  003D26  EF58  F000         	goto	start
  1322  003D2A                     __end_of_main:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function _printf *****************
  1326 ;; Defined at:
  1327 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  fmt             2   95[BANK0 ] PTR const unsigned char 
  1330 ;;		 -> STR_2(29), STR_1(23), 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  ap              2    2[BANK1 ] PTR void [1]
  1333 ;;		 -> ?_printf(2), 
  1334 ;;  ret             2    0        int 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  2   95[BANK0 ] int 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1344 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;Total ram usage:       10 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:   12
  1351 ;; This function calls:
  1352 ;;		_vfprintf
  1353 ;; This function is called by:
  1354 ;;		_main
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text1
  1359  0049F2                     __ptext1:
  1360                           	callstack 0
  1361  0049F2                     _printf:
  1362                           	callstack 18
  1363  0049F2  0EC1               	movlw	low (?_printf+2)
  1364  0049F4  0101               	movlb	1	; () banked
  1365  0049F6  6F86               	movwf	printf@ap& (0+255),b
  1366  0049F8  0E00               	movlw	high (?_printf+2)
  1367  0049FA  6F87               	movwf	(printf@ap+1)& (0+255),b
  1368  0049FC                     
  1369                           ; BSR set to: 1
  1370  0049FC  0E00               	movlw	0
  1371  0049FE  0100               	movlb	0	; () banked
  1372  004A00  6FB7               	movwf	vfprintf@fp& (0+255),b
  1373  004A02  0E00               	movlw	0
  1374  004A04  6FB8               	movwf	(vfprintf@fp+1)& (0+255),b
  1375  004A06  C0BF  F0B9         	movff	printf@fmt,vfprintf@fmt
  1376  004A0A  C0C0  F0BA         	movff	printf@fmt+1,vfprintf@fmt+1
  1377  004A0E  0E86               	movlw	low printf@ap
  1378  004A10  6FBB               	movwf	vfprintf@ap& (0+255),b
  1379  004A12  0E01               	movlw	high printf@ap
  1380  004A14  6FBC               	movwf	(vfprintf@ap+1)& (0+255),b
  1381  004A16  ECD5  F021         	call	_vfprintf	;wreg free
  1382  004A1A  0012               	return		;funcret
  1383  004A1C                     __end_of_printf:
  1384                           	callstack 0
  1385                           
  1386 ;; *************** function _vfprintf *****************
  1387 ;; Defined at:
  1388 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  fp              2   87[BANK0 ] PTR struct _IO_FILE
  1391 ;;		 -> NULL(0), 
  1392 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  1393 ;;		 -> STR_2(29), STR_1(23), 
  1394 ;;  ap              2   91[BANK0 ] PTR PTR void 
  1395 ;;		 -> printf@ap(2), 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  cfmt            2   93[BANK0 ] PTR unsigned char 
  1398 ;;		 -> STR_2(29), STR_1(23), 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  2   87[BANK0 ] int 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1408 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;Total ram usage:        8 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:   11
  1415 ;; This function calls:
  1416 ;;		_vfpfcnvrt
  1417 ;; This function is called by:
  1418 ;;		_printf
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text2
  1423  0043AA                     __ptext2:
  1424                           	callstack 0
  1425  0043AA                     _vfprintf:
  1426                           	callstack 18
  1427  0043AA                     
  1428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1429  0043AA  C0B9  F0BD         	movff	vfprintf@fmt,vfprintf@cfmt
  1430  0043AE  C0BA  F0BE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1431  0043B2                     
  1432                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1433  0043B2  0E00               	movlw	0
  1434  0043B4  0100               	movlb	0	; () banked
  1435  0043B6  6FF1               	movwf	(_nout+1)& (0+255),b
  1436  0043B8  0E00               	movlw	0
  1437  0043BA  6FF0               	movwf	_nout& (0+255),b
  1438                           
  1439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1440  0043BC  EFF3  F021         	goto	l7595
  1441  0043C0                     l7593:
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1445  0043C0  C0B7  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1446  0043C4  C0B8  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1447  0043C8  0EBD               	movlw	low vfprintf@cfmt
  1448  0043CA  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1449  0043CC  0E00               	movlw	high vfprintf@cfmt
  1450  0043CE  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1451  0043D0  C0BB  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1452  0043D4  C0BC  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1453  0043D8  EC34  F00E         	call	_vfpfcnvrt	;wreg free
  1454  0043DC  0100               	movlb	0	; () banked
  1455  0043DE  519D               	movf	?_vfpfcnvrt& (0+255),w,b
  1456  0043E0  27F0               	addwf	_nout& (0+255),f,b
  1457  0043E2  519E               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1458  0043E4  23F1               	addwfc	(_nout+1)& (0+255),f,b
  1459  0043E6                     l7595:
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1463  0043E6  C0BD  FFF6         	movff	vfprintf@cfmt,tblptrl
  1464  0043EA  C0BE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1465  0043EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1466  0043EE  6AF8               	clrf	tblptru,c
  1467  0043F0                     	endif
  1468  0043F0                     	if	0	;tblptru may be non-zero
  1469  0043F0                     	endif
  1470  0043F0  0008               	tblrd		*
  1471  0043F2  50F5               	movf	tablat,w,c
  1472  0043F4  0900               	iorlw	0
  1473  0043F6  A4D8               	btfss	status,2,c
  1474  0043F8  EF00  F022         	goto	u8361
  1475  0043FC  EF02  F022         	goto	u8360
  1476  004400                     u8361:
  1477  004400  EFE0  F021         	goto	l7593
  1478  004404                     u8360:
  1479  004404                     
  1480                           ; BSR set to: 0
  1481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1482  004404  C0F0  F0B7         	movff	_nout,?_vfprintf
  1483  004408  C0F1  F0B8         	movff	_nout+1,?_vfprintf+1
  1484  00440C                     
  1485                           ; BSR set to: 0
  1486  00440C  0012               	return		;funcret
  1487  00440E                     __end_of_vfprintf:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function _vfpfcnvrt *****************
  1491 ;; Defined at:
  1492 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  1495 ;;		 -> NULL(0), 
  1496 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  1497 ;;		 -> vfprintf@cfmt(2), 
  1498 ;;  ap              2   65[BANK0 ] PTR PTR void 
  1499 ;;		 -> printf@ap(2), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  llu             8    0        unsigned long long 
  1502 ;;  ll              8    0        long long 
  1503 ;;  f               4   79[BANK0 ] long long 
  1504 ;;  ct              3   83[BANK0 ] unsigned char [3]
  1505 ;;  vp              3    0        PTR void 
  1506 ;;  cp              3    0        PTR unsigned char 
  1507 ;;  done            2   71[BANK0 ] int 
  1508 ;;  i               2    0        int 
  1509 ;;  c               1   86[BANK0 ] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  2   61[BANK0 ] int 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1519 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;Total ram usage:       26 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:   10
  1526 ;; This function calls:
  1527 ;;		_atoi
  1528 ;;		_efgtoa
  1529 ;;		_fputc
  1530 ;;		_isdigit
  1531 ;;		_isupper
  1532 ;;		_strncmp
  1533 ;;		_tolower
  1534 ;; This function is called by:
  1535 ;;		_vfprintf
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text3
  1540  001C68                     __ptext3:
  1541                           	callstack 0
  1542  001C68                     _vfpfcnvrt:
  1543                           	callstack 18
  1544  001C68                     
  1545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1546  001C68  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1547  001C6C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1548  001C70  CFDE FFF6          	movff	postinc2,tblptrl
  1549  001C74  CFDD FFF7          	movff	postdec2,tblptrh
  1550  001C78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1551  001C78  6AF8               	clrf	tblptru,c
  1552  001C7A                     	endif
  1553  001C7A                     	if	0	;tblptru may be non-zero
  1554  001C7A                     	endif
  1555  001C7A  0008               	tblrd		*
  1556  001C7C  50F5               	movf	tablat,w,c
  1557  001C7E  0A25               	xorlw	37
  1558  001C80  A4D8               	btfss	status,2,c
  1559  001C82  EF45  F00E         	goto	u8151
  1560  001C86  EF47  F00E         	goto	u8150
  1561  001C8A                     u8151:
  1562  001C8A  EF4D  F011         	goto	l7575
  1563  001C8E                     u8150:
  1564  001C8E                     
  1565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1566  001C8E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1567  001C92  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1568  001C96  2ADE               	incf	postinc2,f,c
  1569  001C98  0E00               	movlw	0
  1570  001C9A  22DD               	addwfc	postdec2,f,c
  1571  001C9C                     
  1572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1573  001C9C  0E00               	movlw	0
  1574  001C9E  0100               	movlb	0	; () banked
  1575  001CA0  6FF3               	movwf	(_width+1)& (0+255),b
  1576  001CA2  0E00               	movlw	0
  1577  001CA4  6FF2               	movwf	_width& (0+255),b
  1578  001CA6  C0F2  F0F6         	movff	_width,_flags
  1579  001CAA  C0F3  F0F7         	movff	_width+1,_flags+1
  1580  001CAE                     
  1581                           ; BSR set to: 0
  1582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1583  001CAE  69F4               	setf	_prec& (0+255),b
  1584  001CB0  69F5               	setf	(_prec+1)& (0+255),b
  1585  001CB2                     
  1586                           ; BSR set to: 0
  1587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1588  001CB2  0E00               	movlw	0
  1589  001CB4  6FA8               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1590  001CB6  0E00               	movlw	0
  1591  001CB8  6FA7               	movwf	vfpfcnvrt@done& (0+255),b
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1594  001CBA  EFA6  F00E         	goto	l7479
  1595  001CBE                     l7453:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1599  001CBE  81F6               	bsf	_flags& (0+255),0,b
  1600  001CC0                     l7455:
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1604  001CC0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1605  001CC4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1606  001CC8  2ADE               	incf	postinc2,f,c
  1607  001CCA  0E00               	movlw	0
  1608  001CCC  22DD               	addwfc	postdec2,f,c
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1611  001CCE  EFA6  F00E         	goto	l7479
  1612  001CD2                     l7457:
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1616  001CD2  83F6               	bsf	_flags& (0+255),1,b
  1617  001CD4  EF60  F00E         	goto	l7455
  1618  001CD8                     l7461:
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1622  001CD8  85F6               	bsf	_flags& (0+255),2,b
  1623  001CDA  EF60  F00E         	goto	l7455
  1624  001CDE                     l7465:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1628  001CDE  87F6               	bsf	_flags& (0+255),3,b
  1629  001CE0  EF60  F00E         	goto	l7455
  1630  001CE4                     l7469:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1634  001CE4  89F6               	bsf	_flags& (0+255),4,b
  1635  001CE6  EF60  F00E         	goto	l7455
  1636  001CEA                     l7473:
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1640  001CEA  0E00               	movlw	0
  1641  001CEC  6FA8               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1642  001CEE  0E01               	movlw	1
  1643  001CF0  6FA7               	movwf	vfpfcnvrt@done& (0+255),b
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1646  001CF2  EFA6  F00E         	goto	l7479
  1647  001CF6                     l7477:
  1648                           
  1649                           ; BSR set to: 0
  1650  001CF6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1651  001CFA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1652  001CFE  CFDE FFF6          	movff	postinc2,tblptrl
  1653  001D02  CFDD FFF7          	movff	postdec2,tblptrh
  1654  001D06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1655  001D06  6AF8               	clrf	tblptru,c
  1656  001D08                     	endif
  1657  001D08                     	if	0	;tblptru may be non-zero
  1658  001D08                     	endif
  1659  001D08  0008               	tblrd		*
  1660  001D0A  50F5               	movf	tablat,w,c
  1661  001D0C  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  1662  001D0E  6BA4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1663                           
  1664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1665                           ; Switch size 1, requested type "simple"
  1666                           ; Number of cases is 1, Range of values is 0 to 0
  1667                           ; switch strategies available:
  1668                           ; Name         Instructions Cycles
  1669                           ; simple_byte            4     3 (average)
  1670                           ;	Chosen strategy is simple_byte
  1671  001D10  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1672  001D12  0A00               	xorlw	0	; case 0
  1673  001D14  B4D8               	btfsc	status,2,c
  1674  001D16  EF8F  F00E         	goto	l7803
  1675  001D1A  EF75  F00E         	goto	l7473
  1676  001D1E                     l7803:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ; Switch size 1, requested type "simple"
  1680                           ; Number of cases is 5, Range of values is 32 to 48
  1681                           ; switch strategies available:
  1682                           ; Name         Instructions Cycles
  1683                           ; simple_byte           16     9 (average)
  1684                           ;	Chosen strategy is simple_byte
  1685  001D1E  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  1686  001D20  0A20               	xorlw	32	; case 32
  1687  001D22  B4D8               	btfsc	status,2,c
  1688  001D24  EF6F  F00E         	goto	l7465
  1689  001D28  0A03               	xorlw	3	; case 35
  1690  001D2A  B4D8               	btfsc	status,2,c
  1691  001D2C  EF72  F00E         	goto	l7469
  1692  001D30  0A08               	xorlw	8	; case 43
  1693  001D32  B4D8               	btfsc	status,2,c
  1694  001D34  EF6C  F00E         	goto	l7461
  1695  001D38  0A06               	xorlw	6	; case 45
  1696  001D3A  B4D8               	btfsc	status,2,c
  1697  001D3C  EF5F  F00E         	goto	l7453
  1698  001D40  0A1D               	xorlw	29	; case 48
  1699  001D42  B4D8               	btfsc	status,2,c
  1700  001D44  EF69  F00E         	goto	l7457
  1701  001D48  EF75  F00E         	goto	l7473
  1702  001D4C                     l7479:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1706  001D4C  51A7               	movf	vfpfcnvrt@done& (0+255),w,b
  1707  001D4E  11A8               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1708  001D50  B4D8               	btfsc	status,2,c
  1709  001D52  EFAD  F00E         	goto	u8161
  1710  001D56  EFAF  F00E         	goto	u8160
  1711  001D5A                     u8161:
  1712  001D5A  EF7B  F00E         	goto	l7477
  1713  001D5E                     u8160:
  1714  001D5E                     
  1715                           ; BSR set to: 0
  1716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1717  001D5E  A1F6               	btfss	_flags& (0+255),0,b
  1718  001D60  EFB4  F00E         	goto	u8171
  1719  001D64  EFB6  F00E         	goto	u8170
  1720  001D68                     u8171:
  1721  001D68  EFB7  F00E         	goto	l7483
  1722  001D6C                     u8170:
  1723  001D6C                     
  1724                           ; BSR set to: 0
  1725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1726  001D6C  93F6               	bcf	_flags& (0+255),1,b
  1727  001D6E                     l7483:
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  1731  001D6E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1732  001D72  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1733  001D76  CFDE FFF6          	movff	postinc2,tblptrl
  1734  001D7A  CFDD FFF7          	movff	postdec2,tblptrh
  1735  001D7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1736  001D7E  6AF8               	clrf	tblptru,c
  1737  001D80                     	endif
  1738  001D80                     	if	0	;tblptru may be non-zero
  1739  001D80                     	endif
  1740  001D80  0008               	tblrd		*
  1741  001D82  50F5               	movf	tablat,w,c
  1742  001D84  0A2A               	xorlw	42
  1743  001D86  A4D8               	btfss	status,2,c
  1744  001D88  EFC8  F00E         	goto	u8181
  1745  001D8C  EFCA  F00E         	goto	u8180
  1746  001D90                     u8181:
  1747  001D90  EFF3  F00E         	goto	l7491
  1748  001D94                     u8180:
  1749  001D94                     
  1750                           ; BSR set to: 0
  1751                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  1752  001D94  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1753  001D98  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1754  001D9C  2ADE               	incf	postinc2,f,c
  1755  001D9E  0E00               	movlw	0
  1756  001DA0  22DD               	addwfc	postdec2,f,c
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1759  001DA2  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1760  001DA6  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1761  001DAA  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  1762  001DAE  0E02               	movlw	2
  1763  001DB0  26DE               	addwf	postinc2,f,c
  1764  001DB2  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  1765  001DB6  0E00               	movlw	0
  1766  001DB8  22DD               	addwfc	postdec2,f,c
  1767  001DBA  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1768  001DBE  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1769  001DC2  CFDE F0F2          	movff	postinc2,_width
  1770  001DC6  CFDD F0F3          	movff	postdec2,_width+1
  1771  001DCA                     
  1772                           ; BSR set to: 0
  1773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  1774  001DCA  BFF3               	btfsc	(_width+1)& (0+255),7,b
  1775  001DCC  EFEC  F00E         	goto	u8190
  1776  001DD0  EFEA  F00E         	goto	u8191
  1777  001DD4                     u8191:
  1778  001DD4  EF38  F00F         	goto	l7501
  1779  001DD8                     u8190:
  1780  001DD8                     
  1781                           ; BSR set to: 0
  1782                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  1783  001DD8  81F6               	bsf	_flags& (0+255),0,b
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  1786  001DDA  6DF2               	negf	_width& (0+255),b
  1787  001DDC  1FF3               	comf	(_width+1)& (0+255),f,b
  1788  001DDE  B0D8               	btfsc	status,0,c
  1789  001DE0  2BF3               	incf	(_width+1)& (0+255),f,b
  1790  001DE2  EF38  F00F         	goto	l7501
  1791  001DE6                     l7491:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  1795  001DE6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1796  001DEA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1797  001DEE  CFDE F00C          	movff	postinc2,atoi@s
  1798  001DF2  CFDD F00D          	movff	postdec2,atoi@s+1
  1799  001DF6  EC8F  F019         	call	_atoi	;wreg free
  1800  001DFA  C00C  F0F2         	movff	?_atoi,_width
  1801  001DFE  C00D  F0F3         	movff	?_atoi+1,_width+1
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1804  001E02  EF0A  F00F         	goto	l7495
  1805  001E06                     l7493:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  1809  001E06  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1810  001E0A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1811  001E0E  2ADE               	incf	postinc2,f,c
  1812  001E10  0E00               	movlw	0
  1813  001E12  22DD               	addwfc	postdec2,f,c
  1814  001E14                     l7495:
  1815  001E14  0ED0               	movlw	208
  1816  001E16  0100               	movlb	0	; () banked
  1817  001E18  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  1818  001E1A  0EFF               	movlw	255
  1819  001E1C  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1820  001E1E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1821  001E22  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1822  001E26  CFDE FFF6          	movff	postinc2,tblptrl
  1823  001E2A  CFDD FFF7          	movff	postdec2,tblptrh
  1824  001E2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1825  001E2E  6AF8               	clrf	tblptru,c
  1826  001E30                     	endif
  1827  001E30                     	if	0	;tblptru may be non-zero
  1828  001E30                     	endif
  1829  001E30  0008               	tblrd		*
  1830  001E32  50F5               	movf	tablat,w,c
  1831  001E34  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1832  001E36  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1833  001E38  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  1834  001E3A  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1835  001E3C  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1836  001E3E  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1837  001E40  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1838  001E42  E10A               	bnz	u8200
  1839  001E44  0E0A               	movlw	10
  1840  001E46  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1841  001E48  A0D8               	btfss	status,0,c
  1842  001E4A  EF29  F00F         	goto	u8201
  1843  001E4E  EF2C  F00F         	goto	u8200
  1844  001E52                     u8201:
  1845  001E52  0E01               	movlw	1
  1846  001E54  EF2D  F00F         	goto	u8210
  1847  001E58                     u8200:
  1848  001E58  0E00               	movlw	0
  1849  001E5A                     u8210:
  1850  001E5A  6FA9               	movwf	_vfpfcnvrt$2128& (0+255),b
  1851  001E5C  6BAA               	clrf	(_vfpfcnvrt$2128+1)& (0+255),b
  1852  001E5E                     
  1853                           ; BSR set to: 0
  1854  001E5E  51A9               	movf	_vfpfcnvrt$2128& (0+255),w,b
  1855  001E60  11AA               	iorwf	(_vfpfcnvrt$2128+1)& (0+255),w,b
  1856  001E62  A4D8               	btfss	status,2,c
  1857  001E64  EF36  F00F         	goto	u8221
  1858  001E68  EF38  F00F         	goto	u8220
  1859  001E6C                     u8221:
  1860  001E6C  EF03  F00F         	goto	l7493
  1861  001E70                     u8220:
  1862  001E70                     l7501:
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1866  001E70  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1867  001E74  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1868  001E78  CFDE FFF6          	movff	postinc2,tblptrl
  1869  001E7C  CFDD FFF7          	movff	postdec2,tblptrh
  1870  001E80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1871  001E80  6AF8               	clrf	tblptru,c
  1872  001E82                     	endif
  1873  001E82                     	if	0	;tblptru may be non-zero
  1874  001E82                     	endif
  1875  001E82  0008               	tblrd		*
  1876  001E84  50F5               	movf	tablat,w,c
  1877  001E86  0A2E               	xorlw	46
  1878  001E88  A4D8               	btfss	status,2,c
  1879  001E8A  EF49  F00F         	goto	u8231
  1880  001E8E  EF4B  F00F         	goto	u8230
  1881  001E92                     u8231:
  1882  001E92  EFCB  F00F         	goto	l7521
  1883  001E96                     u8230:
  1884  001E96                     
  1885                           ; BSR set to: 0
  1886                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1887  001E96  0E00               	movlw	0
  1888  001E98  6FF5               	movwf	(_prec+1)& (0+255),b
  1889  001E9A  0E00               	movlw	0
  1890  001E9C  6FF4               	movwf	_prec& (0+255),b
  1891  001E9E                     
  1892                           ; BSR set to: 0
  1893                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1894  001E9E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1895  001EA2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1896  001EA6  2ADE               	incf	postinc2,f,c
  1897  001EA8  0E00               	movlw	0
  1898  001EAA  22DD               	addwfc	postdec2,f,c
  1899  001EAC                     
  1900                           ; BSR set to: 0
  1901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1902  001EAC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1903  001EB0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1904  001EB4  CFDE FFF6          	movff	postinc2,tblptrl
  1905  001EB8  CFDD FFF7          	movff	postdec2,tblptrh
  1906  001EBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1907  001EBC  6AF8               	clrf	tblptru,c
  1908  001EBE                     	endif
  1909  001EBE                     	if	0	;tblptru may be non-zero
  1910  001EBE                     	endif
  1911  001EBE  0008               	tblrd		*
  1912  001EC0  50F5               	movf	tablat,w,c
  1913  001EC2  0A2A               	xorlw	42
  1914  001EC4  A4D8               	btfss	status,2,c
  1915  001EC6  EF67  F00F         	goto	u8241
  1916  001ECA  EF69  F00F         	goto	u8240
  1917  001ECE                     u8241:
  1918  001ECE  EF86  F00F         	goto	l7511
  1919  001ED2                     u8240:
  1920  001ED2                     
  1921                           ; BSR set to: 0
  1922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1923  001ED2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1924  001ED6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1925  001EDA  2ADE               	incf	postinc2,f,c
  1926  001EDC  0E00               	movlw	0
  1927  001EDE  22DD               	addwfc	postdec2,f,c
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1930  001EE0  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1931  001EE4  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1932  001EE8  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  1933  001EEC  0E02               	movlw	2
  1934  001EEE  26DE               	addwf	postinc2,f,c
  1935  001EF0  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  1936  001EF4  0E00               	movlw	0
  1937  001EF6  22DD               	addwfc	postdec2,f,c
  1938  001EF8  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1939  001EFC  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1940  001F00  CFDE F0F4          	movff	postinc2,_prec
  1941  001F04  CFDD F0F5          	movff	postdec2,_prec+1
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  1944  001F08  EFCB  F00F         	goto	l7521
  1945  001F0C                     l7511:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  1949  001F0C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1950  001F10  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1951  001F14  CFDE F00C          	movff	postinc2,atoi@s
  1952  001F18  CFDD F00D          	movff	postdec2,atoi@s+1
  1953  001F1C  EC8F  F019         	call	_atoi	;wreg free
  1954  001F20  C00C  F0F4         	movff	?_atoi,_prec
  1955  001F24  C00D  F0F5         	movff	?_atoi+1,_prec+1
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1958  001F28  EF9D  F00F         	goto	l7515
  1959  001F2C                     l7513:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  1963  001F2C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1964  001F30  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1965  001F34  2ADE               	incf	postinc2,f,c
  1966  001F36  0E00               	movlw	0
  1967  001F38  22DD               	addwfc	postdec2,f,c
  1968  001F3A                     l7515:
  1969  001F3A  0ED0               	movlw	208
  1970  001F3C  0100               	movlb	0	; () banked
  1971  001F3E  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  1972  001F40  0EFF               	movlw	255
  1973  001F42  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1974  001F44  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1975  001F48  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1976  001F4C  CFDE FFF6          	movff	postinc2,tblptrl
  1977  001F50  CFDD FFF7          	movff	postdec2,tblptrh
  1978  001F54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1979  001F54  6AF8               	clrf	tblptru,c
  1980  001F56                     	endif
  1981  001F56                     	if	0	;tblptru may be non-zero
  1982  001F56                     	endif
  1983  001F56  0008               	tblrd		*
  1984  001F58  50F5               	movf	tablat,w,c
  1985  001F5A  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1986  001F5C  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1987  001F5E  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  1988  001F60  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1989  001F62  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1990  001F64  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1991  001F66  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1992  001F68  E10A               	bnz	u8250
  1993  001F6A  0E0A               	movlw	10
  1994  001F6C  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1995  001F6E  A0D8               	btfss	status,0,c
  1996  001F70  EFBC  F00F         	goto	u8251
  1997  001F74  EFBF  F00F         	goto	u8250
  1998  001F78                     u8251:
  1999  001F78  0E01               	movlw	1
  2000  001F7A  EFC0  F00F         	goto	u8260
  2001  001F7E                     u8250:
  2002  001F7E  0E00               	movlw	0
  2003  001F80                     u8260:
  2004  001F80  6FAB               	movwf	_vfpfcnvrt$2129& (0+255),b
  2005  001F82  6BAC               	clrf	(_vfpfcnvrt$2129+1)& (0+255),b
  2006  001F84                     
  2007                           ; BSR set to: 0
  2008  001F84  51AB               	movf	_vfpfcnvrt$2129& (0+255),w,b
  2009  001F86  11AC               	iorwf	(_vfpfcnvrt$2129+1)& (0+255),w,b
  2010  001F88  A4D8               	btfss	status,2,c
  2011  001F8A  EFC9  F00F         	goto	u8271
  2012  001F8E  EFCB  F00F         	goto	u8270
  2013  001F92                     u8271:
  2014  001F92  EF96  F00F         	goto	l7513
  2015  001F96                     u8270:
  2016  001F96                     l7521:
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  2020  001F96  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2021  001F9A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2022  001F9E  CFDE FFF6          	movff	postinc2,tblptrl
  2023  001FA2  CFDD FFF7          	movff	postdec2,tblptrh
  2024  001FA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2025  001FA6  6AF8               	clrf	tblptru,c
  2026  001FA8                     	endif
  2027  001FA8                     	if	0	;tblptru may be non-zero
  2028  001FA8                     	endif
  2029  001FA8  0008               	tblrd		*
  2030  001FAA  50F5               	movf	tablat,w,c
  2031  001FAC  6E0B               	movwf	tolower@c^0,c
  2032  001FAE  6A0C               	clrf	(tolower@c+1)^0,c
  2033  001FB0  EC07  F022         	call	_tolower	;wreg free
  2034  001FB4  500B               	movf	?_tolower^0,w,c
  2035  001FB6  0100               	movlb	0	; () banked
  2036  001FB8  6FB3               	movwf	vfpfcnvrt@ct& (0+255),b
  2037  001FBA                     
  2038                           ; BSR set to: 0
  2039                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  2040  001FBA  51B3               	movf	vfpfcnvrt@ct& (0+255),w,b
  2041  001FBC  B4D8               	btfsc	status,2,c
  2042  001FBE  EFE3  F00F         	goto	u8281
  2043  001FC2  EFE5  F00F         	goto	u8280
  2044  001FC6                     u8281:
  2045  001FC6  EF21  F010         	goto	l7531
  2046  001FCA                     u8280:
  2047  001FCA                     
  2048                           ; BSR set to: 0
  2049                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  2050  001FCA  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2051  001FCE  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2052  001FD2  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  2053  001FD6  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  2054  001FDA  0E01               	movlw	1
  2055  001FDC  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2056  001FDE  0E00               	movlw	0
  2057  001FE0  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2058  001FE2  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2059  001FE6  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2060  001FEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2061  001FEA  6AF8               	clrf	tblptru,c
  2062  001FEC                     	endif
  2063  001FEC                     	if	0	;tblptru may be non-zero
  2064  001FEC                     	endif
  2065  001FEC  0008               	tblrd		*
  2066  001FEE  50F5               	movf	tablat,w,c
  2067  001FF0  6E0B               	movwf	tolower@c^0,c
  2068  001FF2  6A0C               	clrf	(tolower@c+1)^0,c
  2069  001FF4  EC07  F022         	call	_tolower	;wreg free
  2070  001FF8  500B               	movf	?_tolower^0,w,c
  2071  001FFA  0100               	movlb	0	; () banked
  2072  001FFC  6FB4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2073  001FFE                     
  2074                           ; BSR set to: 0
  2075                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  2076  001FFE  51B4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2077  002000  B4D8               	btfsc	status,2,c
  2078  002002  EF05  F010         	goto	u8291
  2079  002006  EF07  F010         	goto	u8290
  2080  00200A                     u8291:
  2081  00200A  EF21  F010         	goto	l7531
  2082  00200E                     u8290:
  2083  00200E                     
  2084                           ; BSR set to: 0
  2085                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  2086  00200E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2087  002012  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2088  002016  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  2089  00201A  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  2090  00201E  0E02               	movlw	2
  2091  002020  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2092  002022  0E00               	movlw	0
  2093  002024  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2094  002026  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2095  00202A  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2096  00202E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2097  00202E  6AF8               	clrf	tblptru,c
  2098  002030                     	endif
  2099  002030                     	if	0	;tblptru may be non-zero
  2100  002030                     	endif
  2101  002030  0008               	tblrd		*
  2102  002032  50F5               	movf	tablat,w,c
  2103  002034  6E0B               	movwf	tolower@c^0,c
  2104  002036  6A0C               	clrf	(tolower@c+1)^0,c
  2105  002038  EC07  F022         	call	_tolower	;wreg free
  2106  00203C  500B               	movf	?_tolower^0,w,c
  2107  00203E  0100               	movlb	0	; () banked
  2108  002040  6FB5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2109  002042                     l7531:
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  2113  002042  0E66               	movlw	102
  2114  002044  19B3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2115  002046  A4D8               	btfss	status,2,c
  2116  002048  EF28  F010         	goto	u8301
  2117  00204C  EF2A  F010         	goto	u8300
  2118  002050                     u8301:
  2119  002050  EF6B  F010         	goto	l7543
  2120  002054                     u8300:
  2121  002054                     
  2122                           ; BSR set to: 0
  2123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  2124  002054  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2125  002058  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2126  00205C  CFDE FFF6          	movff	postinc2,tblptrl
  2127  002060  CFDD FFF7          	movff	postdec2,tblptrh
  2128  002064                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2129  002064  6AF8               	clrf	tblptru,c
  2130  002066                     	endif
  2131  002066                     	if	0	;tblptru may be non-zero
  2132  002066                     	endif
  2133  002066  0008               	tblrd		*
  2134  002068  CFF5 F0B6          	movff	tablat,vfpfcnvrt@c
  2135  00206C                     
  2136                           ; BSR set to: 0
  2137                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  2138  00206C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2139  002070  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2140  002074  2ADE               	incf	postinc2,f,c
  2141  002076  0E00               	movlw	0
  2142  002078  22DD               	addwfc	postdec2,f,c
  2143  00207A                     
  2144                           ; BSR set to: 0
  2145                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2146  00207A  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2147  00207E  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2148  002082  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2149  002086  0E04               	movlw	4
  2150  002088  26DE               	addwf	postinc2,f,c
  2151  00208A  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2152  00208E  0E00               	movlw	0
  2153  002090  22DD               	addwfc	postdec2,f,c
  2154  002092  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2155  002096  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2156  00209A  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f
  2157  00209E  CFDE F0B0          	movff	postinc2,vfpfcnvrt@f+1
  2158  0020A2  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f+2
  2159  0020A6  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+3
  2160  0020AA                     
  2161                           ; BSR set to: 0
  2162                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  2163  0020AA  C09D  F04F         	movff	vfpfcnvrt@fp,efgtoa@fp
  2164  0020AE  C09E  F050         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2165  0020B2  C0AF  F051         	movff	vfpfcnvrt@f,efgtoa@f
  2166  0020B6  C0B0  F052         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2167  0020BA  C0B1  F053         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2168  0020BE  C0B2  F054         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2169  0020C2  C0B6  F055         	movff	vfpfcnvrt@c,efgtoa@c
  2170  0020C6  EC35  F008         	call	_efgtoa	;wreg free
  2171  0020CA  C04F  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  2172  0020CE  C050  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2173  0020D2  EF69  F011         	goto	l1578
  2174  0020D6                     l7543:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2178  0020D6  0EB3               	movlw	low vfpfcnvrt@ct
  2179  0020D8  6E05               	movwf	strncmp@_l^0,c
  2180  0020DA  0E00               	movlw	high vfpfcnvrt@ct
  2181  0020DC  6E06               	movwf	(strncmp@_l+1)^0,c
  2182  0020DE  0E65               	movlw	low STR_11
  2183  0020E0  6E07               	movwf	strncmp@_r^0,c
  2184  0020E2  0E10               	movlw	high STR_11
  2185  0020E4  6E08               	movwf	(strncmp@_r+1)^0,c
  2186  0020E6  0E00               	movlw	0
  2187  0020E8  6E0A               	movwf	(strncmp@n+1)^0,c
  2188  0020EA  0E02               	movlw	2
  2189  0020EC  6E09               	movwf	strncmp@n^0,c
  2190  0020EE  ECE0  F01B         	call	_strncmp	;wreg free
  2191  0020F2  5005               	movf	?_strncmp^0,w,c
  2192  0020F4  1006               	iorwf	(?_strncmp+1)^0,w,c
  2193  0020F6  A4D8               	btfss	status,2,c
  2194  0020F8  EF80  F010         	goto	u8311
  2195  0020FC  EF82  F010         	goto	u8310
  2196  002100                     u8311:
  2197  002100  EF14  F011         	goto	l7559
  2198  002104                     u8310:
  2199  002104                     
  2200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2201  002104  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2202  002108  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2203  00210C  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  2204  002110  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  2205  002114  0E01               	movlw	1
  2206  002116  0100               	movlb	0	; () banked
  2207  002118  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2208  00211A  0E00               	movlw	0
  2209  00211C  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2210  00211E  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2211  002122  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2212  002126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2213  002126  6AF8               	clrf	tblptru,c
  2214  002128                     	endif
  2215  002128                     	if	0	;tblptru may be non-zero
  2216  002128                     	endif
  2217  002128  0008               	tblrd		*
  2218  00212A  CFF5 F0B6          	movff	tablat,vfpfcnvrt@c
  2219  00212E  0EBF               	movlw	191
  2220  002130  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  2221  002132  0EFF               	movlw	255
  2222  002134  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2223  002136  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2224  00213A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2225  00213E  CFDE FFF6          	movff	postinc2,tblptrl
  2226  002142  CFDD FFF7          	movff	postdec2,tblptrh
  2227  002146                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2228  002146  6AF8               	clrf	tblptru,c
  2229  002148                     	endif
  2230  002148                     	if	0	;tblptru may be non-zero
  2231  002148                     	endif
  2232  002148  0008               	tblrd		*
  2233  00214A  50F5               	movf	tablat,w,c
  2234  00214C  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2235  00214E  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2236  002150  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  2237  002152  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2238  002154  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2239  002156  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2240  002158  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2241  00215A  E10A               	bnz	u8320
  2242  00215C  0E1A               	movlw	26
  2243  00215E  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2244  002160  A0D8               	btfss	status,0,c
  2245  002162  EFB5  F010         	goto	u8321
  2246  002166  EFB8  F010         	goto	u8320
  2247  00216A                     u8321:
  2248  00216A  0E01               	movlw	1
  2249  00216C  EFB9  F010         	goto	u8330
  2250  002170                     u8320:
  2251  002170  0E00               	movlw	0
  2252  002172                     u8330:
  2253  002172  6FAD               	movwf	_vfpfcnvrt$2133& (0+255),b
  2254  002174  6BAE               	clrf	(_vfpfcnvrt$2133+1)& (0+255),b
  2255  002176                     
  2256                           ; BSR set to: 0
  2257  002176  51AD               	movf	_vfpfcnvrt$2133& (0+255),w,b
  2258  002178  11AE               	iorwf	(_vfpfcnvrt$2133+1)& (0+255),w,b
  2259  00217A  B4D8               	btfsc	status,2,c
  2260  00217C  EFC2  F010         	goto	u8341
  2261  002180  EFC4  F010         	goto	u8340
  2262  002184                     u8341:
  2263  002184  EFDE  F010         	goto	l7553
  2264  002188                     u8340:
  2265  002188                     
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2268  002188  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2269  00218C  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2270  002190  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2271  002194  0E04               	movlw	4
  2272  002196  26DE               	addwf	postinc2,f,c
  2273  002198  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2274  00219C  0E00               	movlw	0
  2275  00219E  22DD               	addwfc	postdec2,f,c
  2276  0021A0  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2277  0021A4  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2278  0021A8  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f
  2279  0021AC  CFDE F0B0          	movff	postinc2,vfpfcnvrt@f+1
  2280  0021B0  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f+2
  2281  0021B4  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+3
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  2284  0021B8  EFF6  F010         	goto	l1585
  2285  0021BC                     l7553:
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2289  0021BC  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2290  0021C0  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2291  0021C4  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2292  0021C8  0E04               	movlw	4
  2293  0021CA  26DE               	addwf	postinc2,f,c
  2294  0021CC  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2295  0021D0  0E00               	movlw	0
  2296  0021D2  22DD               	addwfc	postdec2,f,c
  2297  0021D4  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2298  0021D8  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2299  0021DC  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f
  2300  0021E0  CFDE F0B0          	movff	postinc2,vfpfcnvrt@f+1
  2301  0021E4  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f+2
  2302  0021E8  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+3
  2303  0021EC                     l1585:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2307  0021EC  0E02               	movlw	2
  2308  0021EE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2309  0021F2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2310  0021F6  26DE               	addwf	postinc2,f,c
  2311  0021F8  0E00               	movlw	0
  2312  0021FA  22DD               	addwfc	postdec2,f,c
  2313  0021FC                     
  2314                           ; BSR set to: 0
  2315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 938:             
      +                          return efgtoa(fp, f, c);
  2316  0021FC  C09D  F04F         	movff	vfpfcnvrt@fp,efgtoa@fp
  2317  002200  C09E  F050         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2318  002204  C0AF  F051         	movff	vfpfcnvrt@f,efgtoa@f
  2319  002208  C0B0  F052         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2320  00220C  C0B1  F053         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2321  002210  C0B2  F054         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2322  002214  C0B6  F055         	movff	vfpfcnvrt@c,efgtoa@c
  2323  002218  EC35  F008         	call	_efgtoa	;wreg free
  2324  00221C  C04F  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  2325  002220  C050  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2326  002224  EF69  F011         	goto	l1578
  2327  002228                     l7559:
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2330  002228  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2331  00222C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2332  002230  CFDE FFF6          	movff	postinc2,tblptrl
  2333  002234  CFDD FFF7          	movff	postdec2,tblptrh
  2334  002238                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2335  002238  6AF8               	clrf	tblptru,c
  2336  00223A                     	endif
  2337  00223A                     	if	0	;tblptru may be non-zero
  2338  00223A                     	endif
  2339  00223A  0008               	tblrd		*
  2340  00223C  50F5               	movf	tablat,w,c
  2341  00223E  0A25               	xorlw	37
  2342  002240  A4D8               	btfss	status,2,c
  2343  002242  EF25  F011         	goto	u8351
  2344  002246  EF27  F011         	goto	u8350
  2345  00224A                     u8351:
  2346  00224A  EF3F  F011         	goto	l7569
  2347  00224E                     u8350:
  2348  00224E                     
  2349                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2350  00224E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2351  002252  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2352  002256  2ADE               	incf	postinc2,f,c
  2353  002258  0E00               	movlw	0
  2354  00225A  22DD               	addwfc	postdec2,f,c
  2355  00225C                     
  2356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2357  00225C  0E00               	movlw	0
  2358  00225E  6E08               	movwf	(fputc@c+1)^0,c
  2359  002260  0E25               	movlw	37
  2360  002262  6E07               	movwf	fputc@c^0,c
  2361  002264  C09D  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2362  002268  C09E  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2363  00226C  ECEB  F01F         	call	_fputc	;wreg free
  2364  002270                     l7565:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2367  002270  0E00               	movlw	0
  2368  002272  0100               	movlb	0	; () banked
  2369  002274  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2370  002276  0E01               	movlw	1
  2371  002278  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  2372  00227A  EF69  F011         	goto	l1578
  2373  00227E                     l7569:
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2376  00227E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2377  002282  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2378  002286  2ADE               	incf	postinc2,f,c
  2379  002288  0E00               	movlw	0
  2380  00228A  22DD               	addwfc	postdec2,f,c
  2381  00228C                     
  2382                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2383  00228C  0E00               	movlw	0
  2384  00228E  0100               	movlb	0	; () banked
  2385  002290  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2386  002292  0E00               	movlw	0
  2387  002294  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  2388  002296  EF69  F011         	goto	l1578
  2389  00229A                     l7575:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2392  00229A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2393  00229E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2394  0022A2  CFDE FFF6          	movff	postinc2,tblptrl
  2395  0022A6  CFDD FFF7          	movff	postdec2,tblptrh
  2396  0022AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2397  0022AA  6AF8               	clrf	tblptru,c
  2398  0022AC                     	endif
  2399  0022AC                     	if	0	;tblptru may be non-zero
  2400  0022AC                     	endif
  2401  0022AC  0008               	tblrd		*
  2402  0022AE  50F5               	movf	tablat,w,c
  2403  0022B0  6E07               	movwf	fputc@c^0,c
  2404  0022B2  6A08               	clrf	(fputc@c+1)^0,c
  2405  0022B4  C09D  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2406  0022B8  C09E  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2407  0022BC  ECEB  F01F         	call	_fputc	;wreg free
  2408  0022C0                     
  2409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2410  0022C0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2411  0022C4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2412  0022C8  2ADE               	incf	postinc2,f,c
  2413  0022CA  0E00               	movlw	0
  2414  0022CC  22DD               	addwfc	postdec2,f,c
  2415  0022CE  EF38  F011         	goto	l7565
  2416  0022D2                     l1578:
  2417  0022D2  0012               	return		;funcret
  2418  0022D4                     __end_of_vfpfcnvrt:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _strncmp *****************
  2422 ;; Defined at:
  2423 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2426 ;;		 -> vfpfcnvrt@ct(3), 
  2427 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2428 ;;		 -> STR_13(3), 
  2429 ;;  n               2    8[COMRAM] unsigned int 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2432 ;;		 -> STR_13(3), 
  2433 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2434 ;;		 -> vfpfcnvrt@ct(3), 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  2    4[COMRAM] int 
  2437 ;; Registers used:
  2438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2444 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;Total ram usage:       11 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    4
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_vfpfcnvrt
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text4
  2459  0037C0                     __ptext4:
  2460                           	callstack 0
  2461  0037C0                     _strncmp:
  2462                           	callstack 23
  2463  0037C0  C005  F00C         	movff	strncmp@_l,strncmp@l
  2464  0037C4  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2465  0037C8  C007  F00E         	movff	strncmp@_r,strncmp@r
  2466  0037CC  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2467  0037D0  0609               	decf	strncmp@n^0,f,c
  2468  0037D2  A0D8               	btfss	status,0,c
  2469  0037D4  060A               	decf	(strncmp@n+1)^0,f,c
  2470  0037D6  2809               	incf	strncmp@n^0,w,c
  2471  0037D8  E106               	bnz	u8101
  2472  0037DA  280A               	incf	(strncmp@n+1)^0,w,c
  2473  0037DC  A4D8               	btfss	status,2,c
  2474  0037DE  EFF3  F01B         	goto	u8101
  2475  0037E2  EFF5  F01B         	goto	u8100
  2476  0037E6                     u8101:
  2477  0037E6  EF02  F01C         	goto	l7431
  2478  0037EA                     u8100:
  2479  0037EA  0E00               	movlw	0
  2480  0037EC  6E06               	movwf	(?_strncmp+1)^0,c
  2481  0037EE  0E00               	movlw	0
  2482  0037F0  6E05               	movwf	?_strncmp^0,c
  2483  0037F2  EF4D  F01C         	goto	l1703
  2484  0037F6                     l7429:
  2485  0037F6  4A0C               	infsnz	strncmp@l^0,f,c
  2486  0037F8  2A0D               	incf	(strncmp@l+1)^0,f,c
  2487  0037FA  4A0E               	infsnz	strncmp@r^0,f,c
  2488  0037FC  2A0F               	incf	(strncmp@r+1)^0,f,c
  2489  0037FE  0609               	decf	strncmp@n^0,f,c
  2490  003800  A0D8               	btfss	status,0,c
  2491  003802  060A               	decf	(strncmp@n+1)^0,f,c
  2492  003804                     l7431:
  2493  003804  C00C  FFD9         	movff	strncmp@l,fsr2l
  2494  003808  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2495  00380C  50DF               	movf	indf2,w,c
  2496  00380E  B4D8               	btfsc	status,2,c
  2497  003810  EF0C  F01C         	goto	u8111
  2498  003814  EF0E  F01C         	goto	u8110
  2499  003818                     u8111:
  2500  003818  EF3B  F01C         	goto	l7439
  2501  00381C                     u8110:
  2502  00381C  C00E  FFF6         	movff	strncmp@r,tblptrl
  2503  003820  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2504  003824                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2505  003824  6AF8               	clrf	tblptru,c
  2506  003826                     	endif
  2507  003826                     	if	0	;tblptru may be non-zero
  2508  003826                     	endif
  2509  003826  0008               	tblrd		*
  2510  003828  50F5               	movf	tablat,w,c
  2511  00382A  0900               	iorlw	0
  2512  00382C  B4D8               	btfsc	status,2,c
  2513  00382E  EF1B  F01C         	goto	u8121
  2514  003832  EF1D  F01C         	goto	u8120
  2515  003836                     u8121:
  2516  003836  EF3B  F01C         	goto	l7439
  2517  00383A                     u8120:
  2518  00383A  5009               	movf	strncmp@n^0,w,c
  2519  00383C  100A               	iorwf	(strncmp@n+1)^0,w,c
  2520  00383E  B4D8               	btfsc	status,2,c
  2521  003840  EF24  F01C         	goto	u8131
  2522  003844  EF26  F01C         	goto	u8130
  2523  003848                     u8131:
  2524  003848  EF3B  F01C         	goto	l7439
  2525  00384C                     u8130:
  2526  00384C  C00C  FFD9         	movff	strncmp@l,fsr2l
  2527  003850  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2528  003854  50DF               	movf	indf2,w,c
  2529  003856  6E0B               	movwf	??_strncmp^0,c
  2530  003858  C00E  FFF6         	movff	strncmp@r,tblptrl
  2531  00385C  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2532  003860                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2533  003860  6AF8               	clrf	tblptru,c
  2534  003862                     	endif
  2535  003862                     	if	0	;tblptru may be non-zero
  2536  003862                     	endif
  2537  003862  0008               	tblrd		*
  2538  003864  50F5               	movf	tablat,w,c
  2539  003866  180B               	xorwf	??_strncmp^0,w,c
  2540  003868  B4D8               	btfsc	status,2,c
  2541  00386A  EF39  F01C         	goto	u8141
  2542  00386E  EF3B  F01C         	goto	u8140
  2543  003872                     u8141:
  2544  003872  EFFB  F01B         	goto	l7429
  2545  003876                     u8140:
  2546  003876                     l7439:
  2547  003876  C00C  FFD9         	movff	strncmp@l,fsr2l
  2548  00387A  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2549  00387E  50DF               	movf	indf2,w,c
  2550  003880  6E0B               	movwf	??_strncmp^0,c
  2551  003882  C00E  FFF6         	movff	strncmp@r,tblptrl
  2552  003886  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2553  00388A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2554  00388A  6AF8               	clrf	tblptru,c
  2555  00388C                     	endif
  2556  00388C                     	if	0	;tblptru may be non-zero
  2557  00388C                     	endif
  2558  00388C  0008               	tblrd		*
  2559  00388E  50F5               	movf	tablat,w,c
  2560  003890  5C0B               	subwf	??_strncmp^0,w,c
  2561  003892  6E05               	movwf	?_strncmp^0,c
  2562  003894  6A06               	clrf	(?_strncmp+1)^0,c
  2563  003896  A0D8               	btfss	status,0,c
  2564  003898  0606               	decf	(?_strncmp+1)^0,f,c
  2565  00389A                     l1703:
  2566  00389A  0012               	return		;funcret
  2567  00389C                     __end_of_strncmp:
  2568                           	callstack 0
  2569                           
  2570 ;; *************** function _efgtoa *****************
  2571 ;; Defined at:
  2572 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  2575 ;;		 -> NULL(0), 
  2576 ;;  f               4   80[COMRAM] PTR struct _IO_FILE
  2577 ;;  c               1   84[COMRAM] unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  u               4   57[BANK0 ] unsigned char 
  2580 ;;  g               4   49[BANK0 ] unsigned char 
  2581 ;;  l               4   43[BANK0 ] unsigned char 
  2582 ;;  h               4   39[BANK0 ] unsigned char 
  2583 ;;  ou              4    5[BANK0 ] unsigned char 
  2584 ;;  n               2   55[BANK0 ] int 
  2585 ;;  e               2   53[BANK0 ] int 
  2586 ;;  i               2   47[BANK0 ] int 
  2587 ;;  w               2   36[BANK0 ] int 
  2588 ;;  p               2   33[BANK0 ] int 
  2589 ;;  sign            2   31[BANK0 ] int 
  2590 ;;  d               2   29[BANK0 ] int 
  2591 ;;  ne              2   27[BANK0 ] int 
  2592 ;;  m               2   25[BANK0 ] int 
  2593 ;;  pp              2   23[BANK0 ] int 
  2594 ;;  t               2   21[BANK0 ] int 
  2595 ;;  mode            1   38[BANK0 ] unsigned char 
  2596 ;;  nmode           1   35[BANK0 ] unsigned char 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  2   78[COMRAM] int 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2606 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Totals:         7      61       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;Total ram usage:       68 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    9
  2613 ;; This function calls:
  2614 ;;		___awdiv
  2615 ;;		___awmod
  2616 ;;		___fladd
  2617 ;;		___fldiv
  2618 ;;		___fleq
  2619 ;;		___flge
  2620 ;;		___flmul
  2621 ;;		___flneg
  2622 ;;		___flsub
  2623 ;;		___fltol
  2624 ;;		___fpclassifyf
  2625 ;;		_floorf
  2626 ;;		_isupper
  2627 ;;		_pad
  2628 ;;		_strcpy
  2629 ;;		_tolower
  2630 ;; This function is called by:
  2631 ;;		_vfpfcnvrt
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text5
  2636  00106A                     __ptext5:
  2637                           	callstack 0
  2638  00106A                     _efgtoa:
  2639                           	callstack 18
  2640  00106A                     
  2641                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  2642  00106A  0E00               	movlw	0
  2643  00106C  0100               	movlb	0	; () banked
  2644  00106E  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2645  001070  0E00               	movlw	0
  2646  001072  6F7F               	movwf	efgtoa@sign& (0+255),b
  2647  001074                     
  2648                           ; BSR set to: 0
  2649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2650  001074  C051  F091         	movff	efgtoa@f,efgtoa@g
  2651  001078  C052  F092         	movff	efgtoa@f+1,efgtoa@g+1
  2652  00107C  C053  F093         	movff	efgtoa@f+2,efgtoa@g+2
  2653  001080  C054  F094         	movff	efgtoa@f+3,efgtoa@g+3
  2654  001084                     
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2657  001084  BF94               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2658  001086  EF49  F008         	goto	u7510
  2659  00108A  EF47  F008         	goto	u7511
  2660  00108E                     u7511:
  2661  00108E  EF5F  F008         	goto	l7093
  2662  001092                     u7510:
  2663  001092                     
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2666  001092  0E00               	movlw	0
  2667  001094  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2668  001096  0E01               	movlw	1
  2669  001098  6F7F               	movwf	efgtoa@sign& (0+255),b
  2670  00109A                     
  2671                           ; BSR set to: 0
  2672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2673  00109A  C091  F005         	movff	efgtoa@g,___flneg@f1
  2674  00109E  C092  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2675  0010A2  C093  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2676  0010A6  C094  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2677  0010AA  ECF5  F023         	call	___flneg	;wreg free
  2678  0010AE  C005  F091         	movff	?___flneg,efgtoa@g
  2679  0010B2  C006  F092         	movff	?___flneg+1,efgtoa@g+1
  2680  0010B6  C007  F093         	movff	?___flneg+2,efgtoa@g+2
  2681  0010BA  C008  F094         	movff	?___flneg+3,efgtoa@g+3
  2682  0010BE                     l7093:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2685  0010BE  0E00               	movlw	0
  2686  0010C0  0100               	movlb	0	; () banked
  2687  0010C2  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  2688  0010C4  0E00               	movlw	0
  2689  0010C6  6F97               	movwf	efgtoa@n& (0+255),b
  2690  0010C8                     
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2693  0010C8  C0F2  F084         	movff	_width,efgtoa@w
  2694  0010CC  C0F3  F085         	movff	_width+1,efgtoa@w+1
  2695  0010D0                     
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2698  0010D0  517F               	movf	efgtoa@sign& (0+255),w,b
  2699  0010D2  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2700  0010D4  A4D8               	btfss	status,2,c
  2701  0010D6  EF6F  F008         	goto	u7521
  2702  0010DA  EF71  F008         	goto	u7520
  2703  0010DE                     u7521:
  2704  0010DE  EF78  F008         	goto	l7101
  2705  0010E2                     u7520:
  2706  0010E2                     
  2707                           ; BSR set to: 0
  2708  0010E2  A5F6               	btfss	_flags& (0+255),2,b
  2709  0010E4  EF76  F008         	goto	u7531
  2710  0010E8  EF78  F008         	goto	u7530
  2711  0010EC                     u7531:
  2712  0010EC  EF92  F008         	goto	l7113
  2713  0010F0                     u7530:
  2714  0010F0                     l7101:
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2718  0010F0  517F               	movf	efgtoa@sign& (0+255),w,b
  2719  0010F2  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2720  0010F4  A4D8               	btfss	status,2,c
  2721  0010F6  EF7F  F008         	goto	u7541
  2722  0010FA  EF81  F008         	goto	u7540
  2723  0010FE                     u7541:
  2724  0010FE  EF87  F008         	goto	l7105
  2725  001102                     u7540:
  2726  001102                     
  2727                           ; BSR set to: 0
  2728  001102  0E00               	movlw	0
  2729  001104  6F6A               	movwf	(_efgtoa$2102+1)& (0+255),b
  2730  001106  0E2B               	movlw	43
  2731  001108  6F69               	movwf	_efgtoa$2102& (0+255),b
  2732  00110A  EF8B  F008         	goto	l7107
  2733  00110E                     l7105:
  2734                           
  2735                           ; BSR set to: 0
  2736  00110E  0E00               	movlw	0
  2737  001110  6F6A               	movwf	(_efgtoa$2102+1)& (0+255),b
  2738  001112  0E2D               	movlw	45
  2739  001114  6F69               	movwf	_efgtoa$2102& (0+255),b
  2740  001116                     l7107:
  2741                           
  2742                           ; BSR set to: 0
  2743  001116  C069  F124         	movff	_efgtoa$2102,_dbuf
  2744  00111A                     
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  2747  00111A  4B97               	infsnz	efgtoa@n& (0+255),f,b
  2748  00111C  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  2749  00111E                     
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  2752  00111E  0784               	decf	efgtoa@w& (0+255),f,b
  2753  001120  A0D8               	btfss	status,0,c
  2754  001122  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  2755  001124                     l7113:
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2759  001124  C091  F005         	movff	efgtoa@g,___fpclassifyf@x
  2760  001128  C092  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2761  00112C  C093  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2762  001130  C094  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2763  001134  EC61  F01B         	call	___fpclassifyf	;wreg free
  2764  001138  0405               	decf	?___fpclassifyf^0,w,c
  2765  00113A  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2766  00113C  A4D8               	btfss	status,2,c
  2767  00113E  EFA3  F008         	goto	u7551
  2768  001142  EFA5  F008         	goto	u7550
  2769  001146                     u7551:
  2770  001146  EFFC  F008         	goto	l7131
  2771  00114A                     u7550:
  2772  00114A  0EBF               	movlw	191
  2773  00114C  0100               	movlb	0	; () banked
  2774  00114E  6F60               	movwf	??_efgtoa& (0+255),b
  2775  001150  0EFF               	movlw	255
  2776  001152  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2777  001154  5055               	movf	efgtoa@c^0,w,c
  2778  001156  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2779  001158  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2780  00115A  5160               	movf	??_efgtoa& (0+255),w,b
  2781  00115C  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2782  00115E  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2783  001160  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2784  001162  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2785  001164  E10A               	bnz	u7560
  2786  001166  0E1A               	movlw	26
  2787  001168  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2788  00116A  A0D8               	btfss	status,0,c
  2789  00116C  EFBA  F008         	goto	u7561
  2790  001170  EFBD  F008         	goto	u7560
  2791  001174                     u7561:
  2792  001174  0E01               	movlw	1
  2793  001176  EFBE  F008         	goto	u7570
  2794  00117A                     u7560:
  2795  00117A  0E00               	movlw	0
  2796  00117C                     u7570:
  2797  00117C  6F6B               	movwf	_efgtoa$2103& (0+255),b
  2798  00117E  6B6C               	clrf	(_efgtoa$2103+1)& (0+255),b
  2799  001180                     
  2800                           ; BSR set to: 0
  2801  001180  516B               	movf	_efgtoa$2103& (0+255),w,b
  2802  001182  116C               	iorwf	(_efgtoa$2103+1)& (0+255),w,b
  2803  001184  B4D8               	btfsc	status,2,c
  2804  001186  EFC7  F008         	goto	u7581
  2805  00118A  EFC9  F008         	goto	u7580
  2806  00118E                     u7581:
  2807  00118E  EFD7  F008         	goto	l7123
  2808  001192                     u7580:
  2809  001192                     
  2810                           ; BSR set to: 0
  2811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  2812  001192  0E24               	movlw	low _dbuf
  2813  001194  2597               	addwf	efgtoa@n& (0+255),w,b
  2814  001196  6E05               	movwf	strcpy@dest^0,c
  2815  001198  0E01               	movlw	high _dbuf
  2816  00119A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2817  00119C  6E06               	movwf	(strcpy@dest+1)^0,c
  2818  00119E  0E55               	movlw	low STR_3
  2819  0011A0  6E07               	movwf	strcpy@src^0,c
  2820  0011A2  0E10               	movlw	high STR_3
  2821  0011A4  6E08               	movwf	(strcpy@src+1)^0,c
  2822  0011A6  EC37  F022         	call	_strcpy	;wreg free
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  2825  0011AA  EFE3  F008         	goto	l7125
  2826  0011AE                     l7123:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  2830  0011AE  0E24               	movlw	low _dbuf
  2831  0011B0  2597               	addwf	efgtoa@n& (0+255),w,b
  2832  0011B2  6E05               	movwf	strcpy@dest^0,c
  2833  0011B4  0E01               	movlw	high _dbuf
  2834  0011B6  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2835  0011B8  6E06               	movwf	(strcpy@dest+1)^0,c
  2836  0011BA  0E5D               	movlw	low STR_4
  2837  0011BC  6E07               	movwf	strcpy@src^0,c
  2838  0011BE  0E10               	movlw	high STR_4
  2839  0011C0  6E08               	movwf	(strcpy@src+1)^0,c
  2840  0011C2  EC37  F022         	call	_strcpy	;wreg free
  2841  0011C6                     l7125:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2844  0011C6  0100               	movlb	0	; () banked
  2845  0011C8  0EFD               	movlw	253
  2846  0011CA  2784               	addwf	efgtoa@w& (0+255),f,b
  2847  0011CC  0EFF               	movlw	255
  2848  0011CE  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2849  0011D0                     
  2850                           ; BSR set to: 0
  2851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2852  0011D0  C04F  F017         	movff	efgtoa@fp,pad@fp
  2853  0011D4  C050  F018         	movff	efgtoa@fp+1,pad@fp+1
  2854  0011D8  0E24               	movlw	low _dbuf
  2855  0011DA  6E19               	movwf	pad@buf^0,c
  2856  0011DC  0E01               	movlw	high _dbuf
  2857  0011DE  6E1A               	movwf	(pad@buf+1)^0,c
  2858  0011E0  C084  F01B         	movff	efgtoa@w,pad@p
  2859  0011E4  C085  F01C         	movff	efgtoa@w+1,pad@p+1
  2860  0011E8  ECB6  F01C         	call	_pad	;wreg free
  2861  0011EC  C017  F04F         	movff	?_pad,?_efgtoa
  2862  0011F0  C018  F050         	movff	?_pad+1,?_efgtoa+1
  2863  0011F4  EF33  F00E         	goto	l1466
  2864  0011F8                     l7131:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2867  0011F8  C091  F005         	movff	efgtoa@g,___fpclassifyf@x
  2868  0011FC  C092  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2869  001200  C093  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2870  001204  C094  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2871  001208  EC61  F01B         	call	___fpclassifyf	;wreg free
  2872  00120C  5005               	movf	?___fpclassifyf^0,w,c
  2873  00120E  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2874  001210  A4D8               	btfss	status,2,c
  2875  001212  EF0D  F009         	goto	u7591
  2876  001216  EF0F  F009         	goto	u7590
  2877  00121A                     u7591:
  2878  00121A  EF66  F009         	goto	l7149
  2879  00121E                     u7590:
  2880  00121E  0EBF               	movlw	191
  2881  001220  0100               	movlb	0	; () banked
  2882  001222  6F60               	movwf	??_efgtoa& (0+255),b
  2883  001224  0EFF               	movlw	255
  2884  001226  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2885  001228  5055               	movf	efgtoa@c^0,w,c
  2886  00122A  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2887  00122C  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2888  00122E  5160               	movf	??_efgtoa& (0+255),w,b
  2889  001230  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2890  001232  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2891  001234  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2892  001236  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2893  001238  E10A               	bnz	u7600
  2894  00123A  0E1A               	movlw	26
  2895  00123C  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2896  00123E  A0D8               	btfss	status,0,c
  2897  001240  EF24  F009         	goto	u7601
  2898  001244  EF27  F009         	goto	u7600
  2899  001248                     u7601:
  2900  001248  0E01               	movlw	1
  2901  00124A  EF28  F009         	goto	u7610
  2902  00124E                     u7600:
  2903  00124E  0E00               	movlw	0
  2904  001250                     u7610:
  2905  001250  6F6D               	movwf	_efgtoa$2108& (0+255),b
  2906  001252  6B6E               	clrf	(_efgtoa$2108+1)& (0+255),b
  2907  001254                     
  2908                           ; BSR set to: 0
  2909  001254  516D               	movf	_efgtoa$2108& (0+255),w,b
  2910  001256  116E               	iorwf	(_efgtoa$2108+1)& (0+255),w,b
  2911  001258  B4D8               	btfsc	status,2,c
  2912  00125A  EF31  F009         	goto	u7621
  2913  00125E  EF33  F009         	goto	u7620
  2914  001262                     u7621:
  2915  001262  EF41  F009         	goto	l7141
  2916  001266                     u7620:
  2917  001266                     
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  2920  001266  0E24               	movlw	low _dbuf
  2921  001268  2597               	addwf	efgtoa@n& (0+255),w,b
  2922  00126A  6E05               	movwf	strcpy@dest^0,c
  2923  00126C  0E01               	movlw	high _dbuf
  2924  00126E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2925  001270  6E06               	movwf	(strcpy@dest+1)^0,c
  2926  001272  0E59               	movlw	low STR_7
  2927  001274  6E07               	movwf	strcpy@src^0,c
  2928  001276  0E10               	movlw	high STR_7
  2929  001278  6E08               	movwf	(strcpy@src+1)^0,c
  2930  00127A  EC37  F022         	call	_strcpy	;wreg free
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  2933  00127E  EF4D  F009         	goto	l7143
  2934  001282                     l7141:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  2938  001282  0E24               	movlw	low _dbuf
  2939  001284  2597               	addwf	efgtoa@n& (0+255),w,b
  2940  001286  6E05               	movwf	strcpy@dest^0,c
  2941  001288  0E01               	movlw	high _dbuf
  2942  00128A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2943  00128C  6E06               	movwf	(strcpy@dest+1)^0,c
  2944  00128E  0E61               	movlw	low STR_8
  2945  001290  6E07               	movwf	strcpy@src^0,c
  2946  001292  0E10               	movlw	high STR_8
  2947  001294  6E08               	movwf	(strcpy@src+1)^0,c
  2948  001296  EC37  F022         	call	_strcpy	;wreg free
  2949  00129A                     l7143:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 358:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2952  00129A  0100               	movlb	0	; () banked
  2953  00129C  0EFD               	movlw	253
  2954  00129E  2784               	addwf	efgtoa@w& (0+255),f,b
  2955  0012A0  0EFF               	movlw	255
  2956  0012A2  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2957  0012A4                     
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 359:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2960  0012A4  C04F  F017         	movff	efgtoa@fp,pad@fp
  2961  0012A8  C050  F018         	movff	efgtoa@fp+1,pad@fp+1
  2962  0012AC  0E24               	movlw	low _dbuf
  2963  0012AE  6E19               	movwf	pad@buf^0,c
  2964  0012B0  0E01               	movlw	high _dbuf
  2965  0012B2  6E1A               	movwf	(pad@buf+1)^0,c
  2966  0012B4  C084  F01B         	movff	efgtoa@w,pad@p
  2967  0012B8  C085  F01C         	movff	efgtoa@w+1,pad@p+1
  2968  0012BC  ECB6  F01C         	call	_pad	;wreg free
  2969  0012C0  C017  F04F         	movff	?_pad,?_efgtoa
  2970  0012C4  C018  F050         	movff	?_pad+1,?_efgtoa+1
  2971  0012C8  EF33  F00E         	goto	l1466
  2972  0012CC                     l7149:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  2975  0012CC  0E00               	movlw	0
  2976  0012CE  0100               	movlb	0	; () banked
  2977  0012D0  6F99               	movwf	efgtoa@u& (0+255),b
  2978  0012D2  0E00               	movlw	0
  2979  0012D4  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  2980  0012D6  0E80               	movlw	128
  2981  0012D8  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  2982  0012DA  0E3F               	movlw	63
  2983  0012DC  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  2984                           
  2985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  2986  0012DE  0E00               	movlw	0
  2987  0012E0  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2988  0012E2  0E00               	movlw	0
  2989  0012E4  6F95               	movwf	efgtoa@e& (0+255),b
  2990  0012E6                     
  2991                           ; BSR set to: 0
  2992                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  2993  0012E6  C091  F005         	movff	efgtoa@g,___fleq@ff1
  2994  0012EA  C092  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2995  0012EE  C093  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2996  0012F2  C094  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2997  0012F6  0E00               	movlw	0
  2998  0012F8  6E09               	movwf	___fleq@ff2^0,c
  2999  0012FA  0E00               	movlw	0
  3000  0012FC  6E0A               	movwf	(___fleq@ff2+1)^0,c
  3001  0012FE  0E00               	movlw	0
  3002  001300  6E0B               	movwf	(___fleq@ff2+2)^0,c
  3003  001302  0E00               	movlw	0
  3004  001304  6E0C               	movwf	(___fleq@ff2+3)^0,c
  3005  001306  EC43  F01F         	call	___fleq	;wreg free
  3006  00130A  B0D8               	btfsc	status,0,c
  3007  00130C  EF8A  F009         	goto	u7631
  3008  001310  EF8C  F009         	goto	u7630
  3009  001314                     u7631:
  3010  001314  EF0F  F00A         	goto	l7167
  3011  001318                     u7630:
  3012  001318  EFAB  F009         	goto	l7159
  3013  00131C                     l7155:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  3016  00131C  C099  F005         	movff	efgtoa@u,___flmul@b
  3017  001320  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  3018  001324  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  3019  001328  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  3020  00132C  0E00               	movlw	0
  3021  00132E  6E09               	movwf	___flmul@a^0,c
  3022  001330  0E00               	movlw	0
  3023  001332  6E0A               	movwf	(___flmul@a+1)^0,c
  3024  001334  0E20               	movlw	32
  3025  001336  6E0B               	movwf	(___flmul@a+2)^0,c
  3026  001338  0E41               	movlw	65
  3027  00133A  6E0C               	movwf	(___flmul@a+3)^0,c
  3028  00133C  ECCA  F013         	call	___flmul	;wreg free
  3029  001340  C005  F099         	movff	?___flmul,efgtoa@u
  3030  001344  C006  F09A         	movff	?___flmul+1,efgtoa@u+1
  3031  001348  C007  F09B         	movff	?___flmul+2,efgtoa@u+2
  3032  00134C  C008  F09C         	movff	?___flmul+3,efgtoa@u+3
  3033  001350                     
  3034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  3035  001350  0100               	movlb	0	; () banked
  3036  001352  4B95               	infsnz	efgtoa@e& (0+255),f,b
  3037  001354  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3038  001356                     l7159:
  3039                           
  3040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  3041  001356  C091  F01E         	movff	efgtoa@g,___flge@ff1
  3042  00135A  C092  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  3043  00135E  C093  F020         	movff	efgtoa@g+2,___flge@ff1+2
  3044  001362  C094  F021         	movff	efgtoa@g+3,___flge@ff1+3
  3045  001366  0E00               	movlw	0
  3046  001368  6E09               	movwf	___flmul@a^0,c
  3047  00136A  0E00               	movlw	0
  3048  00136C  6E0A               	movwf	(___flmul@a+1)^0,c
  3049  00136E  0E20               	movlw	32
  3050  001370  6E0B               	movwf	(___flmul@a+2)^0,c
  3051  001372  0E41               	movlw	65
  3052  001374  6E0C               	movwf	(___flmul@a+3)^0,c
  3053  001376  C099  F005         	movff	efgtoa@u,___flmul@b
  3054  00137A  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  3055  00137E  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  3056  001382  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  3057  001386  ECCA  F013         	call	___flmul	;wreg free
  3058  00138A  C005  F022         	movff	?___flmul,___flge@ff2
  3059  00138E  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3060  001392  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3061  001396  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3062  00139A  ECDF  F01A         	call	___flge	;wreg free
  3063  00139E  B0D8               	btfsc	status,0,c
  3064  0013A0  EFD4  F009         	goto	u7641
  3065  0013A4  EFD6  F009         	goto	u7640
  3066  0013A8                     u7641:
  3067  0013A8  EF8E  F009         	goto	l7155
  3068  0013AC                     u7640:
  3069  0013AC  EFF6  F009         	goto	l7165
  3070  0013B0                     l7161:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  3073  0013B0  C099  F01E         	movff	efgtoa@u,___fldiv@b
  3074  0013B4  C09A  F01F         	movff	efgtoa@u+1,___fldiv@b+1
  3075  0013B8  C09B  F020         	movff	efgtoa@u+2,___fldiv@b+2
  3076  0013BC  C09C  F021         	movff	efgtoa@u+3,___fldiv@b+3
  3077  0013C0  0E00               	movlw	0
  3078  0013C2  6E22               	movwf	___fldiv@a^0,c
  3079  0013C4  0E00               	movlw	0
  3080  0013C6  6E23               	movwf	(___fldiv@a+1)^0,c
  3081  0013C8  0E20               	movlw	32
  3082  0013CA  6E24               	movwf	(___fldiv@a+2)^0,c
  3083  0013CC  0E41               	movlw	65
  3084  0013CE  6E25               	movwf	(___fldiv@a+3)^0,c
  3085  0013D0  ECDF  F015         	call	___fldiv	;wreg free
  3086  0013D4  C01E  F099         	movff	?___fldiv,efgtoa@u
  3087  0013D8  C01F  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3088  0013DC  C020  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3089  0013E0  C021  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3090  0013E4                     
  3091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  3092  0013E4  0100               	movlb	0	; () banked
  3093  0013E6  0795               	decf	efgtoa@e& (0+255),f,b
  3094  0013E8  A0D8               	btfss	status,0,c
  3095  0013EA  0796               	decf	(efgtoa@e+1)& (0+255),f,b
  3096  0013EC                     l7165:
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  3099  0013EC  C091  F01E         	movff	efgtoa@g,___flge@ff1
  3100  0013F0  C092  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  3101  0013F4  C093  F020         	movff	efgtoa@g+2,___flge@ff1+2
  3102  0013F8  C094  F021         	movff	efgtoa@g+3,___flge@ff1+3
  3103  0013FC  C099  F022         	movff	efgtoa@u,___flge@ff2
  3104  001400  C09A  F023         	movff	efgtoa@u+1,___flge@ff2+1
  3105  001404  C09B  F024         	movff	efgtoa@u+2,___flge@ff2+2
  3106  001408  C09C  F025         	movff	efgtoa@u+3,___flge@ff2+3
  3107  00140C  ECDF  F01A         	call	___flge	;wreg free
  3108  001410  A0D8               	btfss	status,0,c
  3109  001412  EF0D  F00A         	goto	u7651
  3110  001416  EF0F  F00A         	goto	u7650
  3111  00141A                     u7651:
  3112  00141A  EFD8  F009         	goto	l7161
  3113  00141E                     u7650:
  3114  00141E                     l7167:
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  3117  00141E  C055  F00B         	movff	efgtoa@c,tolower@c
  3118  001422  6A0C               	clrf	(tolower@c+1)^0,c
  3119  001424  EC07  F022         	call	_tolower	;wreg free
  3120  001428  500B               	movf	?_tolower^0,w,c
  3121  00142A  0100               	movlb	0	; () banked
  3122  00142C  6F86               	movwf	efgtoa@mode& (0+255),b
  3123  00142E                     
  3124                           ; BSR set to: 0
  3125                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  3126  00142E  C086  F083         	movff	efgtoa@mode,efgtoa@nmode
  3127  001432                     
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  3130  001432  0E67               	movlw	103
  3131  001434  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3132  001436  A4D8               	btfss	status,2,c
  3133  001438  EF20  F00A         	goto	u7661
  3134  00143C  EF22  F00A         	goto	u7660
  3135  001440                     u7661:
  3136  001440  EF48  F00A         	goto	l7181
  3137  001444                     u7660:
  3138  001444                     
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  3141  001444  51F4               	movf	_prec& (0+255),w,b
  3142  001446  11F5               	iorwf	(_prec+1)& (0+255),w,b
  3143  001448  A4D8               	btfss	status,2,c
  3144  00144A  EF29  F00A         	goto	u7671
  3145  00144E  EF2B  F00A         	goto	u7670
  3146  001452                     u7671:
  3147  001452  EF2F  F00A         	goto	l7177
  3148  001456                     u7670:
  3149  001456                     
  3150                           ; BSR set to: 0
  3151                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  3152  001456  0E00               	movlw	0
  3153  001458  6FF5               	movwf	(_prec+1)& (0+255),b
  3154  00145A  0E01               	movlw	1
  3155  00145C  6FF4               	movwf	_prec& (0+255),b
  3156  00145E                     l7177:
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  3160  00145E  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  3161  001460  EF3C  F00A         	goto	u7680
  3162  001464  51F5               	movf	(_prec+1)& (0+255),w,b
  3163  001466  E106               	bnz	u7681
  3164  001468  05F4               	decf	_prec& (0+255),w,b
  3165  00146A  B0D8               	btfsc	status,0,c
  3166  00146C  EF3A  F00A         	goto	u7681
  3167  001470  EF3C  F00A         	goto	u7680
  3168  001474                     u7681:
  3169  001474  EF42  F00A         	goto	l1484
  3170  001478                     u7680:
  3171  001478                     l7179:
  3172                           
  3173                           ; BSR set to: 0
  3174  001478  0E00               	movlw	0
  3175  00147A  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  3176  00147C  0E06               	movlw	6
  3177  00147E  6F81               	movwf	efgtoa@p& (0+255),b
  3178  001480  EF51  F00A         	goto	l7187
  3179  001484                     l1484:
  3180                           
  3181                           ; BSR set to: 0
  3182  001484  C0F4  F081         	movff	_prec,efgtoa@p
  3183  001488  C0F5  F082         	movff	_prec+1,efgtoa@p+1
  3184  00148C  EF51  F00A         	goto	l7187
  3185  001490                     l7181:
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  3189  001490  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  3190  001492  EF4D  F00A         	goto	u7691
  3191  001496  EF4F  F00A         	goto	u7690
  3192  00149A                     u7691:
  3193  00149A  EF3C  F00A         	goto	l7179
  3194  00149E                     u7690:
  3195  00149E  EF42  F00A         	goto	l1484
  3196  0014A2                     l7187:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  3200  0014A2  0E67               	movlw	103
  3201  0014A4  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3202  0014A6  A4D8               	btfss	status,2,c
  3203  0014A8  EF58  F00A         	goto	u7701
  3204  0014AC  EF5A  F00A         	goto	u7700
  3205  0014B0                     u7701:
  3206  0014B0  EF89  F00A         	goto	l7197
  3207  0014B4                     u7700:
  3208  0014B4                     
  3209                           ; BSR set to: 0
  3210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3211  0014B4  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  3212  0014B6  EF68  F00A         	goto	u7710
  3213  0014BA  0EFC               	movlw	252
  3214  0014BC  5D95               	subwf	efgtoa@e& (0+255),w,b
  3215  0014BE  0EFF               	movlw	255
  3216  0014C0  5996               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3217  0014C2  A0D8               	btfss	status,0,c
  3218  0014C4  EF66  F00A         	goto	u7711
  3219  0014C8  EF68  F00A         	goto	u7710
  3220  0014CC                     u7711:
  3221  0014CC  EF87  F00A         	goto	l7195
  3222  0014D0                     u7710:
  3223  0014D0                     
  3224                           ; BSR set to: 0
  3225  0014D0  0EFF               	movlw	255
  3226  0014D2  6F60               	movwf	??_efgtoa& (0+255),b
  3227  0014D4  0EFF               	movlw	255
  3228  0014D6  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3229  0014D8  C081  F062         	movff	efgtoa@p,??_efgtoa+2
  3230  0014DC  C082  F063         	movff	efgtoa@p+1,??_efgtoa+3
  3231  0014E0  5160               	movf	??_efgtoa& (0+255),w,b
  3232  0014E2  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3233  0014E4  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3234  0014E6  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3235  0014E8  5195               	movf	efgtoa@e& (0+255),w,b
  3236  0014EA  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3237  0014EC  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3238  0014EE  0A80               	xorlw	128
  3239  0014F0  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  3240  0014F2  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  3241  0014F4  0A80               	xorlw	128
  3242  0014F6  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3243  0014F8  A0D8               	btfss	status,0,c
  3244  0014FA  EF81  F00A         	goto	u7721
  3245  0014FE  EF83  F00A         	goto	u7720
  3246  001502                     u7721:
  3247  001502  EF87  F00A         	goto	l7195
  3248  001506                     u7720:
  3249  001506                     
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  3252  001506  0E66               	movlw	102
  3253  001508  6F83               	movwf	efgtoa@nmode& (0+255),b
  3254                           
  3255                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  3256  00150A  EF89  F00A         	goto	l7197
  3257  00150E                     l7195:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  3261  00150E  0E65               	movlw	101
  3262  001510  6F83               	movwf	efgtoa@nmode& (0+255),b
  3263  001512                     l7197:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  3267  001512  C081  F079         	movff	efgtoa@p,efgtoa@m
  3268  001516  C082  F07A         	movff	efgtoa@p+1,efgtoa@m+1
  3269  00151A                     
  3270                           ; BSR set to: 0
  3271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3272  00151A  0E67               	movlw	103
  3273  00151C  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3274  00151E  A4D8               	btfss	status,2,c
  3275  001520  EF94  F00A         	goto	u7731
  3276  001524  EF96  F00A         	goto	u7730
  3277  001528                     u7731:
  3278  001528  EFA6  F00A         	goto	l7205
  3279  00152C                     u7730:
  3280  00152C                     
  3281                           ; BSR set to: 0
  3282  00152C  0E66               	movlw	102
  3283  00152E  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3284  001530  A4D8               	btfss	status,2,c
  3285  001532  EF9D  F00A         	goto	u7741
  3286  001536  EF9F  F00A         	goto	u7740
  3287  00153A                     u7741:
  3288  00153A  EFA8  F00A         	goto	l7207
  3289  00153E                     u7740:
  3290  00153E                     
  3291                           ; BSR set to: 0
  3292  00153E  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3293  001540  EFA6  F00A         	goto	u7750
  3294  001544  EFA4  F00A         	goto	u7751
  3295  001548                     u7751:
  3296  001548  EFA8  F00A         	goto	l7207
  3297  00154C                     u7750:
  3298  00154C                     l7205:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  3302  00154C  4B79               	infsnz	efgtoa@m& (0+255),f,b
  3303  00154E  2B7A               	incf	(efgtoa@m+1)& (0+255),f,b
  3304  001550                     l7207:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  3308  001550  0E66               	movlw	102
  3309  001552  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3310  001554  A4D8               	btfss	status,2,c
  3311  001556  EFAF  F00A         	goto	u7761
  3312  00155A  EFB1  F00A         	goto	u7760
  3313  00155E                     u7761:
  3314  00155E  EFD1  F00A         	goto	l7217
  3315  001562                     u7760:
  3316  001562                     
  3317                           ; BSR set to: 0
  3318                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  3319  001562  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3320  001564  EFB8  F00A         	goto	u7770
  3321  001568  EFB6  F00A         	goto	u7771
  3322  00156C                     u7771:
  3323  00156C  EFC4  F00A         	goto	l7213
  3324  001570                     u7770:
  3325  001570                     
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  3328  001570  0E00               	movlw	0
  3329  001572  6F99               	movwf	efgtoa@u& (0+255),b
  3330  001574  0E00               	movlw	0
  3331  001576  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  3332  001578  0E80               	movlw	128
  3333  00157A  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  3334  00157C  0E3F               	movlw	63
  3335  00157E  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  3338  001580  0E00               	movlw	0
  3339  001582  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  3340  001584  0E00               	movlw	0
  3341  001586  6F95               	movwf	efgtoa@e& (0+255),b
  3342  001588                     l7213:
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  3346  001588  0E67               	movlw	103
  3347  00158A  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3348  00158C  B4D8               	btfsc	status,2,c
  3349  00158E  EFCB  F00A         	goto	u7781
  3350  001592  EFCD  F00A         	goto	u7780
  3351  001596                     u7781:
  3352  001596  EFD1  F00A         	goto	l7217
  3353  00159A                     u7780:
  3354  00159A                     
  3355                           ; BSR set to: 0
  3356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  3357  00159A  5195               	movf	efgtoa@e& (0+255),w,b
  3358  00159C  2779               	addwf	efgtoa@m& (0+255),f,b
  3359  00159E  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  3360  0015A0  237A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3361  0015A2                     l7217:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  3365  0015A2  0E00               	movlw	0
  3366  0015A4  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3367  0015A6  0E00               	movlw	0
  3368  0015A8  6F8F               	movwf	efgtoa@i& (0+255),b
  3369  0015AA                     
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  3372  0015AA  C091  F087         	movff	efgtoa@g,efgtoa@h
  3373  0015AE  C092  F088         	movff	efgtoa@g+1,efgtoa@h+1
  3374  0015B2  C093  F089         	movff	efgtoa@g+2,efgtoa@h+2
  3375  0015B6  C094  F08A         	movff	efgtoa@g+3,efgtoa@h+3
  3376  0015BA                     
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  3379  0015BA  C099  F065         	movff	efgtoa@u,efgtoa@ou
  3380  0015BE  C09A  F066         	movff	efgtoa@u+1,efgtoa@ou+1
  3381  0015C2  C09B  F067         	movff	efgtoa@u+2,efgtoa@ou+2
  3382  0015C6  C09C  F068         	movff	efgtoa@u+3,efgtoa@ou+3
  3383                           
  3384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3385  0015CA  EF62  F00B         	goto	l7231
  3386  0015CE                     l7223:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  3390  0015CE  C087  F01E         	movff	efgtoa@h,___fldiv@b
  3391  0015D2  C088  F01F         	movff	efgtoa@h+1,___fldiv@b+1
  3392  0015D6  C089  F020         	movff	efgtoa@h+2,___fldiv@b+2
  3393  0015DA  C08A  F021         	movff	efgtoa@h+3,___fldiv@b+3
  3394  0015DE  C099  F022         	movff	efgtoa@u,___fldiv@a
  3395  0015E2  C09A  F023         	movff	efgtoa@u+1,___fldiv@a+1
  3396  0015E6  C09B  F024         	movff	efgtoa@u+2,___fldiv@a+2
  3397  0015EA  C09C  F025         	movff	efgtoa@u+3,___fldiv@a+3
  3398  0015EE  ECDF  F015         	call	___fldiv	;wreg free
  3399  0015F2  C01E  F037         	movff	?___fldiv,floorf@x
  3400  0015F6  C01F  F038         	movff	?___fldiv+1,floorf@x+1
  3401  0015FA  C020  F039         	movff	?___fldiv+2,floorf@x+2
  3402  0015FE  C021  F03A         	movff	?___fldiv+3,floorf@x+3
  3403  001602  ECAC  F017         	call	_floorf	;wreg free
  3404  001606  C037  F08B         	movff	?_floorf,efgtoa@l
  3405  00160A  C038  F08C         	movff	?_floorf+1,efgtoa@l+1
  3406  00160E  C039  F08D         	movff	?_floorf+2,efgtoa@l+2
  3407  001612  C03A  F08E         	movff	?_floorf+3,efgtoa@l+3
  3408                           
  3409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  3410  001616  C08B  F005         	movff	efgtoa@l,___fltol@f1
  3411  00161A  C08C  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3412  00161E  C08D  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3413  001622  C08E  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3414  001626  EC5C  F01A         	call	___fltol	;wreg free
  3415  00162A  C005  F07D         	movff	?___fltol,efgtoa@d
  3416  00162E  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3417  001632                     
  3418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  3419  001632  C087  F047         	movff	efgtoa@h,___flsub@b
  3420  001636  C088  F048         	movff	efgtoa@h+1,___flsub@b+1
  3421  00163A  C089  F049         	movff	efgtoa@h+2,___flsub@b+2
  3422  00163E  C08A  F04A         	movff	efgtoa@h+3,___flsub@b+3
  3423  001642  C099  F009         	movff	efgtoa@u,___flmul@a
  3424  001646  C09A  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3425  00164A  C09B  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3426  00164E  C09C  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3427  001652  C08B  F005         	movff	efgtoa@l,___flmul@b
  3428  001656  C08C  F006         	movff	efgtoa@l+1,___flmul@b+1
  3429  00165A  C08D  F007         	movff	efgtoa@l+2,___flmul@b+2
  3430  00165E  C08E  F008         	movff	efgtoa@l+3,___flmul@b+3
  3431  001662  ECCA  F013         	call	___flmul	;wreg free
  3432  001666  C005  F04B         	movff	?___flmul,___flsub@a
  3433  00166A  C006  F04C         	movff	?___flmul+1,___flsub@a+1
  3434  00166E  C007  F04D         	movff	?___flmul+2,___flsub@a+2
  3435  001672  C008  F04E         	movff	?___flmul+3,___flsub@a+3
  3436  001676  EC0E  F023         	call	___flsub	;wreg free
  3437  00167A  C047  F087         	movff	?___flsub,efgtoa@h
  3438  00167E  C048  F088         	movff	?___flsub+1,efgtoa@h+1
  3439  001682  C049  F089         	movff	?___flsub+2,efgtoa@h+2
  3440  001686  C04A  F08A         	movff	?___flsub+3,efgtoa@h+3
  3441  00168A                     
  3442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3443  00168A  C099  F01E         	movff	efgtoa@u,___fldiv@b
  3444  00168E  C09A  F01F         	movff	efgtoa@u+1,___fldiv@b+1
  3445  001692  C09B  F020         	movff	efgtoa@u+2,___fldiv@b+2
  3446  001696  C09C  F021         	movff	efgtoa@u+3,___fldiv@b+3
  3447  00169A  0E00               	movlw	0
  3448  00169C  6E22               	movwf	___fldiv@a^0,c
  3449  00169E  0E00               	movlw	0
  3450  0016A0  6E23               	movwf	(___fldiv@a+1)^0,c
  3451  0016A2  0E20               	movlw	32
  3452  0016A4  6E24               	movwf	(___fldiv@a+2)^0,c
  3453  0016A6  0E41               	movlw	65
  3454  0016A8  6E25               	movwf	(___fldiv@a+3)^0,c
  3455  0016AA  ECDF  F015         	call	___fldiv	;wreg free
  3456  0016AE  C01E  F099         	movff	?___fldiv,efgtoa@u
  3457  0016B2  C01F  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3458  0016B6  C020  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3459  0016BA  C021  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3460  0016BE                     
  3461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3462  0016BE  0100               	movlb	0	; () banked
  3463  0016C0  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3464  0016C2  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3465  0016C4                     l7231:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3469  0016C4  5179               	movf	efgtoa@m& (0+255),w,b
  3470  0016C6  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3471  0016C8  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3472  0016CA  0A80               	xorlw	128
  3473  0016CC  6F60               	movwf	??_efgtoa& (0+255),b
  3474  0016CE  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  3475  0016D0  0A80               	xorlw	128
  3476  0016D2  5960               	subwfb	??_efgtoa& (0+255),w,b
  3477  0016D4  A0D8               	btfss	status,0,c
  3478  0016D6  EF6F  F00B         	goto	u7791
  3479  0016DA  EF71  F00B         	goto	u7790
  3480  0016DE                     u7791:
  3481  0016DE  EFE7  F00A         	goto	l7223
  3482  0016E2                     u7790:
  3483  0016E2                     
  3484                           ; BSR set to: 0
  3485                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3486  0016E2  C099  F005         	movff	efgtoa@u,___flmul@b
  3487  0016E6  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  3488  0016EA  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  3489  0016EE  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  3490  0016F2  0E00               	movlw	0
  3491  0016F4  6E09               	movwf	___flmul@a^0,c
  3492  0016F6  0E00               	movlw	0
  3493  0016F8  6E0A               	movwf	(___flmul@a+1)^0,c
  3494  0016FA  0EA0               	movlw	160
  3495  0016FC  6E0B               	movwf	(___flmul@a+2)^0,c
  3496  0016FE  0E40               	movlw	64
  3497  001700  6E0C               	movwf	(___flmul@a+3)^0,c
  3498  001702  ECCA  F013         	call	___flmul	;wreg free
  3499  001706  C005  F08B         	movff	?___flmul,efgtoa@l
  3500  00170A  C006  F08C         	movff	?___flmul+1,efgtoa@l+1
  3501  00170E  C007  F08D         	movff	?___flmul+2,efgtoa@l+2
  3502  001712  C008  F08E         	movff	?___flmul+3,efgtoa@l+3
  3503  001716                     
  3504                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3505  001716  C087  F01E         	movff	efgtoa@h,___flge@ff1
  3506  00171A  C088  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3507  00171E  C089  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3508  001722  C08A  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3509  001726  C08B  F022         	movff	efgtoa@l,___flge@ff2
  3510  00172A  C08C  F023         	movff	efgtoa@l+1,___flge@ff2+1
  3511  00172E  C08D  F024         	movff	efgtoa@l+2,___flge@ff2+2
  3512  001732  C08E  F025         	movff	efgtoa@l+3,___flge@ff2+3
  3513  001736  ECDF  F01A         	call	___flge	;wreg free
  3514  00173A  B0D8               	btfsc	status,0,c
  3515  00173C  EFA2  F00B         	goto	u7801
  3516  001740  EFA4  F00B         	goto	u7800
  3517  001744                     u7801:
  3518  001744  EFAF  F00B         	goto	l7239
  3519  001748                     u7800:
  3520  001748                     
  3521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3522  001748  0E00               	movlw	0
  3523  00174A  0100               	movlb	0	; () banked
  3524  00174C  6F8B               	movwf	efgtoa@l& (0+255),b
  3525  00174E  0E00               	movlw	0
  3526  001750  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3527  001752  0E00               	movlw	0
  3528  001754  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3529  001756  0E00               	movlw	0
  3530  001758  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3533  00175A  EFD8  F00B         	goto	l7245
  3534  00175E                     l7239:
  3535                           
  3536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3537  00175E  C087  F005         	movff	efgtoa@h,___fleq@ff1
  3538  001762  C088  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3539  001766  C089  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3540  00176A  C08A  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3541  00176E  C08B  F009         	movff	efgtoa@l,___fleq@ff2
  3542  001772  C08C  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3543  001776  C08D  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3544  00177A  C08E  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3545  00177E  EC43  F01F         	call	___fleq	;wreg free
  3546  001782  A0D8               	btfss	status,0,c
  3547  001784  EFC6  F00B         	goto	u7811
  3548  001788  EFC8  F00B         	goto	u7810
  3549  00178C                     u7811:
  3550  00178C  EFD8  F00B         	goto	l7245
  3551  001790                     u7810:
  3552  001790  0100               	movlb	0	; () banked
  3553  001792  B17D               	btfsc	efgtoa@d& (0+255),0,b
  3554  001794  EFCE  F00B         	goto	u7821
  3555  001798  EFD0  F00B         	goto	u7820
  3556  00179C                     u7821:
  3557  00179C  EFD8  F00B         	goto	l7245
  3558  0017A0                     u7820:
  3559  0017A0                     
  3560                           ; BSR set to: 0
  3561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3562  0017A0  0E00               	movlw	0
  3563  0017A2  6F8B               	movwf	efgtoa@l& (0+255),b
  3564  0017A4  0E00               	movlw	0
  3565  0017A6  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3566  0017A8  0E00               	movlw	0
  3567  0017AA  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3568  0017AC  0E00               	movlw	0
  3569  0017AE  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3570  0017B0                     l7245:
  3571                           
  3572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3573  0017B0  C091  F037         	movff	efgtoa@g,___fladd@b
  3574  0017B4  C092  F038         	movff	efgtoa@g+1,___fladd@b+1
  3575  0017B8  C093  F039         	movff	efgtoa@g+2,___fladd@b+2
  3576  0017BC  C094  F03A         	movff	efgtoa@g+3,___fladd@b+3
  3577  0017C0  C08B  F03B         	movff	efgtoa@l,___fladd@a
  3578  0017C4  C08C  F03C         	movff	efgtoa@l+1,___fladd@a+1
  3579  0017C8  C08D  F03D         	movff	efgtoa@l+2,___fladd@a+2
  3580  0017CC  C08E  F03E         	movff	efgtoa@l+3,___fladd@a+3
  3581  0017D0  EC6A  F011         	call	___fladd	;wreg free
  3582  0017D4  C037  F087         	movff	?___fladd,efgtoa@h
  3583  0017D8  C038  F088         	movff	?___fladd+1,efgtoa@h+1
  3584  0017DC  C039  F089         	movff	?___fladd+2,efgtoa@h+2
  3585  0017E0  C03A  F08A         	movff	?___fladd+3,efgtoa@h+3
  3586  0017E4                     
  3587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3588  0017E4  C065  F099         	movff	efgtoa@ou,efgtoa@u
  3589  0017E8  C066  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  3590  0017EC  C067  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  3591  0017F0  C068  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  3592  0017F4                     
  3593                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3594  0017F4  0E65               	movlw	101
  3595  0017F6  0100               	movlb	0	; () banked
  3596  0017F8  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3597  0017FA  B4D8               	btfsc	status,2,c
  3598  0017FC  EF02  F00C         	goto	u7831
  3599  001800  EF04  F00C         	goto	u7830
  3600  001804                     u7831:
  3601  001804  EF0A  F00C         	goto	l7253
  3602  001808                     u7830:
  3603  001808                     
  3604                           ; BSR set to: 0
  3605  001808  C095  F07B         	movff	efgtoa@e,efgtoa@ne
  3606  00180C  C096  F07C         	movff	efgtoa@e+1,efgtoa@ne+1
  3607  001810  EF0E  F00C         	goto	l1510
  3608  001814                     l7253:
  3609                           
  3610                           ; BSR set to: 0
  3611  001814  0E00               	movlw	0
  3612  001816  6F7C               	movwf	(efgtoa@ne+1)& (0+255),b
  3613  001818  0E00               	movlw	0
  3614  00181A  6F7B               	movwf	efgtoa@ne& (0+255),b
  3615  00181C                     l1510:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3619  00181C  0E00               	movlw	0
  3620  00181E  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3621  001820  0E00               	movlw	0
  3622  001822  6F77               	movwf	efgtoa@pp& (0+255),b
  3623                           
  3624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3625  001824  0E00               	movlw	0
  3626  001826  6F76               	movwf	(efgtoa@t+1)& (0+255),b
  3627  001828  0E00               	movlw	0
  3628  00182A  6F75               	movwf	efgtoa@t& (0+255),b
  3629                           
  3630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3631  00182C  0E00               	movlw	0
  3632  00182E  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3633  001830  0E00               	movlw	0
  3634  001832  6F8F               	movwf	efgtoa@i& (0+255),b
  3635                           
  3636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3637  001834  EF09  F00D         	goto	l7303
  3638  001838                     l7255:
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3642  001838  C087  F01E         	movff	efgtoa@h,___fldiv@b
  3643  00183C  C088  F01F         	movff	efgtoa@h+1,___fldiv@b+1
  3644  001840  C089  F020         	movff	efgtoa@h+2,___fldiv@b+2
  3645  001844  C08A  F021         	movff	efgtoa@h+3,___fldiv@b+3
  3646  001848  C099  F022         	movff	efgtoa@u,___fldiv@a
  3647  00184C  C09A  F023         	movff	efgtoa@u+1,___fldiv@a+1
  3648  001850  C09B  F024         	movff	efgtoa@u+2,___fldiv@a+2
  3649  001854  C09C  F025         	movff	efgtoa@u+3,___fldiv@a+3
  3650  001858  ECDF  F015         	call	___fldiv	;wreg free
  3651  00185C  C01E  F037         	movff	?___fldiv,floorf@x
  3652  001860  C01F  F038         	movff	?___fldiv+1,floorf@x+1
  3653  001864  C020  F039         	movff	?___fldiv+2,floorf@x+2
  3654  001868  C021  F03A         	movff	?___fldiv+3,floorf@x+3
  3655  00186C  ECAC  F017         	call	_floorf	;wreg free
  3656  001870  C037  F08B         	movff	?_floorf,efgtoa@l
  3657  001874  C038  F08C         	movff	?_floorf+1,efgtoa@l+1
  3658  001878  C039  F08D         	movff	?_floorf+2,efgtoa@l+2
  3659  00187C  C03A  F08E         	movff	?_floorf+3,efgtoa@l+3
  3660                           
  3661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3662  001880  C08B  F005         	movff	efgtoa@l,___fltol@f1
  3663  001884  C08C  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3664  001888  C08D  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3665  00188C  C08E  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3666  001890  EC5C  F01A         	call	___fltol	;wreg free
  3667  001894  C005  F07D         	movff	?___fltol,efgtoa@d
  3668  001898  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3669  00189C                     
  3670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3671  00189C  0100               	movlb	0	; () banked
  3672  00189E  B9F6               	btfsc	_flags& (0+255),4,b
  3673  0018A0  EF54  F00C         	goto	u7841
  3674  0018A4  EF56  F00C         	goto	u7840
  3675  0018A8                     u7841:
  3676  0018A8  EF73  F00C         	goto	l7267
  3677  0018AC                     u7840:
  3678  0018AC                     
  3679                           ; BSR set to: 0
  3680  0018AC  517D               	movf	efgtoa@d& (0+255),w,b
  3681  0018AE  117E               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3682  0018B0  A4D8               	btfss	status,2,c
  3683  0018B2  EF5D  F00C         	goto	u7851
  3684  0018B6  EF5F  F00C         	goto	u7850
  3685  0018BA                     u7851:
  3686  0018BA  EF73  F00C         	goto	l7267
  3687  0018BE                     u7850:
  3688  0018BE                     
  3689                           ; BSR set to: 0
  3690  0018BE  0E67               	movlw	103
  3691  0018C0  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3692  0018C2  A4D8               	btfss	status,2,c
  3693  0018C4  EF66  F00C         	goto	u7861
  3694  0018C8  EF68  F00C         	goto	u7860
  3695  0018CC                     u7861:
  3696  0018CC  EF73  F00C         	goto	l7267
  3697  0018D0                     u7860:
  3698  0018D0                     
  3699                           ; BSR set to: 0
  3700  0018D0  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3701  0018D2  EF6F  F00C         	goto	u7870
  3702  0018D6  EF6D  F00C         	goto	u7871
  3703  0018DA                     u7871:
  3704  0018DA  EF73  F00C         	goto	l7267
  3705  0018DE                     u7870:
  3706  0018DE                     
  3707                           ; BSR set to: 0
  3708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3709  0018DE  4B75               	infsnz	efgtoa@t& (0+255),f,b
  3710  0018E0  2B76               	incf	(efgtoa@t+1)& (0+255),f,b
  3711                           
  3712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3713  0018E2  EFBD  F00C         	goto	l7295
  3714  0018E6                     l7267:
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3718  0018E6  5177               	movf	efgtoa@pp& (0+255),w,b
  3719  0018E8  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3720  0018EA  A4D8               	btfss	status,2,c
  3721  0018EC  EF7A  F00C         	goto	u7881
  3722  0018F0  EF7C  F00C         	goto	u7880
  3723  0018F4                     u7881:
  3724  0018F4  EFA6  F00C         	goto	l7287
  3725  0018F8                     u7880:
  3726  0018F8                     
  3727                           ; BSR set to: 0
  3728  0018F8  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3729  0018FA  EF83  F00C         	goto	u7890
  3730  0018FE  EF81  F00C         	goto	u7891
  3731  001902                     u7891:
  3732  001902  EFA6  F00C         	goto	l7287
  3733  001906                     u7890:
  3734  001906                     
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3737  001906  0E24               	movlw	low _dbuf
  3738  001908  2597               	addwf	efgtoa@n& (0+255),w,b
  3739  00190A  6ED9               	movwf	fsr2l,c
  3740  00190C  0E01               	movlw	high _dbuf
  3741  00190E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3742  001910  6EDA               	movwf	fsr2h,c
  3743  001912  0E2E               	movlw	46
  3744  001914  6EDF               	movwf	indf2,c
  3745  001916                     
  3746                           ; BSR set to: 0
  3747  001916  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3748  001918  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3749  00191A                     
  3750                           ; BSR set to: 0
  3751                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  3752  00191A  0784               	decf	efgtoa@w& (0+255),f,b
  3753  00191C  A0D8               	btfss	status,0,c
  3754  00191E  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3755  001920                     
  3756                           ; BSR set to: 0
  3757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  3758  001920  0E00               	movlw	0
  3759  001922  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3760  001924  0E01               	movlw	1
  3761  001926  6F77               	movwf	efgtoa@pp& (0+255),b
  3762  001928  EFA6  F00C         	goto	l7287
  3763  00192C                     l7279:
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  3767  00192C  0E24               	movlw	low _dbuf
  3768  00192E  2597               	addwf	efgtoa@n& (0+255),w,b
  3769  001930  6ED9               	movwf	fsr2l,c
  3770  001932  0E01               	movlw	high _dbuf
  3771  001934  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3772  001936  6EDA               	movwf	fsr2h,c
  3773  001938  0E30               	movlw	48
  3774  00193A  6EDF               	movwf	indf2,c
  3775  00193C                     
  3776                           ; BSR set to: 0
  3777  00193C  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3778  00193E  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3779  001940                     
  3780                           ; BSR set to: 0
  3781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  3782  001940  0784               	decf	efgtoa@w& (0+255),f,b
  3783  001942  A0D8               	btfss	status,0,c
  3784  001944  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3785  001946                     
  3786                           ; BSR set to: 0
  3787                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  3788  001946  0775               	decf	efgtoa@t& (0+255),f,b
  3789  001948  A0D8               	btfss	status,0,c
  3790  00194A  0776               	decf	(efgtoa@t+1)& (0+255),f,b
  3791  00194C                     l7287:
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  3795  00194C  5175               	movf	efgtoa@t& (0+255),w,b
  3796  00194E  1176               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3797  001950  A4D8               	btfss	status,2,c
  3798  001952  EFAD  F00C         	goto	u7901
  3799  001956  EFAF  F00C         	goto	u7900
  3800  00195A                     u7901:
  3801  00195A  EF96  F00C         	goto	l7279
  3802  00195E                     u7900:
  3803  00195E                     
  3804                           ; BSR set to: 0
  3805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  3806  00195E  0E24               	movlw	low _dbuf
  3807  001960  2597               	addwf	efgtoa@n& (0+255),w,b
  3808  001962  6ED9               	movwf	fsr2l,c
  3809  001964  0E01               	movlw	high _dbuf
  3810  001966  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3811  001968  6EDA               	movwf	fsr2h,c
  3812  00196A  517D               	movf	efgtoa@d& (0+255),w,b
  3813  00196C  0F30               	addlw	48
  3814  00196E  6EDF               	movwf	indf2,c
  3815  001970                     
  3816                           ; BSR set to: 0
  3817  001970  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3818  001972  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3819  001974                     
  3820                           ; BSR set to: 0
  3821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  3822  001974  0784               	decf	efgtoa@w& (0+255),f,b
  3823  001976  A0D8               	btfss	status,0,c
  3824  001978  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3825  00197A                     l7295:
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  3829  00197A  C087  F047         	movff	efgtoa@h,___flsub@b
  3830  00197E  C088  F048         	movff	efgtoa@h+1,___flsub@b+1
  3831  001982  C089  F049         	movff	efgtoa@h+2,___flsub@b+2
  3832  001986  C08A  F04A         	movff	efgtoa@h+3,___flsub@b+3
  3833  00198A  C099  F009         	movff	efgtoa@u,___flmul@a
  3834  00198E  C09A  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3835  001992  C09B  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3836  001996  C09C  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3837  00199A  C08B  F005         	movff	efgtoa@l,___flmul@b
  3838  00199E  C08C  F006         	movff	efgtoa@l+1,___flmul@b+1
  3839  0019A2  C08D  F007         	movff	efgtoa@l+2,___flmul@b+2
  3840  0019A6  C08E  F008         	movff	efgtoa@l+3,___flmul@b+3
  3841  0019AA  ECCA  F013         	call	___flmul	;wreg free
  3842  0019AE  C005  F04B         	movff	?___flmul,___flsub@a
  3843  0019B2  C006  F04C         	movff	?___flmul+1,___flsub@a+1
  3844  0019B6  C007  F04D         	movff	?___flmul+2,___flsub@a+2
  3845  0019BA  C008  F04E         	movff	?___flmul+3,___flsub@a+3
  3846  0019BE  EC0E  F023         	call	___flsub	;wreg free
  3847  0019C2  C047  F087         	movff	?___flsub,efgtoa@h
  3848  0019C6  C048  F088         	movff	?___flsub+1,efgtoa@h+1
  3849  0019CA  C049  F089         	movff	?___flsub+2,efgtoa@h+2
  3850  0019CE  C04A  F08A         	movff	?___flsub+3,efgtoa@h+3
  3851  0019D2                     
  3852                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  3853  0019D2  C099  F01E         	movff	efgtoa@u,___fldiv@b
  3854  0019D6  C09A  F01F         	movff	efgtoa@u+1,___fldiv@b+1
  3855  0019DA  C09B  F020         	movff	efgtoa@u+2,___fldiv@b+2
  3856  0019DE  C09C  F021         	movff	efgtoa@u+3,___fldiv@b+3
  3857  0019E2  0E00               	movlw	0
  3858  0019E4  6E22               	movwf	___fldiv@a^0,c
  3859  0019E6  0E00               	movlw	0
  3860  0019E8  6E23               	movwf	(___fldiv@a+1)^0,c
  3861  0019EA  0E20               	movlw	32
  3862  0019EC  6E24               	movwf	(___fldiv@a+2)^0,c
  3863  0019EE  0E41               	movlw	65
  3864  0019F0  6E25               	movwf	(___fldiv@a+3)^0,c
  3865  0019F2  ECDF  F015         	call	___fldiv	;wreg free
  3866  0019F6  C01E  F099         	movff	?___fldiv,efgtoa@u
  3867  0019FA  C01F  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3868  0019FE  C020  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3869  001A02  C021  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3870  001A06                     
  3871                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  3872  001A06  0100               	movlb	0	; () banked
  3873  001A08  077B               	decf	efgtoa@ne& (0+255),f,b
  3874  001A0A  A0D8               	btfss	status,0,c
  3875  001A0C  077C               	decf	(efgtoa@ne+1)& (0+255),f,b
  3876  001A0E                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  3879  001A0E  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3880  001A10  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3881  001A12                     l7303:
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3885  001A12  5179               	movf	efgtoa@m& (0+255),w,b
  3886  001A14  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3887  001A16  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3888  001A18  0A80               	xorlw	128
  3889  001A1A  6F60               	movwf	??_efgtoa& (0+255),b
  3890  001A1C  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  3891  001A1E  0A80               	xorlw	128
  3892  001A20  5960               	subwfb	??_efgtoa& (0+255),w,b
  3893  001A22  B0D8               	btfsc	status,0,c
  3894  001A24  EF16  F00D         	goto	u7911
  3895  001A28  EF18  F00D         	goto	u7910
  3896  001A2C                     u7911:
  3897  001A2C  EF26  F00D         	goto	l7307
  3898  001A30                     u7910:
  3899  001A30                     
  3900                           ; BSR set to: 0
  3901  001A30  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3902  001A32  EF24  F00D         	goto	u7921
  3903  001A36  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  3904  001A38  E109               	bnz	u7920
  3905  001A3A  0E4B               	movlw	75
  3906  001A3C  5D97               	subwf	efgtoa@n& (0+255),w,b
  3907  001A3E  A0D8               	btfss	status,0,c
  3908  001A40  EF24  F00D         	goto	u7921
  3909  001A44  EF26  F00D         	goto	u7920
  3910  001A48                     u7921:
  3911  001A48  EF1C  F00C         	goto	l7255
  3912  001A4C                     u7920:
  3913  001A4C                     l7307:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3917  001A4C  5177               	movf	efgtoa@pp& (0+255),w,b
  3918  001A4E  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3919  001A50  A4D8               	btfss	status,2,c
  3920  001A52  EF2D  F00D         	goto	u7931
  3921  001A56  EF2F  F00D         	goto	u7930
  3922  001A5A                     u7931:
  3923  001A5A  EF40  F00D         	goto	l7315
  3924  001A5E                     u7930:
  3925  001A5E                     
  3926                           ; BSR set to: 0
  3927  001A5E  A9F6               	btfss	_flags& (0+255),4,b
  3928  001A60  EF34  F00D         	goto	u7941
  3929  001A64  EF36  F00D         	goto	u7940
  3930  001A68                     u7941:
  3931  001A68  EF40  F00D         	goto	l7315
  3932  001A6C                     u7940:
  3933  001A6C                     
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  3936  001A6C  0E24               	movlw	low _dbuf
  3937  001A6E  2597               	addwf	efgtoa@n& (0+255),w,b
  3938  001A70  6ED9               	movwf	fsr2l,c
  3939  001A72  0E01               	movlw	high _dbuf
  3940  001A74  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3941  001A76  6EDA               	movwf	fsr2h,c
  3942  001A78  0E2E               	movlw	46
  3943  001A7A  6EDF               	movwf	indf2,c
  3944  001A7C                     
  3945                           ; BSR set to: 0
  3946  001A7C  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3947  001A7E  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3948  001A80                     l7315:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  3952  001A80  0E24               	movlw	low _dbuf
  3953  001A82  2597               	addwf	efgtoa@n& (0+255),w,b
  3954  001A84  6ED9               	movwf	fsr2l,c
  3955  001A86  0E01               	movlw	high _dbuf
  3956  001A88  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3957  001A8A  6EDA               	movwf	fsr2h,c
  3958  001A8C  0E00               	movlw	0
  3959  001A8E  6EDF               	movwf	indf2,c
  3960  001A90                     
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  3963  001A90  0E65               	movlw	101
  3964  001A92  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3965  001A94  A4D8               	btfss	status,2,c
  3966  001A96  EF4F  F00D         	goto	u7951
  3967  001A9A  EF51  F00D         	goto	u7950
  3968  001A9E                     u7951:
  3969  001A9E  EF21  F00E         	goto	l7377
  3970  001AA2                     u7950:
  3971  001AA2                     
  3972                           ; BSR set to: 0
  3973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  3974  001AA2  0E00               	movlw	0
  3975  001AA4  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3976  001AA6  0E4F               	movlw	79
  3977  001AA8  6F8F               	movwf	efgtoa@i& (0+255),b
  3978  001AAA                     
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  3981  001AAA  0E24               	movlw	low _dbuf
  3982  001AAC  258F               	addwf	efgtoa@i& (0+255),w,b
  3983  001AAE  6ED9               	movwf	fsr2l,c
  3984  001AB0  0E01               	movlw	high _dbuf
  3985  001AB2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3986  001AB4  6EDA               	movwf	fsr2h,c
  3987  001AB6  0E00               	movlw	0
  3988  001AB8  6EDF               	movwf	indf2,c
  3989  001ABA                     
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  3992  001ABA  0E00               	movlw	0
  3993  001ABC  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  3994  001ABE  0E00               	movlw	0
  3995  001AC0  6F7F               	movwf	efgtoa@sign& (0+255),b
  3996  001AC2                     
  3997                           ; BSR set to: 0
  3998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  3999  001AC2  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4000  001AC4  EF68  F00D         	goto	u7960
  4001  001AC8  EF66  F00D         	goto	u7961
  4002  001ACC                     u7961:
  4003  001ACC  EF70  F00D         	goto	l7331
  4004  001AD0                     u7960:
  4005  001AD0                     
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  4008  001AD0  0E00               	movlw	0
  4009  001AD2  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  4010  001AD4  0E01               	movlw	1
  4011  001AD6  6F7F               	movwf	efgtoa@sign& (0+255),b
  4012  001AD8                     
  4013                           ; BSR set to: 0
  4014                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  4015  001AD8  6D95               	negf	efgtoa@e& (0+255),b
  4016  001ADA  1F96               	comf	(efgtoa@e+1)& (0+255),f,b
  4017  001ADC  B0D8               	btfsc	status,0,c
  4018  001ADE  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  4019  001AE0                     l7331:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  4023  001AE0  0E00               	movlw	0
  4024  001AE2  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  4025  001AE4  0E02               	movlw	2
  4026  001AE6  6F81               	movwf	efgtoa@p& (0+255),b
  4027                           
  4028                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  4029  001AE8  EFA1  F00D         	goto	l7343
  4030  001AEC                     l7333:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  4034  001AEC  078F               	decf	efgtoa@i& (0+255),f,b
  4035  001AEE  A0D8               	btfss	status,0,c
  4036  001AF0  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4037  001AF2                     
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  4040  001AF2  0E24               	movlw	low _dbuf
  4041  001AF4  258F               	addwf	efgtoa@i& (0+255),w,b
  4042  001AF6  6ED9               	movwf	fsr2l,c
  4043  001AF8  0E01               	movlw	high _dbuf
  4044  001AFA  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4045  001AFC  6EDA               	movwf	fsr2h,c
  4046  001AFE  C095  F005         	movff	efgtoa@e,___awmod@dividend
  4047  001B02  C096  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  4048  001B06  0E00               	movlw	0
  4049  001B08  6E08               	movwf	(___awmod@divisor+1)^0,c
  4050  001B0A  0E0A               	movlw	10
  4051  001B0C  6E07               	movwf	___awmod@divisor^0,c
  4052  001B0E  EC95  F01E         	call	___awmod	;wreg free
  4053  001B12  5005               	movf	?___awmod^0,w,c
  4054  001B14  0F30               	addlw	48
  4055  001B16  6EDF               	movwf	indf2,c
  4056  001B18                     
  4057                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  4058  001B18  C095  F005         	movff	efgtoa@e,___awdiv@dividend
  4059  001B1C  C096  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  4060  001B20  0E00               	movlw	0
  4061  001B22  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4062  001B24  0E0A               	movlw	10
  4063  001B26  6E07               	movwf	___awdiv@divisor^0,c
  4064  001B28  EC19  F01D         	call	___awdiv	;wreg free
  4065  001B2C  C005  F095         	movff	?___awdiv,efgtoa@e
  4066  001B30  C006  F096         	movff	?___awdiv+1,efgtoa@e+1
  4067  001B34                     
  4068                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  4069  001B34  0100               	movlb	0	; () banked
  4070  001B36  0781               	decf	efgtoa@p& (0+255),f,b
  4071  001B38  A0D8               	btfss	status,0,c
  4072  001B3A  0782               	decf	(efgtoa@p+1)& (0+255),f,b
  4073  001B3C                     
  4074                           ; BSR set to: 0
  4075                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  4076  001B3C  0784               	decf	efgtoa@w& (0+255),f,b
  4077  001B3E  A0D8               	btfss	status,0,c
  4078  001B40  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4079  001B42                     l7343:
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  4083  001B42  5195               	movf	efgtoa@e& (0+255),w,b
  4084  001B44  1196               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4085  001B46  A4D8               	btfss	status,2,c
  4086  001B48  EFA8  F00D         	goto	u7971
  4087  001B4C  EFAA  F00D         	goto	u7970
  4088  001B50                     u7971:
  4089  001B50  EF76  F00D         	goto	l7333
  4090  001B54                     u7970:
  4091  001B54                     
  4092                           ; BSR set to: 0
  4093  001B54  BF82               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4094  001B56  EFB7  F00D         	goto	u7980
  4095  001B5A  5182               	movf	(efgtoa@p+1)& (0+255),w,b
  4096  001B5C  E106               	bnz	u7981
  4097  001B5E  0581               	decf	efgtoa@p& (0+255),w,b
  4098  001B60  B0D8               	btfsc	status,0,c
  4099  001B62  EFB5  F00D         	goto	u7981
  4100  001B66  EFB7  F00D         	goto	u7980
  4101  001B6A                     u7981:
  4102  001B6A  EF76  F00D         	goto	l7333
  4103  001B6E                     u7980:
  4104  001B6E                     
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  4107  001B6E  078F               	decf	efgtoa@i& (0+255),f,b
  4108  001B70  A0D8               	btfss	status,0,c
  4109  001B72  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4110  001B74                     
  4111                           ; BSR set to: 0
  4112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  4113  001B74  517F               	movf	efgtoa@sign& (0+255),w,b
  4114  001B76  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4115  001B78  A4D8               	btfss	status,2,c
  4116  001B7A  EFC1  F00D         	goto	u7991
  4117  001B7E  EFC3  F00D         	goto	u7990
  4118  001B82                     u7991:
  4119  001B82  EFC9  F00D         	goto	l7353
  4120  001B86                     u7990:
  4121  001B86                     
  4122                           ; BSR set to: 0
  4123  001B86  0E00               	movlw	0
  4124  001B88  6F70               	movwf	(_efgtoa$2112+1)& (0+255),b
  4125  001B8A  0E2B               	movlw	43
  4126  001B8C  6F6F               	movwf	_efgtoa$2112& (0+255),b
  4127  001B8E  EFCD  F00D         	goto	l7355
  4128  001B92                     l7353:
  4129                           
  4130                           ; BSR set to: 0
  4131  001B92  0E00               	movlw	0
  4132  001B94  6F70               	movwf	(_efgtoa$2112+1)& (0+255),b
  4133  001B96  0E2D               	movlw	45
  4134  001B98  6F6F               	movwf	_efgtoa$2112& (0+255),b
  4135  001B9A                     l7355:
  4136                           
  4137                           ; BSR set to: 0
  4138  001B9A  0E24               	movlw	low _dbuf
  4139  001B9C  258F               	addwf	efgtoa@i& (0+255),w,b
  4140  001B9E  6ED9               	movwf	fsr2l,c
  4141  001BA0  0E01               	movlw	high _dbuf
  4142  001BA2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4143  001BA4  6EDA               	movwf	fsr2h,c
  4144  001BA6  C06F  FFDF         	movff	_efgtoa$2112,indf2
  4145  001BAA                     
  4146                           ; BSR set to: 0
  4147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  4148  001BAA  0784               	decf	efgtoa@w& (0+255),f,b
  4149  001BAC  A0D8               	btfss	status,0,c
  4150  001BAE  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4151  001BB0                     
  4152                           ; BSR set to: 0
  4153                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4154  001BB0  078F               	decf	efgtoa@i& (0+255),f,b
  4155  001BB2  A0D8               	btfss	status,0,c
  4156  001BB4  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4157  001BB6                     
  4158                           ; BSR set to: 0
  4159  001BB6  0EBF               	movlw	191
  4160  001BB8  6F60               	movwf	??_efgtoa& (0+255),b
  4161  001BBA  0EFF               	movlw	255
  4162  001BBC  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  4163  001BBE  5055               	movf	efgtoa@c^0,w,c
  4164  001BC0  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  4165  001BC2  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  4166  001BC4  5160               	movf	??_efgtoa& (0+255),w,b
  4167  001BC6  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  4168  001BC8  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  4169  001BCA  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4170  001BCC  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  4171  001BCE  E10A               	bnz	u8000
  4172  001BD0  0E1A               	movlw	26
  4173  001BD2  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  4174  001BD4  A0D8               	btfss	status,0,c
  4175  001BD6  EFEF  F00D         	goto	u8001
  4176  001BDA  EFF2  F00D         	goto	u8000
  4177  001BDE                     u8001:
  4178  001BDE  0E01               	movlw	1
  4179  001BE0  EFF3  F00D         	goto	u8010
  4180  001BE4                     u8000:
  4181  001BE4  0E00               	movlw	0
  4182  001BE6                     u8010:
  4183  001BE6  6F73               	movwf	_efgtoa$2114& (0+255),b
  4184  001BE8  6B74               	clrf	(_efgtoa$2114+1)& (0+255),b
  4185  001BEA                     
  4186                           ; BSR set to: 0
  4187  001BEA  5173               	movf	_efgtoa$2114& (0+255),w,b
  4188  001BEC  1174               	iorwf	(_efgtoa$2114+1)& (0+255),w,b
  4189  001BEE  A4D8               	btfss	status,2,c
  4190  001BF0  EFFC  F00D         	goto	u8021
  4191  001BF4  EFFE  F00D         	goto	u8020
  4192  001BF8                     u8021:
  4193  001BF8  EF04  F00E         	goto	l7369
  4194  001BFC                     u8020:
  4195  001BFC                     
  4196                           ; BSR set to: 0
  4197  001BFC  0E00               	movlw	0
  4198  001BFE  6F72               	movwf	(_efgtoa$2113+1)& (0+255),b
  4199  001C00  0E65               	movlw	101
  4200  001C02  6F71               	movwf	_efgtoa$2113& (0+255),b
  4201  001C04  EF08  F00E         	goto	l7371
  4202  001C08                     l7369:
  4203                           
  4204                           ; BSR set to: 0
  4205  001C08  0E00               	movlw	0
  4206  001C0A  6F72               	movwf	(_efgtoa$2113+1)& (0+255),b
  4207  001C0C  0E45               	movlw	69
  4208  001C0E  6F71               	movwf	_efgtoa$2113& (0+255),b
  4209  001C10                     l7371:
  4210                           
  4211                           ; BSR set to: 0
  4212  001C10  0E24               	movlw	low _dbuf
  4213  001C12  258F               	addwf	efgtoa@i& (0+255),w,b
  4214  001C14  6ED9               	movwf	fsr2l,c
  4215  001C16  0E01               	movlw	high _dbuf
  4216  001C18  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4217  001C1A  6EDA               	movwf	fsr2h,c
  4218  001C1C  C071  FFDF         	movff	_efgtoa$2113,indf2
  4219  001C20                     
  4220                           ; BSR set to: 0
  4221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  4222  001C20  0784               	decf	efgtoa@w& (0+255),f,b
  4223  001C22  A0D8               	btfss	status,0,c
  4224  001C24  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4225  001C26                     
  4226                           ; BSR set to: 0
  4227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4228  001C26  0E24               	movlw	low _dbuf
  4229  001C28  2597               	addwf	efgtoa@n& (0+255),w,b
  4230  001C2A  6E05               	movwf	strcpy@dest^0,c
  4231  001C2C  0E01               	movlw	high _dbuf
  4232  001C2E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4233  001C30  6E06               	movwf	(strcpy@dest+1)^0,c
  4234  001C32  0E24               	movlw	low _dbuf
  4235  001C34  258F               	addwf	efgtoa@i& (0+255),w,b
  4236  001C36  6E07               	movwf	strcpy@src^0,c
  4237  001C38  0E01               	movlw	high _dbuf
  4238  001C3A  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4239  001C3C  6E08               	movwf	(strcpy@src+1)^0,c
  4240  001C3E  EC37  F022         	call	_strcpy	;wreg free
  4241  001C42                     l7377:
  4242                           
  4243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 502:     return p
      +                          ad(fp, &dbuf[0], w);
  4244  001C42  C04F  F017         	movff	efgtoa@fp,pad@fp
  4245  001C46  C050  F018         	movff	efgtoa@fp+1,pad@fp+1
  4246  001C4A  0E24               	movlw	low _dbuf
  4247  001C4C  6E19               	movwf	pad@buf^0,c
  4248  001C4E  0E01               	movlw	high _dbuf
  4249  001C50  6E1A               	movwf	(pad@buf+1)^0,c
  4250  001C52  C084  F01B         	movff	efgtoa@w,pad@p
  4251  001C56  C085  F01C         	movff	efgtoa@w+1,pad@p+1
  4252  001C5A  ECB6  F01C         	call	_pad	;wreg free
  4253  001C5E  C017  F04F         	movff	?_pad,?_efgtoa
  4254  001C62  C018  F050         	movff	?_pad+1,?_efgtoa+1
  4255  001C66                     l1466:
  4256  001C66  0012               	return		;funcret
  4257  001C68                     __end_of_efgtoa:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function _tolower *****************
  4261 ;; Defined at:
  4262 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  c               2   10[COMRAM] int 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;		None
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  2   10[COMRAM] int 
  4269 ;; Registers used:
  4270 ;;		wreg, status,2, status,0
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;Total ram usage:        8 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    5
  4283 ;; This function calls:
  4284 ;;		_isupper
  4285 ;; This function is called by:
  4286 ;;		_efgtoa
  4287 ;;		_vfpfcnvrt
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text6
  4292  00440E                     __ptext6:
  4293                           	callstack 0
  4294  00440E                     _tolower:
  4295                           	callstack 22
  4296  00440E  0EBF               	movlw	191
  4297  004410  6E0D               	movwf	??_tolower^0,c
  4298  004412  0EFF               	movlw	255
  4299  004414  6E0E               	movwf	(??_tolower+1)^0,c
  4300  004416  C00B  F00F         	movff	tolower@c,??_tolower+2
  4301  00441A  C00C  F010         	movff	tolower@c+1,??_tolower+3
  4302  00441E  500D               	movf	??_tolower^0,w,c
  4303  004420  260F               	addwf	(??_tolower+2)^0,f,c
  4304  004422  500E               	movf	(??_tolower+1)^0,w,c
  4305  004424  2210               	addwfc	(??_tolower+3)^0,f,c
  4306  004426  5010               	movf	(??_tolower+3)^0,w,c
  4307  004428  E10A               	bnz	u7340
  4308  00442A  0E1A               	movlw	26
  4309  00442C  5C0F               	subwf	(??_tolower+2)^0,w,c
  4310  00442E  A0D8               	btfss	status,0,c
  4311  004430  EF1C  F022         	goto	u7341
  4312  004434  EF1F  F022         	goto	u7340
  4313  004438                     u7341:
  4314  004438  0E01               	movlw	1
  4315  00443A  EF20  F022         	goto	u7350
  4316  00443E                     u7340:
  4317  00443E  0E00               	movlw	0
  4318  004440                     u7350:
  4319  004440  6E11               	movwf	_tolower$2256^0,c
  4320  004442  6A12               	clrf	(_tolower$2256+1)^0,c
  4321  004444  5011               	movf	_tolower$2256^0,w,c
  4322  004446  1012               	iorwf	(_tolower$2256+1)^0,w,c
  4323  004448  B4D8               	btfsc	status,2,c
  4324  00444A  EF29  F022         	goto	u7361
  4325  00444E  EF2B  F022         	goto	u7360
  4326  004452                     u7361:
  4327  004452  EF32  F022         	goto	l1713
  4328  004456                     u7360:
  4329  004456  0E20               	movlw	32
  4330  004458  100B               	iorwf	tolower@c^0,w,c
  4331  00445A  6E0B               	movwf	?_tolower^0,c
  4332  00445C  500C               	movf	(tolower@c+1)^0,w,c
  4333  00445E  6E0C               	movwf	(?_tolower+1)^0,c
  4334  004460  EF36  F022         	goto	l1718
  4335  004464                     l1713:
  4336  004464  C00B  F00B         	movff	tolower@c,?_tolower
  4337  004468  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  4338  00446C                     l1718:
  4339  00446C  0012               	return		;funcret
  4340  00446E                     __end_of_tolower:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function _isupper *****************
  4344 ;; Defined at:
  4345 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  c               2    4[COMRAM] int 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  2    4[COMRAM] int 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;Total ram usage:        6 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    4
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_efgtoa
  4370 ;;		_vfpfcnvrt
  4371 ;;		_tolower
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text7
  4376  0047B2                     __ptext7:
  4377                           	callstack 0
  4378  0047B2                     _isupper:
  4379                           	callstack 22
  4380  0047B2  0EBF               	movlw	191
  4381  0047B4  6E07               	movwf	??_isupper^0,c
  4382  0047B6  0EFF               	movlw	255
  4383  0047B8  6E08               	movwf	(??_isupper+1)^0,c
  4384  0047BA  C005  F009         	movff	isupper@c,??_isupper+2
  4385  0047BE  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4386  0047C2  5007               	movf	??_isupper^0,w,c
  4387  0047C4  2609               	addwf	(??_isupper+2)^0,f,c
  4388  0047C6  5008               	movf	(??_isupper+1)^0,w,c
  4389  0047C8  220A               	addwfc	(??_isupper+3)^0,f,c
  4390  0047CA  500A               	movf	(??_isupper+3)^0,w,c
  4391  0047CC  E10A               	bnz	u6490
  4392  0047CE  0E1A               	movlw	26
  4393  0047D0  5C09               	subwf	(??_isupper+2)^0,w,c
  4394  0047D2  A0D8               	btfss	status,0,c
  4395  0047D4  EFEE  F023         	goto	u6491
  4396  0047D8  EFF1  F023         	goto	u6490
  4397  0047DC                     u6491:
  4398  0047DC  0E01               	movlw	1
  4399  0047DE  EFF2  F023         	goto	u6500
  4400  0047E2                     u6490:
  4401  0047E2  0E00               	movlw	0
  4402  0047E4                     u6500:
  4403  0047E4  6E05               	movwf	?_isupper^0,c
  4404  0047E6  6A06               	clrf	(?_isupper+1)^0,c
  4405  0047E8  0012               	return		;funcret
  4406  0047EA                     __end_of_isupper:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _strcpy *****************
  4410 ;; Defined at:
  4411 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4414 ;;		 -> dbuf(80), 
  4415 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4416 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4417 ;;		 -> dbuf(80), 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  d               2   12[COMRAM] PTR unsigned char 
  4420 ;;		 -> dbuf(80), 
  4421 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4422 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4423 ;;		 -> dbuf(80), 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  2    4[COMRAM] PTR unsigned char 
  4426 ;; Registers used:
  4427 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;Total ram usage:       10 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    4
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_efgtoa
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text8
  4448  00446E                     __ptext8:
  4449                           	callstack 0
  4450  00446E                     _strcpy:
  4451                           	callstack 22
  4452  00446E  C007  F00B         	movff	strcpy@src,strcpy@s
  4453  004472  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4454  004476  C005  F00D         	movff	strcpy@dest,strcpy@d
  4455  00447A  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4456  00447E                     l7027:
  4457  00447E  500B               	movf	strcpy@s^0,w,c
  4458  004480  6E09               	movwf	??_strcpy^0,c
  4459  004482  500C               	movf	(strcpy@s+1)^0,w,c
  4460  004484  6E0A               	movwf	(??_strcpy+1)^0,c
  4461  004486  4A0B               	infsnz	strcpy@s^0,f,c
  4462  004488  2A0C               	incf	(strcpy@s+1)^0,f,c
  4463  00448A  C009  FFF6         	movff	??_strcpy,tblptrl
  4464  00448E  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4465  004492  0E00               	movlw	low (__smallconst shr (0+16))
  4466  004494  6EF8               	movwf	tblptru,c
  4467  004496  C00D  FFD9         	movff	strcpy@d,fsr2l
  4468  00449A  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4469  00449E  4A0D               	infsnz	strcpy@d^0,f,c
  4470  0044A0  2A0E               	incf	(strcpy@d+1)^0,f,c
  4471  0044A2  0E0F               	movlw	(high __ramtop+-1)
  4472  0044A4  64F7               	cpfsgt	tblptrh,c
  4473  0044A6  D003               	bra	u7327
  4474  0044A8  0008               	tblrd		*
  4475  0044AA  50F5               	movf	tablat,w,c
  4476  0044AC  D005               	bra	u7320
  4477  0044AE                     u7327:
  4478  0044AE  CFF6 FFE9          	movff	tblptrl,fsr0l
  4479  0044B2  CFF7 FFEA          	movff	tblptrh,fsr0h
  4480  0044B6  50EF               	movf	indf0,w,c
  4481  0044B8                     u7320:
  4482  0044B8  6EDF               	movwf	indf2,c
  4483  0044BA  50DF               	movf	indf2,w,c
  4484  0044BC  A4D8               	btfss	status,2,c
  4485  0044BE  EF63  F022         	goto	u7331
  4486  0044C2  EF65  F022         	goto	u7330
  4487  0044C6                     u7331:
  4488  0044C6  EF3F  F022         	goto	l7027
  4489  0044CA                     u7330:
  4490  0044CA  0012               	return		;funcret
  4491  0044CC                     __end_of_strcpy:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function _pad *****************
  4495 ;; Defined at:
  4496 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4499 ;;		 -> NULL(0), 
  4500 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4501 ;;		 -> dbuf(80), 
  4502 ;;  p               2   26[COMRAM] int 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  w               2   31[COMRAM] int 
  4505 ;;  i               2   29[COMRAM] int 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  2   22[COMRAM] int 
  4508 ;; Registers used:
  4509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4515 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;Total ram usage:       11 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    8
  4522 ;; This function calls:
  4523 ;;		_fputc
  4524 ;;		_fputs
  4525 ;;		_strlen
  4526 ;; This function is called by:
  4527 ;;		_efgtoa
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text9
  4532  00396C                     __ptext9:
  4533                           	callstack 0
  4534  00396C                     _pad:
  4535                           	callstack 18
  4536  00396C                     
  4537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4538  00396C  0100               	movlb	0	; () banked
  4539  00396E  A1F6               	btfss	_flags& (0+255),0,b
  4540  003970  EFBC  F01C         	goto	u7211
  4541  003974  EFBE  F01C         	goto	u7210
  4542  003978                     u7211:
  4543  003978  EFC8  F01C         	goto	l6985
  4544  00397C                     u7210:
  4545  00397C                     
  4546                           ; BSR set to: 0
  4547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4548  00397C  C019  F010         	movff	pad@buf,fputs@s
  4549  003980  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4550  003984  C017  F012         	movff	pad@fp,fputs@fp
  4551  003988  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4552  00398C  EC54  F023         	call	_fputs	;wreg free
  4553  003990                     l6985:
  4554                           
  4555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4556  003990  BE1C               	btfsc	(pad@p+1)^0,7,c
  4557  003992  EFCD  F01C         	goto	u7221
  4558  003996  EFCF  F01C         	goto	u7220
  4559  00399A                     u7221:
  4560  00399A  EFD5  F01C         	goto	l6989
  4561  00399E                     u7220:
  4562  00399E  C01B  F020         	movff	pad@p,pad@w
  4563  0039A2  C01C  F021         	movff	pad@p+1,pad@w+1
  4564  0039A6  EFD9  F01C         	goto	l1443
  4565  0039AA                     l6989:
  4566  0039AA  0E00               	movlw	0
  4567  0039AC  6E21               	movwf	(pad@w+1)^0,c
  4568  0039AE  0E00               	movlw	0
  4569  0039B0  6E20               	movwf	pad@w^0,c
  4570  0039B2                     l1443:
  4571                           
  4572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4573  0039B2  0E00               	movlw	0
  4574  0039B4  6E1F               	movwf	(pad@i+1)^0,c
  4575  0039B6  0E00               	movlw	0
  4576  0039B8  6E1E               	movwf	pad@i^0,c
  4577                           
  4578                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4579  0039BA  EFEB  F01C         	goto	l6995
  4580  0039BE                     l6991:
  4581                           
  4582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4583  0039BE  0E00               	movlw	0
  4584  0039C0  6E08               	movwf	(fputc@c+1)^0,c
  4585  0039C2  0E20               	movlw	32
  4586  0039C4  6E07               	movwf	fputc@c^0,c
  4587  0039C6  C017  F009         	movff	pad@fp,fputc@fp
  4588  0039CA  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4589  0039CE  ECEB  F01F         	call	_fputc	;wreg free
  4590  0039D2                     
  4591                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4592  0039D2  4A1E               	infsnz	pad@i^0,f,c
  4593  0039D4  2A1F               	incf	(pad@i+1)^0,f,c
  4594  0039D6                     l6995:
  4595                           
  4596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4597  0039D6  5020               	movf	pad@w^0,w,c
  4598  0039D8  5C1E               	subwf	pad@i^0,w,c
  4599  0039DA  501F               	movf	(pad@i+1)^0,w,c
  4600  0039DC  0A80               	xorlw	128
  4601  0039DE  6E1D               	movwf	??_pad^0,c
  4602  0039E0  5021               	movf	(pad@w+1)^0,w,c
  4603  0039E2  0A80               	xorlw	128
  4604  0039E4  581D               	subwfb	??_pad^0,w,c
  4605  0039E6  A0D8               	btfss	status,0,c
  4606  0039E8  EFF8  F01C         	goto	u7231
  4607  0039EC  EFFA  F01C         	goto	u7230
  4608  0039F0                     u7231:
  4609  0039F0  EFDF  F01C         	goto	l6991
  4610  0039F4                     u7230:
  4611  0039F4                     
  4612                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4613  0039F4  0100               	movlb	0	; () banked
  4614  0039F6  B1F6               	btfsc	_flags& (0+255),0,b
  4615  0039F8  EF00  F01D         	goto	u7241
  4616  0039FC  EF02  F01D         	goto	u7240
  4617  003A00                     u7241:
  4618  003A00  EF0C  F01D         	goto	l6999
  4619  003A04                     u7240:
  4620  003A04                     
  4621                           ; BSR set to: 0
  4622                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4623  003A04  C019  F010         	movff	pad@buf,fputs@s
  4624  003A08  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4625  003A0C  C017  F012         	movff	pad@fp,fputs@fp
  4626  003A10  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4627  003A14  EC54  F023         	call	_fputs	;wreg free
  4628  003A18                     l6999:
  4629                           
  4630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4631  003A18  C019  F005         	movff	pad@buf,strlen@s
  4632  003A1C  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4633  003A20  EC2D  F024         	call	_strlen	;wreg free
  4634  003A24  5020               	movf	pad@w^0,w,c
  4635  003A26  2405               	addwf	?_strlen^0,w,c
  4636  003A28  6E17               	movwf	?_pad^0,c
  4637  003A2A  5021               	movf	(pad@w+1)^0,w,c
  4638  003A2C  2006               	addwfc	(?_strlen+1)^0,w,c
  4639  003A2E  6E18               	movwf	(?_pad+1)^0,c
  4640  003A30  0012               	return		;funcret
  4641  003A32                     __end_of_pad:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _strlen *****************
  4645 ;; Defined at:
  4646 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4649 ;;		 -> dbuf(80), 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4652 ;;		 -> dbuf(80), 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  2    4[COMRAM] unsigned int 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;Total ram usage:        4 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    4
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_pad
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text10
  4677  00485A                     __ptext10:
  4678                           	callstack 0
  4679  00485A                     _strlen:
  4680                           	callstack 21
  4681  00485A  C005  F007         	movff	strlen@s,strlen@a
  4682  00485E  C006  F008         	movff	strlen@s+1,strlen@a+1
  4683  004862  EF35  F024         	goto	l6521
  4684  004866                     l6519:
  4685  004866  4A05               	infsnz	strlen@s^0,f,c
  4686  004868  2A06               	incf	(strlen@s+1)^0,f,c
  4687  00486A                     l6521:
  4688  00486A  C005  FFD9         	movff	strlen@s,fsr2l
  4689  00486E  C006  FFDA         	movff	strlen@s+1,fsr2h
  4690  004872  50DF               	movf	indf2,w,c
  4691  004874  A4D8               	btfss	status,2,c
  4692  004876  EF3F  F024         	goto	u6481
  4693  00487A  EF41  F024         	goto	u6480
  4694  00487E                     u6481:
  4695  00487E  EF33  F024         	goto	l6519
  4696  004882                     u6480:
  4697  004882  5007               	movf	strlen@a^0,w,c
  4698  004884  5C05               	subwf	strlen@s^0,w,c
  4699  004886  6E05               	movwf	?_strlen^0,c
  4700  004888  5008               	movf	(strlen@a+1)^0,w,c
  4701  00488A  5806               	subwfb	(strlen@s+1)^0,w,c
  4702  00488C  6E06               	movwf	(?_strlen+1)^0,c
  4703  00488E  0012               	return		;funcret
  4704  004890                     __end_of_strlen:
  4705                           	callstack 0
  4706                           
  4707 ;; *************** function _fputs *****************
  4708 ;; Defined at:
  4709 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4712 ;;		 -> dbuf(80), 
  4713 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4714 ;;		 -> NULL(0), 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  i               2   20[COMRAM] int 
  4717 ;;  c               1   19[COMRAM] unsigned char 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  2   15[COMRAM] int 
  4720 ;; Registers used:
  4721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;Total ram usage:        7 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    7
  4734 ;; This function calls:
  4735 ;;		_fputc
  4736 ;; This function is called by:
  4737 ;;		_pad
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text11
  4742  0046A8                     __ptext11:
  4743                           	callstack 0
  4744  0046A8                     _fputs:
  4745                           	callstack 18
  4746  0046A8  0E00               	movlw	0
  4747  0046AA  6E16               	movwf	(fputs@i+1)^0,c
  4748  0046AC  0E00               	movlw	0
  4749  0046AE  6E15               	movwf	fputs@i^0,c
  4750  0046B0  EF65  F023         	goto	l6515
  4751  0046B4                     l6511:
  4752  0046B4  C014  F007         	movff	fputs@c,fputc@c
  4753  0046B8  6A08               	clrf	(fputc@c+1)^0,c
  4754  0046BA  C012  F009         	movff	fputs@fp,fputc@fp
  4755  0046BE  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4756  0046C2  ECEB  F01F         	call	_fputc	;wreg free
  4757  0046C6  4A15               	infsnz	fputs@i^0,f,c
  4758  0046C8  2A16               	incf	(fputs@i+1)^0,f,c
  4759  0046CA                     l6515:
  4760  0046CA  5015               	movf	fputs@i^0,w,c
  4761  0046CC  2410               	addwf	fputs@s^0,w,c
  4762  0046CE  6ED9               	movwf	fsr2l,c
  4763  0046D0  5016               	movf	(fputs@i+1)^0,w,c
  4764  0046D2  2011               	addwfc	(fputs@s+1)^0,w,c
  4765  0046D4  6EDA               	movwf	fsr2h,c
  4766  0046D6  50DF               	movf	indf2,w,c
  4767  0046D8  6E14               	movwf	fputs@c^0,c
  4768  0046DA  5014               	movf	fputs@c^0,w,c
  4769  0046DC  A4D8               	btfss	status,2,c
  4770  0046DE  EF73  F023         	goto	u6471
  4771  0046E2  EF75  F023         	goto	u6470
  4772  0046E6                     u6471:
  4773  0046E6  EF5A  F023         	goto	l6511
  4774  0046EA                     u6470:
  4775  0046EA  0012               	return		;funcret
  4776  0046EC                     __end_of_fputs:
  4777                           	callstack 0
  4778                           
  4779 ;; *************** function _fputc *****************
  4780 ;; Defined at:
  4781 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  c               2    6[COMRAM] int 
  4784 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4785 ;;		 -> NULL(0), 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  2    6[COMRAM] int 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;Total ram usage:        9 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    6
  4804 ;; This function calls:
  4805 ;;		_putch
  4806 ;; This function is called by:
  4807 ;;		_pad
  4808 ;;		_vfpfcnvrt
  4809 ;;		_fputs
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text12
  4814  003FD6                     __ptext12:
  4815                           	callstack 0
  4816  003FD6                     _fputc:
  4817                           	callstack 21
  4818  003FD6  5009               	movf	fputc@fp^0,w,c
  4819  003FD8  100A               	iorwf	(fputc@fp+1)^0,w,c
  4820  003FDA  B4D8               	btfsc	status,2,c
  4821  003FDC  EFF2  F01F         	goto	u6041
  4822  003FE0  EFF4  F01F         	goto	u6040
  4823  003FE4                     u6041:
  4824  003FE4  EFFD  F01F         	goto	l6297
  4825  003FE8                     u6040:
  4826  003FE8  5009               	movf	fputc@fp^0,w,c
  4827  003FEA  100A               	iorwf	(fputc@fp+1)^0,w,c
  4828  003FEC  A4D8               	btfss	status,2,c
  4829  003FEE  EFFB  F01F         	goto	u6051
  4830  003FF2  EFFD  F01F         	goto	u6050
  4831  003FF6                     u6051:
  4832  003FF6  EF02  F020         	goto	l6299
  4833  003FFA                     u6050:
  4834  003FFA                     l6297:
  4835  003FFA  5007               	movf	fputc@c^0,w,c
  4836  003FFC  ECC9  F025         	call	_putch
  4837  004000  EF35  F020         	goto	l1679
  4838  004004                     l6299:
  4839  004004  EE20 F004          	lfsr	2,4
  4840  004008  5009               	movf	fputc@fp^0,w,c
  4841  00400A  26D9               	addwf	fsr2l,f,c
  4842  00400C  500A               	movf	(fputc@fp+1)^0,w,c
  4843  00400E  22DA               	addwfc	fsr2h,f,c
  4844  004010  50DE               	movf	postinc2,w,c
  4845  004012  10DE               	iorwf	postinc2,w,c
  4846  004014  B4D8               	btfsc	status,2,c
  4847  004016  EF0F  F020         	goto	u6061
  4848  00401A  EF11  F020         	goto	u6060
  4849  00401E                     u6061:
  4850  00401E  EF2C  F020         	goto	l6303
  4851  004022                     u6060:
  4852  004022  EE20 F004          	lfsr	2,4
  4853  004026  5009               	movf	fputc@fp^0,w,c
  4854  004028  26D9               	addwf	fsr2l,f,c
  4855  00402A  500A               	movf	(fputc@fp+1)^0,w,c
  4856  00402C  22DA               	addwfc	fsr2h,f,c
  4857  00402E  EE10 F002          	lfsr	1,2
  4858  004032  5009               	movf	fputc@fp^0,w,c
  4859  004034  26E1               	addwf	fsr1l,f,c
  4860  004036  500A               	movf	(fputc@fp+1)^0,w,c
  4861  004038  22E2               	addwfc	fsr1h,f,c
  4862  00403A  50DE               	movf	postinc2,w,c
  4863  00403C  5CE6               	subwf	postinc1,w,c
  4864  00403E  50E6               	movf	postinc1,w,c
  4865  004040  0A80               	xorlw	128
  4866  004042  6E0F               	movwf	(??_fputc+4)^0,c
  4867  004044  50DE               	movf	postinc2,w,c
  4868  004046  0A80               	xorlw	128
  4869  004048  580F               	subwfb	(??_fputc+4)^0,w,c
  4870  00404A  B0D8               	btfsc	status,0,c
  4871  00404C  EF2A  F020         	goto	u6071
  4872  004050  EF2C  F020         	goto	u6070
  4873  004054                     u6071:
  4874  004054  EF35  F020         	goto	l1679
  4875  004058                     u6070:
  4876  004058                     l6303:
  4877  004058  EE20 F002          	lfsr	2,2
  4878  00405C  5009               	movf	fputc@fp^0,w,c
  4879  00405E  26D9               	addwf	fsr2l,f,c
  4880  004060  500A               	movf	(fputc@fp+1)^0,w,c
  4881  004062  22DA               	addwfc	fsr2h,f,c
  4882  004064  2ADE               	incf	postinc2,f,c
  4883  004066  0E00               	movlw	0
  4884  004068  22DD               	addwfc	postdec2,f,c
  4885  00406A                     l1679:
  4886  00406A  0012               	return		;funcret
  4887  00406C                     __end_of_fputc:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _putch *****************
  4891 ;; Defined at:
  4892 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  txData          1    wreg     unsigned char 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  txData          1    5[COMRAM] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;Total ram usage:        1 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    5
  4913 ;; This function calls:
  4914 ;;		_EUSART_Write
  4915 ;; This function is called by:
  4916 ;;		_fputc
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text13
  4921  004B92                     __ptext13:
  4922                           	callstack 0
  4923  004B92                     _putch:
  4924                           	callstack 21
  4925                           
  4926                           ;incstack = 0
  4927                           ;putch@txData stored from wreg
  4928  004B92  6E06               	movwf	putch@txData^0,c
  4929  004B94                     
  4930                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4931  004B94  5006               	movf	putch@txData^0,w,c
  4932  004B96  EC93  F022         	call	_EUSART_Write
  4933  004B9A  0012               	return		;funcret
  4934  004B9C                     __end_of_putch:
  4935                           	callstack 0
  4936                           
  4937 ;; *************** function _EUSART_Write *****************
  4938 ;; Defined at:
  4939 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  txData          1    wreg     unsigned char 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  txData          1    4[COMRAM] unsigned char 
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;Total ram usage:        1 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    4
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_putch
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text14
  4968  004526                     __ptext14:
  4969                           	callstack 0
  4970  004526                     _EUSART_Write:
  4971                           	callstack 21
  4972                           
  4973                           ;incstack = 0
  4974                           ;EUSART_Write@txData stored from wreg
  4975  004526  6E05               	movwf	EUSART_Write@txData^0,c
  4976  004528                     l6275:
  4977                           
  4978                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4979  004528  0100               	movlb	0	; () banked
  4980  00452A  51FE               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  4981  00452C  B4D8               	btfsc	status,2,c
  4982  00452E  EF9B  F022         	goto	u6011
  4983  004532  EF9D  F022         	goto	u6010
  4984  004536                     u6011:
  4985  004536  EF94  F022         	goto	l6275
  4986  00453A                     u6010:
  4987  00453A                     
  4988                           ; BSR set to: 0
  4989                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  4990  00453A  B89D               	btfsc	157,4,c	;volatile
  4991  00453C  EFA2  F022         	goto	u6021
  4992  004540  EFA4  F022         	goto	u6020
  4993  004544                     u6021:
  4994  004544  EFA8  F022         	goto	l595
  4995  004548                     u6020:
  4996  004548                     
  4997                           ; BSR set to: 0
  4998                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4999  004548  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  5000                           
  5001                           ;mcc_generated_files/eusart.c: 182:     }
  5002  00454C  EFBD  F022         	goto	l6289
  5003  004550                     l595:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  5007  004550  989D               	bcf	157,4,c	;volatile
  5008  004552                     
  5009                           ; BSR set to: 0
  5010                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  5011  004552  0ED5               	movlw	low _eusartTxBuffer
  5012  004554  2459               	addwf	_eusartTxHead^0,w,c	;volatile
  5013  004556  6ED9               	movwf	fsr2l,c
  5014  004558  6ADA               	clrf	fsr2h,c
  5015  00455A  0E00               	movlw	high _eusartTxBuffer
  5016  00455C  22DA               	addwfc	fsr2h,f,c
  5017  00455E  C005  FFDF         	movff	EUSART_Write@txData,indf2
  5018  004562                     
  5019                           ; BSR set to: 0
  5020  004562  2A59               	incf	_eusartTxHead^0,f,c	;volatile
  5021  004564                     
  5022                           ; BSR set to: 0
  5023                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  5024  004564  0E07               	movlw	7
  5025  004566  6459               	cpfsgt	_eusartTxHead^0,c	;volatile
  5026  004568  EFB8  F022         	goto	u6031
  5027  00456C  EFBA  F022         	goto	u6030
  5028  004570                     u6031:
  5029  004570  EFBC  F022         	goto	l6287
  5030  004574                     u6030:
  5031  004574                     
  5032                           ; BSR set to: 0
  5033                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  5034  004574  0E00               	movlw	0
  5035  004576  6E59               	movwf	_eusartTxHead^0,c	;volatile
  5036  004578                     l6287:
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  5040  004578  07FE               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  5041  00457A                     l6289:
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  5045  00457A  889D               	bsf	157,4,c	;volatile
  5046  00457C                     
  5047                           ; BSR set to: 0
  5048  00457C  0012               	return		;funcret
  5049  00457E                     __end_of_EUSART_Write:
  5050                           	callstack 0
  5051                           
  5052 ;; *************** function _floorf *****************
  5053 ;; Defined at:
  5054 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  x               4   54[COMRAM] float 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  u               4   70[COMRAM] struct .
  5059 ;;  m               4   64[COMRAM] unsigned long 
  5060 ;;  e               2   68[COMRAM] int 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  4   54[COMRAM] float 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5070 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;Total ram usage:       20 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    4
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_efgtoa
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text15
  5085  002F58                     __ptext15:
  5086                           	callstack 0
  5087  002F58                     _floorf:
  5088                           	callstack 22
  5089  002F58  C0DD  F047         	movff	floorf@F524,floorf@u
  5090  002F5C  C0DE  F048         	movff	floorf@F524+1,floorf@u+1
  5091  002F60  C0DF  F049         	movff	floorf@F524+2,floorf@u+2
  5092  002F64  C0E0  F04A         	movff	floorf@F524+3,floorf@u+3
  5093  002F68  C037  F047         	movff	floorf@x,floorf@u
  5094  002F6C  C038  F048         	movff	floorf@x+1,floorf@u+1
  5095  002F70  C039  F049         	movff	floorf@x+2,floorf@u+2
  5096  002F74  C03A  F04A         	movff	floorf@x+3,floorf@u+3
  5097  002F78  0E81               	movlw	129
  5098  002F7A  6E3B               	movwf	??_floorf^0,c
  5099  002F7C  0EFF               	movlw	255
  5100  002F7E  6E3C               	movwf	(??_floorf+1)^0,c
  5101  002F80  C047  F03D         	movff	floorf@u,??_floorf+2
  5102  002F84  C048  F03E         	movff	floorf@u+1,??_floorf+3
  5103  002F88  C049  F03F         	movff	floorf@u+2,??_floorf+4
  5104  002F8C  C04A  F040         	movff	floorf@u+3,??_floorf+5
  5105  002F90  0E18               	movlw	24
  5106  002F92  EFD0  F017         	goto	u7370
  5107  002F96                     u7375:
  5108  002F96  90D8               	bcf	status,0,c
  5109  002F98  3240               	rrcf	(??_floorf+5)^0,f,c
  5110  002F9A  323F               	rrcf	(??_floorf+4)^0,f,c
  5111  002F9C  323E               	rrcf	(??_floorf+3)^0,f,c
  5112  002F9E  323D               	rrcf	(??_floorf+2)^0,f,c
  5113  002FA0                     u7370:
  5114  002FA0  2EE8               	decfsz	wreg,f,c
  5115  002FA2  EFCB  F017         	goto	u7375
  5116  002FA6  503D               	movf	(??_floorf+2)^0,w,c
  5117  002FA8  243B               	addwf	??_floorf^0,w,c
  5118  002FAA  6E45               	movwf	floorf@e^0,c
  5119  002FAC  0E00               	movlw	0
  5120  002FAE  203C               	addwfc	(??_floorf+1)^0,w,c
  5121  002FB0  6E46               	movwf	(floorf@e+1)^0,c
  5122  002FB2  BE46               	btfsc	(floorf@e+1)^0,7,c
  5123  002FB4  EFE5  F017         	goto	u7381
  5124  002FB8  5046               	movf	(floorf@e+1)^0,w,c
  5125  002FBA  E109               	bnz	u7380
  5126  002FBC  0E17               	movlw	23
  5127  002FBE  5C45               	subwf	floorf@e^0,w,c
  5128  002FC0  A0D8               	btfss	status,0,c
  5129  002FC2  EFE5  F017         	goto	u7381
  5130  002FC6  EFE7  F017         	goto	u7380
  5131  002FCA                     u7381:
  5132  002FCA  EFF1  F017         	goto	l7045
  5133  002FCE                     u7380:
  5134  002FCE                     l7043:
  5135  002FCE  C037  F037         	movff	floorf@x,?_floorf
  5136  002FD2  C038  F038         	movff	floorf@x+1,?_floorf+1
  5137  002FD6  C039  F039         	movff	floorf@x+2,?_floorf+2
  5138  002FDA  C03A  F03A         	movff	floorf@x+3,?_floorf+3
  5139  002FDE  EFB4  F018         	goto	l1640
  5140  002FE2                     l7045:
  5141  002FE2  BE46               	btfsc	(floorf@e+1)^0,7,c
  5142  002FE4  EFF6  F017         	goto	u7391
  5143  002FE8  EFF8  F017         	goto	u7390
  5144  002FEC                     u7391:
  5145  002FEC  EF68  F018         	goto	l7055
  5146  002FF0                     u7390:
  5147  002FF0  C045  F03B         	movff	floorf@e,??_floorf
  5148  002FF4  0EFF               	movlw	255
  5149  002FF6  6E3C               	movwf	(??_floorf+1)^0,c
  5150  002FF8  0EFF               	movlw	255
  5151  002FFA  6E3D               	movwf	(??_floorf+2)^0,c
  5152  002FFC  0E7F               	movlw	127
  5153  002FFE  6E3E               	movwf	(??_floorf+3)^0,c
  5154  003000  0E00               	movlw	0
  5155  003002  6E3F               	movwf	(??_floorf+4)^0,c
  5156  003004                     u7405:
  5157  003004  663B               	tstfsz	??_floorf^0,c
  5158  003006  EF07  F018         	goto	u7406
  5159  00300A  EF0F  F018         	goto	u7407
  5160  00300E                     u7406:
  5161  00300E  343F               	rlcf	(??_floorf+4)^0,w,c
  5162  003010  323F               	rrcf	(??_floorf+4)^0,f,c
  5163  003012  323E               	rrcf	(??_floorf+3)^0,f,c
  5164  003014  323D               	rrcf	(??_floorf+2)^0,f,c
  5165  003016  323C               	rrcf	(??_floorf+1)^0,f,c
  5166  003018  2E3B               	decfsz	??_floorf^0,f,c
  5167  00301A  EF02  F018         	goto	u7405
  5168  00301E                     u7407:
  5169  00301E  C03C  F041         	movff	??_floorf+1,floorf@m
  5170  003022  C03D  F042         	movff	??_floorf+2,floorf@m+1
  5171  003026  C03E  F043         	movff	??_floorf+3,floorf@m+2
  5172  00302A  C03F  F044         	movff	??_floorf+4,floorf@m+3
  5173  00302E  5041               	movf	floorf@m^0,w,c
  5174  003030  1447               	andwf	floorf@u^0,w,c
  5175  003032  6E3B               	movwf	??_floorf^0,c
  5176  003034  5042               	movf	(floorf@m+1)^0,w,c
  5177  003036  1448               	andwf	(floorf@u+1)^0,w,c
  5178  003038  6E3C               	movwf	(??_floorf+1)^0,c
  5179  00303A  5043               	movf	(floorf@m+2)^0,w,c
  5180  00303C  1449               	andwf	(floorf@u+2)^0,w,c
  5181  00303E  6E3D               	movwf	(??_floorf+2)^0,c
  5182  003040  5044               	movf	(floorf@m+3)^0,w,c
  5183  003042  144A               	andwf	(floorf@u+3)^0,w,c
  5184  003044  6E3E               	movwf	(??_floorf+3)^0,c
  5185  003046  503B               	movf	??_floorf^0,w,c
  5186  003048  103C               	iorwf	(??_floorf+1)^0,w,c
  5187  00304A  103D               	iorwf	(??_floorf+2)^0,w,c
  5188  00304C  103E               	iorwf	(??_floorf+3)^0,w,c
  5189  00304E  A4D8               	btfss	status,2,c
  5190  003050  EF2C  F018         	goto	u7411
  5191  003054  EF2E  F018         	goto	u7410
  5192  003058                     u7411:
  5193  003058  EF30  F018         	goto	l7051
  5194  00305C                     u7410:
  5195  00305C  EFE7  F017         	goto	l7043
  5196  003060                     l7051:
  5197  003060  C047  F03B         	movff	floorf@u,??_floorf
  5198  003064  C048  F03C         	movff	floorf@u+1,??_floorf+1
  5199  003068  C049  F03D         	movff	floorf@u+2,??_floorf+2
  5200  00306C  C04A  F03E         	movff	floorf@u+3,??_floorf+3
  5201  003070  0E20               	movlw	32
  5202  003072  EF40  F018         	goto	u7420
  5203  003076                     u7425:
  5204  003076  90D8               	bcf	status,0,c
  5205  003078  323E               	rrcf	(??_floorf+3)^0,f,c
  5206  00307A  323D               	rrcf	(??_floorf+2)^0,f,c
  5207  00307C  323C               	rrcf	(??_floorf+1)^0,f,c
  5208  00307E  323B               	rrcf	??_floorf^0,f,c
  5209  003080                     u7420:
  5210  003080  2EE8               	decfsz	wreg,f,c
  5211  003082  EF3B  F018         	goto	u7425
  5212  003086  503B               	movf	??_floorf^0,w,c
  5213  003088  103C               	iorwf	(??_floorf+1)^0,w,c
  5214  00308A  103D               	iorwf	(??_floorf+2)^0,w,c
  5215  00308C  103E               	iorwf	(??_floorf+3)^0,w,c
  5216  00308E  B4D8               	btfsc	status,2,c
  5217  003090  EF4C  F018         	goto	u7431
  5218  003094  EF4E  F018         	goto	u7430
  5219  003098                     u7431:
  5220  003098  EF56  F018         	goto	l1643
  5221  00309C                     u7430:
  5222  00309C  5041               	movf	floorf@m^0,w,c
  5223  00309E  2647               	addwf	floorf@u^0,f,c
  5224  0030A0  5042               	movf	(floorf@m+1)^0,w,c
  5225  0030A2  2248               	addwfc	(floorf@u+1)^0,f,c
  5226  0030A4  5043               	movf	(floorf@m+2)^0,w,c
  5227  0030A6  2249               	addwfc	(floorf@u+2)^0,f,c
  5228  0030A8  5044               	movf	(floorf@m+3)^0,w,c
  5229  0030AA  224A               	addwfc	(floorf@u+3)^0,f,c
  5230  0030AC                     l1643:
  5231  0030AC  1C41               	comf	floorf@m^0,w,c
  5232  0030AE  6E3B               	movwf	??_floorf^0,c
  5233  0030B0  1C42               	comf	(floorf@m+1)^0,w,c
  5234  0030B2  6E3C               	movwf	(??_floorf+1)^0,c
  5235  0030B4  1C43               	comf	(floorf@m+2)^0,w,c
  5236  0030B6  6E3D               	movwf	(??_floorf+2)^0,c
  5237  0030B8  1C44               	comf	(floorf@m+3)^0,w,c
  5238  0030BA  6E3E               	movwf	(??_floorf+3)^0,c
  5239  0030BC  503B               	movf	??_floorf^0,w,c
  5240  0030BE  1647               	andwf	floorf@u^0,f,c
  5241  0030C0  503C               	movf	(??_floorf+1)^0,w,c
  5242  0030C2  1648               	andwf	(floorf@u+1)^0,f,c
  5243  0030C4  503D               	movf	(??_floorf+2)^0,w,c
  5244  0030C6  1649               	andwf	(floorf@u+2)^0,f,c
  5245  0030C8  503E               	movf	(??_floorf+3)^0,w,c
  5246  0030CA  164A               	andwf	(floorf@u+3)^0,f,c
  5247  0030CC  EFAC  F018         	goto	l7063
  5248  0030D0                     l7055:
  5249  0030D0  C047  F03B         	movff	floorf@u,??_floorf
  5250  0030D4  C048  F03C         	movff	floorf@u+1,??_floorf+1
  5251  0030D8  C049  F03D         	movff	floorf@u+2,??_floorf+2
  5252  0030DC  C04A  F03E         	movff	floorf@u+3,??_floorf+3
  5253  0030E0  0E20               	movlw	32
  5254  0030E2  EF78  F018         	goto	u7440
  5255  0030E6                     u7445:
  5256  0030E6  90D8               	bcf	status,0,c
  5257  0030E8  323E               	rrcf	(??_floorf+3)^0,f,c
  5258  0030EA  323D               	rrcf	(??_floorf+2)^0,f,c
  5259  0030EC  323C               	rrcf	(??_floorf+1)^0,f,c
  5260  0030EE  323B               	rrcf	??_floorf^0,f,c
  5261  0030F0                     u7440:
  5262  0030F0  2EE8               	decfsz	wreg,f,c
  5263  0030F2  EF73  F018         	goto	u7445
  5264  0030F6  503B               	movf	??_floorf^0,w,c
  5265  0030F8  103C               	iorwf	(??_floorf+1)^0,w,c
  5266  0030FA  103D               	iorwf	(??_floorf+2)^0,w,c
  5267  0030FC  103E               	iorwf	(??_floorf+3)^0,w,c
  5268  0030FE  A4D8               	btfss	status,2,c
  5269  003100  EF84  F018         	goto	u7451
  5270  003104  EF86  F018         	goto	u7450
  5271  003108                     u7451:
  5272  003108  EF90  F018         	goto	l7059
  5273  00310C                     u7450:
  5274  00310C  0E00               	movlw	0
  5275  00310E  6E47               	movwf	floorf@u^0,c
  5276  003110  0E00               	movlw	0
  5277  003112  6E48               	movwf	(floorf@u+1)^0,c
  5278  003114  0E00               	movlw	0
  5279  003116  6E49               	movwf	(floorf@u+2)^0,c
  5280  003118  0E00               	movlw	0
  5281  00311A  6E4A               	movwf	(floorf@u+3)^0,c
  5282  00311C  EFAC  F018         	goto	l7063
  5283  003120                     l7059:
  5284  003120  90D8               	bcf	status,0,c
  5285  003122  3447               	rlcf	floorf@u^0,w,c
  5286  003124  6E3B               	movwf	??_floorf^0,c
  5287  003126  3448               	rlcf	(floorf@u+1)^0,w,c
  5288  003128  6E3C               	movwf	(??_floorf+1)^0,c
  5289  00312A  3449               	rlcf	(floorf@u+2)^0,w,c
  5290  00312C  6E3D               	movwf	(??_floorf+2)^0,c
  5291  00312E  344A               	rlcf	(floorf@u+3)^0,w,c
  5292  003130  6E3E               	movwf	(??_floorf+3)^0,c
  5293  003132  503B               	movf	??_floorf^0,w,c
  5294  003134  103C               	iorwf	(??_floorf+1)^0,w,c
  5295  003136  103D               	iorwf	(??_floorf+2)^0,w,c
  5296  003138  103E               	iorwf	(??_floorf+3)^0,w,c
  5297  00313A  B4D8               	btfsc	status,2,c
  5298  00313C  EFA2  F018         	goto	u7461
  5299  003140  EFA4  F018         	goto	u7460
  5300  003144                     u7461:
  5301  003144  EFAC  F018         	goto	l7063
  5302  003148                     u7460:
  5303  003148  0E00               	movlw	0
  5304  00314A  6E47               	movwf	floorf@u^0,c
  5305  00314C  0E00               	movlw	0
  5306  00314E  6E48               	movwf	(floorf@u+1)^0,c
  5307  003150  0E80               	movlw	128
  5308  003152  6E49               	movwf	(floorf@u+2)^0,c
  5309  003154  0EBF               	movlw	191
  5310  003156  6E4A               	movwf	(floorf@u+3)^0,c
  5311  003158                     l7063:
  5312  003158  C047  F037         	movff	floorf@u,?_floorf
  5313  00315C  C048  F038         	movff	floorf@u+1,?_floorf+1
  5314  003160  C049  F039         	movff	floorf@u+2,?_floorf+2
  5315  003164  C04A  F03A         	movff	floorf@u+3,?_floorf+3
  5316  003168                     l1640:
  5317  003168  0012               	return		;funcret
  5318  00316A                     __end_of_floorf:
  5319                           	callstack 0
  5320                           
  5321 ;; *************** function ___fpclassifyf *****************
  5322 ;; Defined at:
  5323 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  x               4    4[COMRAM] float 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  u               4   14[COMRAM] struct .
  5328 ;;  e               2   12[COMRAM] int 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  2    4[COMRAM] int 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;Total ram usage:       14 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    4
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_efgtoa
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text16
  5353  0036C2                     __ptext16:
  5354                           	callstack 0
  5355  0036C2                     ___fpclassifyf:
  5356                           	callstack 22
  5357  0036C2  C0E1  F00F         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5358  0036C6  C0E2  F010         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5359  0036CA  C0E3  F011         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5360  0036CE  C0E4  F012         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5361  0036D2  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5362  0036D6  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5363  0036DA  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5364  0036DE  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5365  0036E2  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5366  0036E6  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5367  0036EA  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5368  0036EE  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5369  0036F2  0E18               	movlw	24
  5370  0036F4  EF81  F01B         	goto	u7250
  5371  0036F8                     u7255:
  5372  0036F8  90D8               	bcf	status,0,c
  5373  0036FA  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5374  0036FC  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5375  0036FE  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5376  003700  3209               	rrcf	??___fpclassifyf^0,f,c
  5377  003702                     u7250:
  5378  003702  2EE8               	decfsz	wreg,f,c
  5379  003704  EF7C  F01B         	goto	u7255
  5380  003708  5009               	movf	??___fpclassifyf^0,w,c
  5381  00370A  6E0D               	movwf	___fpclassifyf@e^0,c
  5382  00370C  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5383  00370E  500D               	movf	___fpclassifyf@e^0,w,c
  5384  003710  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5385  003712  A4D8               	btfss	status,2,c
  5386  003714  EF8E  F01B         	goto	u7261
  5387  003718  EF90  F01B         	goto	u7260
  5388  00371C                     u7261:
  5389  00371C  EFB0  F01B         	goto	l7015
  5390  003720                     u7260:
  5391  003720  90D8               	bcf	status,0,c
  5392  003722  340F               	rlcf	___fpclassifyf@u^0,w,c
  5393  003724  6E09               	movwf	??___fpclassifyf^0,c
  5394  003726  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5395  003728  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5396  00372A  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5397  00372C  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5398  00372E  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5399  003730  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5400  003732  5009               	movf	??___fpclassifyf^0,w,c
  5401  003734  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5402  003736  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5403  003738  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5404  00373A  A4D8               	btfss	status,2,c
  5405  00373C  EFA2  F01B         	goto	u7271
  5406  003740  EFA4  F01B         	goto	u7270
  5407  003744                     u7271:
  5408  003744  EFAA  F01B         	goto	l7011
  5409  003748                     u7270:
  5410  003748  0E00               	movlw	0
  5411  00374A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5412  00374C  0E02               	movlw	2
  5413  00374E  6E05               	movwf	?___fpclassifyf^0,c
  5414  003750  EFDF  F01B         	goto	l1602
  5415  003754                     l7011:
  5416  003754  0E00               	movlw	0
  5417  003756  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5418  003758  0E03               	movlw	3
  5419  00375A  6E05               	movwf	?___fpclassifyf^0,c
  5420  00375C  EFDF  F01B         	goto	l1602
  5421  003760                     l7015:
  5422  003760  280D               	incf	___fpclassifyf@e^0,w,c
  5423  003762  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5424  003764  A4D8               	btfss	status,2,c
  5425  003766  EFB7  F01B         	goto	u7281
  5426  00376A  EFB9  F01B         	goto	u7280
  5427  00376E                     u7281:
  5428  00376E  EFDB  F01B         	goto	l7021
  5429  003772                     u7280:
  5430  003772  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5431  003776  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5432  00377A  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5433  00377E  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5434  003782  0E09               	movlw	9
  5435  003784                     u7295:
  5436  003784  90D8               	bcf	status,0,c
  5437  003786  3609               	rlcf	??___fpclassifyf^0,f,c
  5438  003788  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5439  00378A  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5440  00378C  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5441  00378E  2EE8               	decfsz	wreg,f,c
  5442  003790  EFC2  F01B         	goto	u7295
  5443  003794  5009               	movf	??___fpclassifyf^0,w,c
  5444  003796  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5445  003798  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5446  00379A  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5447  00379C  B4D8               	btfsc	status,2,c
  5448  00379E  EFD3  F01B         	goto	u7301
  5449  0037A2  EFD6  F01B         	goto	u7300
  5450  0037A6                     u7301:
  5451  0037A6  0E01               	movlw	1
  5452  0037A8  EFD7  F01B         	goto	u7310
  5453  0037AC                     u7300:
  5454  0037AC  0E00               	movlw	0
  5455  0037AE                     u7310:
  5456  0037AE  6E05               	movwf	?___fpclassifyf^0,c
  5457  0037B0  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5458  0037B2  EFDF  F01B         	goto	l1602
  5459  0037B6                     l7021:
  5460  0037B6  0E00               	movlw	0
  5461  0037B8  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5462  0037BA  0E04               	movlw	4
  5463  0037BC  6E05               	movwf	?___fpclassifyf^0,c
  5464  0037BE                     l1602:
  5465  0037BE  0012               	return		;funcret
  5466  0037C0                     __end_of___fpclassifyf:
  5467                           	callstack 0
  5468                           
  5469 ;; *************** function ___fltol *****************
  5470 ;; Defined at:
  5471 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  f1              4    4[COMRAM] int 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  exp1            1   13[COMRAM] unsigned char 
  5476 ;;  sign1           1   12[COMRAM] unsigned char 
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  4    4[COMRAM] long 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2, status,0
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;Total ram usage:       10 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:    4
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_efgtoa
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text17
  5501  0034B8                     __ptext17:
  5502                           	callstack 0
  5503  0034B8                     ___fltol:
  5504                           	callstack 22
  5505  0034B8  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5506  0034BA  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5507  0034BC  6E0E               	movwf	___fltol@exp1^0,c
  5508  0034BE  500E               	movf	___fltol@exp1^0,w,c
  5509  0034C0  A4D8               	btfss	status,2,c
  5510  0034C2  EF65  F01A         	goto	u7141
  5511  0034C6  EF67  F01A         	goto	u7140
  5512  0034CA                     u7141:
  5513  0034CA  EF71  F01A         	goto	l6943
  5514  0034CE                     u7140:
  5515  0034CE                     l6939:
  5516  0034CE  0E00               	movlw	0
  5517  0034D0  6E05               	movwf	?___fltol^0,c
  5518  0034D2  0E00               	movlw	0
  5519  0034D4  6E06               	movwf	(?___fltol+1)^0,c
  5520  0034D6  0E00               	movlw	0
  5521  0034D8  6E07               	movwf	(?___fltol+2)^0,c
  5522  0034DA  0E00               	movlw	0
  5523  0034DC  6E08               	movwf	(?___fltol+3)^0,c
  5524  0034DE  EFDE  F01A         	goto	l1021
  5525  0034E2                     l6943:
  5526  0034E2  C005  F009         	movff	___fltol@f1,??___fltol
  5527  0034E6  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5528  0034EA  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5529  0034EE  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5530  0034F2  0E20               	movlw	32
  5531  0034F4  EF81  F01A         	goto	u7150
  5532  0034F8                     u7155:
  5533  0034F8  90D8               	bcf	status,0,c
  5534  0034FA  320C               	rrcf	(??___fltol+3)^0,f,c
  5535  0034FC  320B               	rrcf	(??___fltol+2)^0,f,c
  5536  0034FE  320A               	rrcf	(??___fltol+1)^0,f,c
  5537  003500  3209               	rrcf	??___fltol^0,f,c
  5538  003502                     u7150:
  5539  003502  2EE8               	decfsz	wreg,f,c
  5540  003504  EF7C  F01A         	goto	u7155
  5541  003508  5009               	movf	??___fltol^0,w,c
  5542  00350A  6E0D               	movwf	___fltol@sign1^0,c
  5543  00350C  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5544  00350E  0EFF               	movlw	255
  5545  003510  1605               	andwf	___fltol@f1^0,f,c
  5546  003512  0EFF               	movlw	255
  5547  003514  1606               	andwf	(___fltol@f1+1)^0,f,c
  5548  003516  0EFF               	movlw	255
  5549  003518  1607               	andwf	(___fltol@f1+2)^0,f,c
  5550  00351A  0E00               	movlw	0
  5551  00351C  1608               	andwf	(___fltol@f1+3)^0,f,c
  5552  00351E  0E96               	movlw	150
  5553  003520  5E0E               	subwf	___fltol@exp1^0,f,c
  5554  003522  BE0E               	btfsc	___fltol@exp1^0,7,c
  5555  003524  EF98  F01A         	goto	u7160
  5556  003528  EF96  F01A         	goto	u7161
  5557  00352C                     u7161:
  5558  00352C  EFAE  F01A         	goto	l6963
  5559  003530                     u7160:
  5560  003530  500E               	movf	___fltol@exp1^0,w,c
  5561  003532  0A80               	xorlw	128
  5562  003534  0F97               	addlw	151
  5563  003536  B0D8               	btfsc	status,0,c
  5564  003538  EFA0  F01A         	goto	u7171
  5565  00353C  EFA2  F01A         	goto	u7170
  5566  003540                     u7171:
  5567  003540  EFA4  F01A         	goto	l6959
  5568  003544                     u7170:
  5569  003544  EF67  F01A         	goto	l6939
  5570  003548                     l6959:
  5571  003548  90D8               	bcf	status,0,c
  5572  00354A  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5573  00354C  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5574  00354E  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5575  003550  3205               	rrcf	___fltol@f1^0,f,c
  5576  003552  3E0E               	incfsz	___fltol@exp1^0,f,c
  5577  003554  EFA4  F01A         	goto	l6959
  5578  003558  EFC6  F01A         	goto	l6973
  5579  00355C                     l6963:
  5580  00355C  0E1F               	movlw	31
  5581  00355E  640E               	cpfsgt	___fltol@exp1^0,c
  5582  003560  EFB4  F01A         	goto	u7181
  5583  003564  EFB6  F01A         	goto	u7180
  5584  003568                     u7181:
  5585  003568  EFBE  F01A         	goto	l6971
  5586  00356C                     u7180:
  5587  00356C  EF67  F01A         	goto	l6939
  5588  003570                     l6969:
  5589  003570  90D8               	bcf	status,0,c
  5590  003572  3605               	rlcf	___fltol@f1^0,f,c
  5591  003574  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5592  003576  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5593  003578  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5594  00357A  060E               	decf	___fltol@exp1^0,f,c
  5595  00357C                     l6971:
  5596  00357C  500E               	movf	___fltol@exp1^0,w,c
  5597  00357E  A4D8               	btfss	status,2,c
  5598  003580  EFC4  F01A         	goto	u7191
  5599  003584  EFC6  F01A         	goto	u7190
  5600  003588                     u7191:
  5601  003588  EFB8  F01A         	goto	l6969
  5602  00358C                     u7190:
  5603  00358C                     l6973:
  5604  00358C  500D               	movf	___fltol@sign1^0,w,c
  5605  00358E  B4D8               	btfsc	status,2,c
  5606  003590  EFCC  F01A         	goto	u7201
  5607  003594  EFCE  F01A         	goto	u7200
  5608  003598                     u7201:
  5609  003598  EFD6  F01A         	goto	l6977
  5610  00359C                     u7200:
  5611  00359C  1E08               	comf	(___fltol@f1+3)^0,f,c
  5612  00359E  1E07               	comf	(___fltol@f1+2)^0,f,c
  5613  0035A0  1E06               	comf	(___fltol@f1+1)^0,f,c
  5614  0035A2  6C05               	negf	___fltol@f1^0,c
  5615  0035A4  0E00               	movlw	0
  5616  0035A6  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5617  0035A8  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5618  0035AA  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5619  0035AC                     l6977:
  5620  0035AC  C005  F005         	movff	___fltol@f1,?___fltol
  5621  0035B0  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5622  0035B4  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5623  0035B8  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5624  0035BC                     l1021:
  5625  0035BC  0012               	return		;funcret
  5626  0035BE                     __end_of___fltol:
  5627                           	callstack 0
  5628                           
  5629 ;; *************** function ___flsub *****************
  5630 ;; Defined at:
  5631 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  b               4   70[COMRAM] long 
  5634 ;;  a               4   74[COMRAM] long 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  4   70[COMRAM] long 
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5646 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;Total ram usage:        8 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    5
  5653 ;; This function calls:
  5654 ;;		___fladd
  5655 ;; This function is called by:
  5656 ;;		_efgtoa
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text18
  5661  00461C                     __ptext18:
  5662                           	callstack 0
  5663  00461C                     ___flsub:
  5664                           	callstack 21
  5665  00461C  0E00               	movlw	0
  5666  00461E  1A4B               	xorwf	___flsub@a^0,f,c
  5667  004620  0E00               	movlw	0
  5668  004622  1A4C               	xorwf	(___flsub@a+1)^0,f,c
  5669  004624  0E00               	movlw	0
  5670  004626  1A4D               	xorwf	(___flsub@a+2)^0,f,c
  5671  004628  0E80               	movlw	128
  5672  00462A  1A4E               	xorwf	(___flsub@a+3)^0,f,c
  5673  00462C  C047  F037         	movff	___flsub@b,___fladd@b
  5674  004630  C048  F038         	movff	___flsub@b+1,___fladd@b+1
  5675  004634  C049  F039         	movff	___flsub@b+2,___fladd@b+2
  5676  004638  C04A  F03A         	movff	___flsub@b+3,___fladd@b+3
  5677  00463C  C04B  F03B         	movff	___flsub@a,___fladd@a
  5678  004640  C04C  F03C         	movff	___flsub@a+1,___fladd@a+1
  5679  004644  C04D  F03D         	movff	___flsub@a+2,___fladd@a+2
  5680  004648  C04E  F03E         	movff	___flsub@a+3,___fladd@a+3
  5681  00464C  EC6A  F011         	call	___fladd	;wreg free
  5682  004650  C037  F047         	movff	?___fladd,?___flsub
  5683  004654  C038  F048         	movff	?___fladd+1,?___flsub+1
  5684  004658  C039  F049         	movff	?___fladd+2,?___flsub+2
  5685  00465C  C03A  F04A         	movff	?___fladd+3,?___flsub+3
  5686  004660  0012               	return		;funcret
  5687  004662                     __end_of___flsub:
  5688                           	callstack 0
  5689                           
  5690 ;; *************** function ___flneg *****************
  5691 ;; Defined at:
  5692 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  f1              4    4[COMRAM] long 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;		None
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  4    4[COMRAM] long 
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;Total ram usage:        4 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:    4
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_efgtoa
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           	psect	text19
  5721  0047EA                     __ptext19:
  5722                           	callstack 0
  5723  0047EA                     ___flneg:
  5724                           	callstack 22
  5725  0047EA  5005               	movf	___flneg@f1^0,w,c
  5726  0047EC  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5727  0047EE  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5728  0047F0  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5729  0047F2  B4D8               	btfsc	status,2,c
  5730  0047F4  EFFE  F023         	goto	u7131
  5731  0047F8  EF00  F024         	goto	u7130
  5732  0047FC                     u7131:
  5733  0047FC  EF08  F024         	goto	l6933
  5734  004800                     u7130:
  5735  004800  0E00               	movlw	0
  5736  004802  1A05               	xorwf	___flneg@f1^0,f,c
  5737  004804  0E00               	movlw	0
  5738  004806  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5739  004808  0E00               	movlw	0
  5740  00480A  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5741  00480C  0E80               	movlw	128
  5742  00480E  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5743  004810                     l6933:
  5744  004810  C005  F005         	movff	___flneg@f1,?___flneg
  5745  004814  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5746  004818  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5747  00481C  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5748  004820  0012               	return		;funcret
  5749  004822                     __end_of___flneg:
  5750                           	callstack 0
  5751                           
  5752 ;; *************** function ___flge *****************
  5753 ;; Defined at:
  5754 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  ff1             4   29[COMRAM] long 
  5757 ;;  ff2             4   33[COMRAM] long 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;		None               void
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5769 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;Total ram usage:       12 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    4
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_efgtoa
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text20
  5784  0035BE                     __ptext20:
  5785                           	callstack 0
  5786  0035BE                     ___flge:
  5787                           	callstack 22
  5788  0035BE  0E00               	movlw	0
  5789  0035C0  141E               	andwf	___flge@ff1^0,w,c
  5790  0035C2  6E26               	movwf	??___flge^0,c
  5791  0035C4  0E00               	movlw	0
  5792  0035C6  141F               	andwf	(___flge@ff1+1)^0,w,c
  5793  0035C8  6E27               	movwf	(??___flge+1)^0,c
  5794  0035CA  0E80               	movlw	128
  5795  0035CC  1420               	andwf	(___flge@ff1+2)^0,w,c
  5796  0035CE  6E28               	movwf	(??___flge+2)^0,c
  5797  0035D0  0E7F               	movlw	127
  5798  0035D2  1421               	andwf	(___flge@ff1+3)^0,w,c
  5799  0035D4  6E29               	movwf	(??___flge+3)^0,c
  5800  0035D6  5026               	movf	??___flge^0,w,c
  5801  0035D8  1027               	iorwf	(??___flge+1)^0,w,c
  5802  0035DA  1028               	iorwf	(??___flge+2)^0,w,c
  5803  0035DC  1029               	iorwf	(??___flge+3)^0,w,c
  5804  0035DE  A4D8               	btfss	status,2,c
  5805  0035E0  EFF4  F01A         	goto	u7081
  5806  0035E4  EFF6  F01A         	goto	u7080
  5807  0035E8                     u7081:
  5808  0035E8  EFFE  F01A         	goto	l6911
  5809  0035EC                     u7080:
  5810  0035EC  0E00               	movlw	0
  5811  0035EE  6E1E               	movwf	___flge@ff1^0,c
  5812  0035F0  0E00               	movlw	0
  5813  0035F2  6E1F               	movwf	(___flge@ff1+1)^0,c
  5814  0035F4  0E00               	movlw	0
  5815  0035F6  6E20               	movwf	(___flge@ff1+2)^0,c
  5816  0035F8  0E00               	movlw	0
  5817  0035FA  6E21               	movwf	(___flge@ff1+3)^0,c
  5818  0035FC                     l6911:
  5819  0035FC  0E00               	movlw	0
  5820  0035FE  1422               	andwf	___flge@ff2^0,w,c
  5821  003600  6E26               	movwf	??___flge^0,c
  5822  003602  0E00               	movlw	0
  5823  003604  1423               	andwf	(___flge@ff2+1)^0,w,c
  5824  003606  6E27               	movwf	(??___flge+1)^0,c
  5825  003608  0E80               	movlw	128
  5826  00360A  1424               	andwf	(___flge@ff2+2)^0,w,c
  5827  00360C  6E28               	movwf	(??___flge+2)^0,c
  5828  00360E  0E7F               	movlw	127
  5829  003610  1425               	andwf	(___flge@ff2+3)^0,w,c
  5830  003612  6E29               	movwf	(??___flge+3)^0,c
  5831  003614  5026               	movf	??___flge^0,w,c
  5832  003616  1027               	iorwf	(??___flge+1)^0,w,c
  5833  003618  1028               	iorwf	(??___flge+2)^0,w,c
  5834  00361A  1029               	iorwf	(??___flge+3)^0,w,c
  5835  00361C  A4D8               	btfss	status,2,c
  5836  00361E  EF13  F01B         	goto	u7091
  5837  003622  EF15  F01B         	goto	u7090
  5838  003626                     u7091:
  5839  003626  EF1D  F01B         	goto	l6915
  5840  00362A                     u7090:
  5841  00362A  0E00               	movlw	0
  5842  00362C  6E22               	movwf	___flge@ff2^0,c
  5843  00362E  0E00               	movlw	0
  5844  003630  6E23               	movwf	(___flge@ff2+1)^0,c
  5845  003632  0E00               	movlw	0
  5846  003634  6E24               	movwf	(___flge@ff2+2)^0,c
  5847  003636  0E00               	movlw	0
  5848  003638  6E25               	movwf	(___flge@ff2+3)^0,c
  5849  00363A                     l6915:
  5850  00363A  AE21               	btfss	(___flge@ff1+3)^0,7,c
  5851  00363C  EF22  F01B         	goto	u7101
  5852  003640  EF24  F01B         	goto	u7100
  5853  003644                     u7101:
  5854  003644  EF2D  F01B         	goto	l6919
  5855  003648                     u7100:
  5856  003648  6C1E               	negf	___flge@ff1^0,c
  5857  00364A  1E1F               	comf	(___flge@ff1+1)^0,f,c
  5858  00364C  B0D8               	btfsc	status,0,c
  5859  00364E  2A1F               	incf	(___flge@ff1+1)^0,f,c
  5860  003650  1E20               	comf	(___flge@ff1+2)^0,f,c
  5861  003652  B0D8               	btfsc	status,0,c
  5862  003654  2A20               	incf	(___flge@ff1+2)^0,f,c
  5863  003656  0E80               	movlw	128
  5864  003658  5621               	subfwb	(___flge@ff1+3)^0,f,c
  5865  00365A                     l6919:
  5866  00365A  AE25               	btfss	(___flge@ff2+3)^0,7,c
  5867  00365C  EF32  F01B         	goto	u7111
  5868  003660  EF34  F01B         	goto	u7110
  5869  003664                     u7111:
  5870  003664  EF3D  F01B         	goto	l989
  5871  003668                     u7110:
  5872  003668  6C22               	negf	___flge@ff2^0,c
  5873  00366A  1E23               	comf	(___flge@ff2+1)^0,f,c
  5874  00366C  B0D8               	btfsc	status,0,c
  5875  00366E  2A23               	incf	(___flge@ff2+1)^0,f,c
  5876  003670  1E24               	comf	(___flge@ff2+2)^0,f,c
  5877  003672  B0D8               	btfsc	status,0,c
  5878  003674  2A24               	incf	(___flge@ff2+2)^0,f,c
  5879  003676  0E80               	movlw	128
  5880  003678  5625               	subfwb	(___flge@ff2+3)^0,f,c
  5881  00367A                     l989:
  5882  00367A  0E00               	movlw	0
  5883  00367C  1A1E               	xorwf	___flge@ff1^0,f,c
  5884  00367E  0E00               	movlw	0
  5885  003680  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  5886  003682  0E00               	movlw	0
  5887  003684  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  5888  003686  0E80               	movlw	128
  5889  003688  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  5890  00368A  0E00               	movlw	0
  5891  00368C  1A22               	xorwf	___flge@ff2^0,f,c
  5892  00368E  0E00               	movlw	0
  5893  003690  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  5894  003692  0E00               	movlw	0
  5895  003694  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  5896  003696  0E80               	movlw	128
  5897  003698  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  5898  00369A  5022               	movf	___flge@ff2^0,w,c
  5899  00369C  5C1E               	subwf	___flge@ff1^0,w,c
  5900  00369E  5023               	movf	(___flge@ff2+1)^0,w,c
  5901  0036A0  581F               	subwfb	(___flge@ff1+1)^0,w,c
  5902  0036A2  5024               	movf	(___flge@ff2+2)^0,w,c
  5903  0036A4  5820               	subwfb	(___flge@ff1+2)^0,w,c
  5904  0036A6  5025               	movf	(___flge@ff2+3)^0,w,c
  5905  0036A8  5821               	subwfb	(___flge@ff1+3)^0,w,c
  5906  0036AA  B0D8               	btfsc	status,0,c
  5907  0036AC  EF5A  F01B         	goto	u7121
  5908  0036B0  EF5C  F01B         	goto	u7120
  5909  0036B4                     u7121:
  5910  0036B4  EF5F  F01B         	goto	l6925
  5911  0036B8                     u7120:
  5912  0036B8  90D8               	bcf	status,0,c
  5913  0036BA  EF60  F01B         	goto	l994
  5914  0036BE                     l6925:
  5915  0036BE  80D8               	bsf	status,0,c
  5916  0036C0                     l994:
  5917  0036C0  0012               	return		;funcret
  5918  0036C2                     __end_of___flge:
  5919                           	callstack 0
  5920                           
  5921 ;; *************** function ___fleq *****************
  5922 ;; Defined at:
  5923 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  ff1             4    4[COMRAM] long 
  5926 ;;  ff2             4    8[COMRAM] long 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;		None
  5929 ;; Return value:  Size  Location     Type
  5930 ;;		None               void
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5938 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5941 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5942 ;;Total ram usage:       12 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:    4
  5945 ;; This function calls:
  5946 ;;		Nothing
  5947 ;; This function is called by:
  5948 ;;		_efgtoa
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text21
  5953  003E86                     __ptext21:
  5954                           	callstack 0
  5955  003E86                     ___fleq:
  5956                           	callstack 22
  5957  003E86  0E00               	movlw	0
  5958  003E88  1405               	andwf	___fleq@ff1^0,w,c
  5959  003E8A  6E0D               	movwf	??___fleq^0,c
  5960  003E8C  0E00               	movlw	0
  5961  003E8E  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5962  003E90  6E0E               	movwf	(??___fleq+1)^0,c
  5963  003E92  0E80               	movlw	128
  5964  003E94  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5965  003E96  6E0F               	movwf	(??___fleq+2)^0,c
  5966  003E98  0E7F               	movlw	127
  5967  003E9A  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5968  003E9C  6E10               	movwf	(??___fleq+3)^0,c
  5969  003E9E  500D               	movf	??___fleq^0,w,c
  5970  003EA0  100E               	iorwf	(??___fleq+1)^0,w,c
  5971  003EA2  100F               	iorwf	(??___fleq+2)^0,w,c
  5972  003EA4  1010               	iorwf	(??___fleq+3)^0,w,c
  5973  003EA6  A4D8               	btfss	status,2,c
  5974  003EA8  EF58  F01F         	goto	u7051
  5975  003EAC  EF5A  F01F         	goto	u7050
  5976  003EB0                     u7051:
  5977  003EB0  EF62  F01F         	goto	l6895
  5978  003EB4                     u7050:
  5979  003EB4  0E00               	movlw	0
  5980  003EB6  6E05               	movwf	___fleq@ff1^0,c
  5981  003EB8  0E00               	movlw	0
  5982  003EBA  6E06               	movwf	(___fleq@ff1+1)^0,c
  5983  003EBC  0E00               	movlw	0
  5984  003EBE  6E07               	movwf	(___fleq@ff1+2)^0,c
  5985  003EC0  0E00               	movlw	0
  5986  003EC2  6E08               	movwf	(___fleq@ff1+3)^0,c
  5987  003EC4                     l6895:
  5988  003EC4  0E00               	movlw	0
  5989  003EC6  1409               	andwf	___fleq@ff2^0,w,c
  5990  003EC8  6E0D               	movwf	??___fleq^0,c
  5991  003ECA  0E00               	movlw	0
  5992  003ECC  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5993  003ECE  6E0E               	movwf	(??___fleq+1)^0,c
  5994  003ED0  0E80               	movlw	128
  5995  003ED2  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5996  003ED4  6E0F               	movwf	(??___fleq+2)^0,c
  5997  003ED6  0E7F               	movlw	127
  5998  003ED8  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5999  003EDA  6E10               	movwf	(??___fleq+3)^0,c
  6000  003EDC  500D               	movf	??___fleq^0,w,c
  6001  003EDE  100E               	iorwf	(??___fleq+1)^0,w,c
  6002  003EE0  100F               	iorwf	(??___fleq+2)^0,w,c
  6003  003EE2  1010               	iorwf	(??___fleq+3)^0,w,c
  6004  003EE4  A4D8               	btfss	status,2,c
  6005  003EE6  EF77  F01F         	goto	u7061
  6006  003EEA  EF79  F01F         	goto	u7060
  6007  003EEE                     u7061:
  6008  003EEE  EF81  F01F         	goto	l6899
  6009  003EF2                     u7060:
  6010  003EF2  0E00               	movlw	0
  6011  003EF4  6E09               	movwf	___fleq@ff2^0,c
  6012  003EF6  0E00               	movlw	0
  6013  003EF8  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6014  003EFA  0E00               	movlw	0
  6015  003EFC  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6016  003EFE  0E00               	movlw	0
  6017  003F00  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6018  003F02                     l6899:
  6019  003F02  5009               	movf	___fleq@ff2^0,w,c
  6020  003F04  1805               	xorwf	___fleq@ff1^0,w,c
  6021  003F06  E10F               	bnz	u7070
  6022  003F08  500A               	movf	(___fleq@ff2+1)^0,w,c
  6023  003F0A  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6024  003F0C  E10C               	bnz	u7070
  6025  003F0E  500B               	movf	(___fleq@ff2+2)^0,w,c
  6026  003F10  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6027  003F12  E109               	bnz	u7070
  6028  003F14  500C               	movf	(___fleq@ff2+3)^0,w,c
  6029  003F16  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6030  003F18  B4D8               	btfsc	status,2,c
  6031  003F1A  EF91  F01F         	goto	u7071
  6032  003F1E  EF93  F01F         	goto	u7070
  6033  003F22                     u7071:
  6034  003F22  EF96  F01F         	goto	l6903
  6035  003F26                     u7070:
  6036  003F26  90D8               	bcf	status,0,c
  6037  003F28  EF97  F01F         	goto	l983
  6038  003F2C                     l6903:
  6039  003F2C  80D8               	bsf	status,0,c
  6040  003F2E                     l983:
  6041  003F2E  0012               	return		;funcret
  6042  003F30                     __end_of___fleq:
  6043                           	callstack 0
  6044                           
  6045 ;; *************** function ___awmod *****************
  6046 ;; Defined at:
  6047 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  dividend        2    4[COMRAM] int 
  6050 ;;  divisor         2    6[COMRAM] int 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  sign            1    9[COMRAM] unsigned char 
  6053 ;;  counter         1    8[COMRAM] unsigned char 
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  2    4[COMRAM] int 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2, status,0
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6063 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6066 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;Total ram usage:        6 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; Hardware stack levels required when called:    4
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_efgtoa
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text22
  6078  003D2A                     __ptext22:
  6079                           	callstack 0
  6080  003D2A                     ___awmod:
  6081                           	callstack 22
  6082  003D2A  0E00               	movlw	0
  6083  003D2C  6E0A               	movwf	___awmod@sign^0,c
  6084  003D2E  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  6085  003D30  EF9E  F01E         	goto	u6990
  6086  003D34  EF9C  F01E         	goto	u6991
  6087  003D38                     u6991:
  6088  003D38  EFA4  F01E         	goto	l6863
  6089  003D3C                     u6990:
  6090  003D3C  6C05               	negf	___awmod@dividend^0,c
  6091  003D3E  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6092  003D40  B0D8               	btfsc	status,0,c
  6093  003D42  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6094  003D44  0E01               	movlw	1
  6095  003D46  6E0A               	movwf	___awmod@sign^0,c
  6096  003D48                     l6863:
  6097  003D48  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  6098  003D4A  EFAB  F01E         	goto	u7000
  6099  003D4E  EFA9  F01E         	goto	u7001
  6100  003D52                     u7001:
  6101  003D52  EFAF  F01E         	goto	l6867
  6102  003D56                     u7000:
  6103  003D56  6C07               	negf	___awmod@divisor^0,c
  6104  003D58  1E08               	comf	(___awmod@divisor+1)^0,f,c
  6105  003D5A  B0D8               	btfsc	status,0,c
  6106  003D5C  2A08               	incf	(___awmod@divisor+1)^0,f,c
  6107  003D5E                     l6867:
  6108  003D5E  5007               	movf	___awmod@divisor^0,w,c
  6109  003D60  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  6110  003D62  B4D8               	btfsc	status,2,c
  6111  003D64  EFB6  F01E         	goto	u7011
  6112  003D68  EFB8  F01E         	goto	u7010
  6113  003D6C                     u7011:
  6114  003D6C  EFDC  F01E         	goto	l6883
  6115  003D70                     u7010:
  6116  003D70  0E01               	movlw	1
  6117  003D72  6E09               	movwf	___awmod@counter^0,c
  6118  003D74  EFC0  F01E         	goto	l6873
  6119  003D78                     l6871:
  6120  003D78  90D8               	bcf	status,0,c
  6121  003D7A  3607               	rlcf	___awmod@divisor^0,f,c
  6122  003D7C  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  6123  003D7E  2A09               	incf	___awmod@counter^0,f,c
  6124  003D80                     l6873:
  6125  003D80  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  6126  003D82  EFC5  F01E         	goto	u7021
  6127  003D86  EFC7  F01E         	goto	u7020
  6128  003D8A                     u7021:
  6129  003D8A  EFBC  F01E         	goto	l6871
  6130  003D8E                     u7020:
  6131  003D8E                     l6875:
  6132  003D8E  5007               	movf	___awmod@divisor^0,w,c
  6133  003D90  5C05               	subwf	___awmod@dividend^0,w,c
  6134  003D92  5008               	movf	(___awmod@divisor+1)^0,w,c
  6135  003D94  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  6136  003D96  A0D8               	btfss	status,0,c
  6137  003D98  EFD0  F01E         	goto	u7031
  6138  003D9C  EFD2  F01E         	goto	u7030
  6139  003DA0                     u7031:
  6140  003DA0  EFD6  F01E         	goto	l6879
  6141  003DA4                     u7030:
  6142  003DA4  5007               	movf	___awmod@divisor^0,w,c
  6143  003DA6  5E05               	subwf	___awmod@dividend^0,f,c
  6144  003DA8  5008               	movf	(___awmod@divisor+1)^0,w,c
  6145  003DAA  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  6146  003DAC                     l6879:
  6147  003DAC  90D8               	bcf	status,0,c
  6148  003DAE  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  6149  003DB0  3207               	rrcf	___awmod@divisor^0,f,c
  6150  003DB2  2E09               	decfsz	___awmod@counter^0,f,c
  6151  003DB4  EFC7  F01E         	goto	l6875
  6152  003DB8                     l6883:
  6153  003DB8  500A               	movf	___awmod@sign^0,w,c
  6154  003DBA  B4D8               	btfsc	status,2,c
  6155  003DBC  EFE2  F01E         	goto	u7041
  6156  003DC0  EFE4  F01E         	goto	u7040
  6157  003DC4                     u7041:
  6158  003DC4  EFE8  F01E         	goto	l6887
  6159  003DC8                     u7040:
  6160  003DC8  6C05               	negf	___awmod@dividend^0,c
  6161  003DCA  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6162  003DCC  B0D8               	btfsc	status,0,c
  6163  003DCE  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6164  003DD0                     l6887:
  6165  003DD0  C005  F005         	movff	___awmod@dividend,?___awmod
  6166  003DD4  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  6167  003DD8  0012               	return		;funcret
  6168  003DDA                     __end_of___awmod:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function ___awdiv *****************
  6172 ;; Defined at:
  6173 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  dividend        2    4[COMRAM] int 
  6176 ;;  divisor         2    6[COMRAM] int 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  quotient        2   10[COMRAM] int 
  6179 ;;  sign            1    9[COMRAM] unsigned char 
  6180 ;;  counter         1    8[COMRAM] unsigned char 
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  2    4[COMRAM] int 
  6183 ;; Registers used:
  6184 ;;		wreg, status,2, status,0
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;Total ram usage:        8 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    4
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_efgtoa
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text23
  6205  003A32                     __ptext23:
  6206                           	callstack 0
  6207  003A32                     ___awdiv:
  6208                           	callstack 22
  6209  003A32  0E00               	movlw	0
  6210  003A34  6E0A               	movwf	___awdiv@sign^0,c
  6211  003A36  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  6212  003A38  EF22  F01D         	goto	u6930
  6213  003A3C  EF20  F01D         	goto	u6931
  6214  003A40                     u6931:
  6215  003A40  EF28  F01D         	goto	l6819
  6216  003A44                     u6930:
  6217  003A44  6C07               	negf	___awdiv@divisor^0,c
  6218  003A46  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  6219  003A48  B0D8               	btfsc	status,0,c
  6220  003A4A  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  6221  003A4C  0E01               	movlw	1
  6222  003A4E  6E0A               	movwf	___awdiv@sign^0,c
  6223  003A50                     l6819:
  6224  003A50  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  6225  003A52  EF2F  F01D         	goto	u6940
  6226  003A56  EF2D  F01D         	goto	u6941
  6227  003A5A                     u6941:
  6228  003A5A  EF35  F01D         	goto	l6825
  6229  003A5E                     u6940:
  6230  003A5E  6C05               	negf	___awdiv@dividend^0,c
  6231  003A60  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  6232  003A62  B0D8               	btfsc	status,0,c
  6233  003A64  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  6234  003A66  0E01               	movlw	1
  6235  003A68  1A0A               	xorwf	___awdiv@sign^0,f,c
  6236  003A6A                     l6825:
  6237  003A6A  0E00               	movlw	0
  6238  003A6C  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  6239  003A6E  0E00               	movlw	0
  6240  003A70  6E0B               	movwf	___awdiv@quotient^0,c
  6241  003A72  5007               	movf	___awdiv@divisor^0,w,c
  6242  003A74  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  6243  003A76  B4D8               	btfsc	status,2,c
  6244  003A78  EF40  F01D         	goto	u6951
  6245  003A7C  EF42  F01D         	goto	u6950
  6246  003A80                     u6951:
  6247  003A80  EF6A  F01D         	goto	l6847
  6248  003A84                     u6950:
  6249  003A84  0E01               	movlw	1
  6250  003A86  6E09               	movwf	___awdiv@counter^0,c
  6251  003A88  EF4A  F01D         	goto	l6833
  6252  003A8C                     l6831:
  6253  003A8C  90D8               	bcf	status,0,c
  6254  003A8E  3607               	rlcf	___awdiv@divisor^0,f,c
  6255  003A90  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  6256  003A92  2A09               	incf	___awdiv@counter^0,f,c
  6257  003A94                     l6833:
  6258  003A94  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  6259  003A96  EF4F  F01D         	goto	u6961
  6260  003A9A  EF51  F01D         	goto	u6960
  6261  003A9E                     u6961:
  6262  003A9E  EF46  F01D         	goto	l6831
  6263  003AA2                     u6960:
  6264  003AA2                     l6835:
  6265  003AA2  90D8               	bcf	status,0,c
  6266  003AA4  360B               	rlcf	___awdiv@quotient^0,f,c
  6267  003AA6  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  6268  003AA8  5007               	movf	___awdiv@divisor^0,w,c
  6269  003AAA  5C05               	subwf	___awdiv@dividend^0,w,c
  6270  003AAC  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6271  003AAE  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  6272  003AB0  A0D8               	btfss	status,0,c
  6273  003AB2  EF5D  F01D         	goto	u6971
  6274  003AB6  EF5F  F01D         	goto	u6970
  6275  003ABA                     u6971:
  6276  003ABA  EF64  F01D         	goto	l6843
  6277  003ABE                     u6970:
  6278  003ABE  5007               	movf	___awdiv@divisor^0,w,c
  6279  003AC0  5E05               	subwf	___awdiv@dividend^0,f,c
  6280  003AC2  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6281  003AC4  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  6282  003AC6  800B               	bsf	___awdiv@quotient^0,0,c
  6283  003AC8                     l6843:
  6284  003AC8  90D8               	bcf	status,0,c
  6285  003ACA  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  6286  003ACC  3207               	rrcf	___awdiv@divisor^0,f,c
  6287  003ACE  2E09               	decfsz	___awdiv@counter^0,f,c
  6288  003AD0  EF51  F01D         	goto	l6835
  6289  003AD4                     l6847:
  6290  003AD4  500A               	movf	___awdiv@sign^0,w,c
  6291  003AD6  B4D8               	btfsc	status,2,c
  6292  003AD8  EF70  F01D         	goto	u6981
  6293  003ADC  EF72  F01D         	goto	u6980
  6294  003AE0                     u6981:
  6295  003AE0  EF76  F01D         	goto	l6851
  6296  003AE4                     u6980:
  6297  003AE4  6C0B               	negf	___awdiv@quotient^0,c
  6298  003AE6  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  6299  003AE8  B0D8               	btfsc	status,0,c
  6300  003AEA  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  6301  003AEC                     l6851:
  6302  003AEC  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  6303  003AF0  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  6304  003AF4  0012               	return		;funcret
  6305  003AF6                     __end_of___awdiv:
  6306                           	callstack 0
  6307                           
  6308 ;; *************** function _atoi *****************
  6309 ;; Defined at:
  6310 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6313 ;;		 -> STR_2(29), STR_1(23), 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  n               2   24[COMRAM] int 
  6316 ;;  neg             2   17[COMRAM] int 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  2   11[COMRAM] int 
  6319 ;; Registers used:
  6320 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;Total ram usage:       15 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    5
  6333 ;; This function calls:
  6334 ;;		___wmul
  6335 ;;		_isdigit
  6336 ;;		_isspace
  6337 ;; This function is called by:
  6338 ;;		_vfpfcnvrt
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text24
  6343  00331E                     __ptext24:
  6344                           	callstack 0
  6345  00331E                     _atoi:
  6346                           	callstack 22
  6347  00331E  0E00               	movlw	0
  6348  003320  6E1A               	movwf	(atoi@n+1)^0,c
  6349  003322  0E00               	movlw	0
  6350  003324  6E19               	movwf	atoi@n^0,c
  6351  003326  0E00               	movlw	0
  6352  003328  6E13               	movwf	(atoi@neg+1)^0,c
  6353  00332A  0E00               	movlw	0
  6354  00332C  6E12               	movwf	atoi@neg^0,c
  6355  00332E  EF9B  F019         	goto	l7385
  6356  003332                     l7383:
  6357  003332  4A0C               	infsnz	atoi@s^0,f,c
  6358  003334  2A0D               	incf	(atoi@s+1)^0,f,c
  6359  003336                     l7385:
  6360  003336  0E01               	movlw	1
  6361  003338  6E18               	movwf	_atoi$2168^0,c
  6362  00333A  C00C  FFF6         	movff	atoi@s,tblptrl
  6363  00333E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6364  003342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6365  003342  6AF8               	clrf	tblptru,c
  6366  003344                     	endif
  6367  003344                     	if	0	;tblptru may be non-zero
  6368  003344                     	endif
  6369  003344  0008               	tblrd		*
  6370  003346  50F5               	movf	tablat,w,c
  6371  003348  0A20               	xorlw	32
  6372  00334A  B4D8               	btfsc	status,2,c
  6373  00334C  EFAA  F019         	goto	u8031
  6374  003350  EFAC  F019         	goto	u8030
  6375  003354                     u8031:
  6376  003354  EFCA  F019         	goto	l7393
  6377  003358                     u8030:
  6378  003358  0EF7               	movlw	247
  6379  00335A  6E0E               	movwf	??_atoi^0,c
  6380  00335C  0EFF               	movlw	255
  6381  00335E  6E0F               	movwf	(??_atoi+1)^0,c
  6382  003360  C00C  FFF6         	movff	atoi@s,tblptrl
  6383  003364  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6384  003368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6385  003368  6AF8               	clrf	tblptru,c
  6386  00336A                     	endif
  6387  00336A                     	if	0	;tblptru may be non-zero
  6388  00336A                     	endif
  6389  00336A  0008               	tblrd		*
  6390  00336C  50F5               	movf	tablat,w,c
  6391  00336E  6E10               	movwf	(??_atoi+2)^0,c
  6392  003370  6A11               	clrf	(??_atoi+3)^0,c
  6393  003372  500E               	movf	??_atoi^0,w,c
  6394  003374  2610               	addwf	(??_atoi+2)^0,f,c
  6395  003376  500F               	movf	(??_atoi+1)^0,w,c
  6396  003378  2211               	addwfc	(??_atoi+3)^0,f,c
  6397  00337A  5011               	movf	(??_atoi+3)^0,w,c
  6398  00337C  E109               	bnz	u8040
  6399  00337E  0E05               	movlw	5
  6400  003380  5C10               	subwf	(??_atoi+2)^0,w,c
  6401  003382  A0D8               	btfss	status,0,c
  6402  003384  EFC6  F019         	goto	u8041
  6403  003388  EFC8  F019         	goto	u8040
  6404  00338C                     u8041:
  6405  00338C  EFCA  F019         	goto	l7393
  6406  003390                     u8040:
  6407  003390  0E00               	movlw	0
  6408  003392  6E18               	movwf	_atoi$2168^0,c
  6409  003394                     l7393:
  6410  003394  C018  F014         	movff	_atoi$2168,_atoi$2167
  6411  003398  6A15               	clrf	(_atoi$2167+1)^0,c
  6412  00339A  5014               	movf	_atoi$2167^0,w,c
  6413  00339C  1015               	iorwf	(_atoi$2167+1)^0,w,c
  6414  00339E  A4D8               	btfss	status,2,c
  6415  0033A0  EFD4  F019         	goto	u8051
  6416  0033A4  EFD6  F019         	goto	u8050
  6417  0033A8                     u8051:
  6418  0033A8  EF99  F019         	goto	l7383
  6419  0033AC                     u8050:
  6420  0033AC  EFE0  F019         	goto	l7403
  6421  0033B0                     l7399:
  6422  0033B0  0E00               	movlw	0
  6423  0033B2  6E13               	movwf	(atoi@neg+1)^0,c
  6424  0033B4  0E01               	movlw	1
  6425  0033B6  6E12               	movwf	atoi@neg^0,c
  6426  0033B8                     l7401:
  6427  0033B8  4A0C               	infsnz	atoi@s^0,f,c
  6428  0033BA  2A0D               	incf	(atoi@s+1)^0,f,c
  6429  0033BC  EF17  F01A         	goto	l7409
  6430  0033C0                     l7403:
  6431  0033C0  C00C  FFF6         	movff	atoi@s,tblptrl
  6432  0033C4  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6433  0033C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6434  0033C8  6AF8               	clrf	tblptru,c
  6435  0033CA                     	endif
  6436  0033CA                     	if	0	;tblptru may be non-zero
  6437  0033CA                     	endif
  6438  0033CA  0008               	tblrd		*
  6439  0033CC  50F5               	movf	tablat,w,c
  6440  0033CE  6E0E               	movwf	??_atoi^0,c
  6441  0033D0  6A0F               	clrf	(??_atoi+1)^0,c
  6442                           
  6443                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6444                           ; Switch size 1, requested type "simple"
  6445                           ; Number of cases is 1, Range of values is 0 to 0
  6446                           ; switch strategies available:
  6447                           ; Name         Instructions Cycles
  6448                           ; simple_byte            4     3 (average)
  6449                           ;	Chosen strategy is simple_byte
  6450  0033D2  500F               	movf	(??_atoi+1)^0,w,c
  6451  0033D4  0A00               	xorlw	0	; case 0
  6452  0033D6  B4D8               	btfsc	status,2,c
  6453  0033D8  EFF0  F019         	goto	l7805
  6454  0033DC  EF17  F01A         	goto	l7409
  6455  0033E0                     l7805:
  6456                           
  6457                           ; Switch size 1, requested type "simple"
  6458                           ; Number of cases is 2, Range of values is 43 to 45
  6459                           ; switch strategies available:
  6460                           ; Name         Instructions Cycles
  6461                           ; simple_byte            7     4 (average)
  6462                           ;	Chosen strategy is simple_byte
  6463  0033E0  500E               	movf	??_atoi^0,w,c
  6464  0033E2  0A2B               	xorlw	43	; case 43
  6465  0033E4  B4D8               	btfsc	status,2,c
  6466  0033E6  EFDC  F019         	goto	l7401
  6467  0033EA  0A06               	xorlw	6	; case 45
  6468  0033EC  B4D8               	btfsc	status,2,c
  6469  0033EE  EFD8  F019         	goto	l7399
  6470  0033F2  EF17  F01A         	goto	l7409
  6471  0033F6                     l7405:
  6472  0033F6  C019  F005         	movff	atoi@n,___wmul@multiplier
  6473  0033FA  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  6474  0033FE  0E00               	movlw	0
  6475  003400  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  6476  003402  0E0A               	movlw	10
  6477  003404  6E07               	movwf	___wmul@multiplicand^0,c
  6478  003406  EC23  F025         	call	___wmul	;wreg free
  6479  00340A  C00C  FFF6         	movff	atoi@s,tblptrl
  6480  00340E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6481  003412                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6482  003412  6AF8               	clrf	tblptru,c
  6483  003414                     	endif
  6484  003414                     	if	0	;tblptru may be non-zero
  6485  003414                     	endif
  6486  003414  0008               	tblrd		*
  6487  003416  50F5               	movf	tablat,w,c
  6488  003418  5E05               	subwf	?___wmul^0,f,c
  6489  00341A  0E00               	movlw	0
  6490  00341C  5A06               	subwfb	(?___wmul+1)^0,f,c
  6491  00341E  0E30               	movlw	48
  6492  003420  2405               	addwf	?___wmul^0,w,c
  6493  003422  6E19               	movwf	atoi@n^0,c
  6494  003424  0E00               	movlw	0
  6495  003426  2006               	addwfc	(?___wmul+1)^0,w,c
  6496  003428  6E1A               	movwf	(atoi@n+1)^0,c
  6497  00342A  EFDC  F019         	goto	l7401
  6498  00342E                     l7409:
  6499  00342E  0ED0               	movlw	208
  6500  003430  6E0E               	movwf	??_atoi^0,c
  6501  003432  0EFF               	movlw	255
  6502  003434  6E0F               	movwf	(??_atoi+1)^0,c
  6503  003436  C00C  FFF6         	movff	atoi@s,tblptrl
  6504  00343A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6505  00343E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6506  00343E  6AF8               	clrf	tblptru,c
  6507  003440                     	endif
  6508  003440                     	if	0	;tblptru may be non-zero
  6509  003440                     	endif
  6510  003440  0008               	tblrd		*
  6511  003442  50F5               	movf	tablat,w,c
  6512  003444  6E10               	movwf	(??_atoi+2)^0,c
  6513  003446  6A11               	clrf	(??_atoi+3)^0,c
  6514  003448  500E               	movf	??_atoi^0,w,c
  6515  00344A  2610               	addwf	(??_atoi+2)^0,f,c
  6516  00344C  500F               	movf	(??_atoi+1)^0,w,c
  6517  00344E  2211               	addwfc	(??_atoi+3)^0,f,c
  6518  003450  5011               	movf	(??_atoi+3)^0,w,c
  6519  003452  E10A               	bnz	u8060
  6520  003454  0E0A               	movlw	10
  6521  003456  5C10               	subwf	(??_atoi+2)^0,w,c
  6522  003458  A0D8               	btfss	status,0,c
  6523  00345A  EF31  F01A         	goto	u8061
  6524  00345E  EF34  F01A         	goto	u8060
  6525  003462                     u8061:
  6526  003462  0E01               	movlw	1
  6527  003464  EF35  F01A         	goto	u8070
  6528  003468                     u8060:
  6529  003468  0E00               	movlw	0
  6530  00346A                     u8070:
  6531  00346A  6E16               	movwf	_atoi$2169^0,c
  6532  00346C  6A17               	clrf	(_atoi$2169+1)^0,c
  6533  00346E  5016               	movf	_atoi$2169^0,w,c
  6534  003470  1017               	iorwf	(_atoi$2169+1)^0,w,c
  6535  003472  A4D8               	btfss	status,2,c
  6536  003474  EF3E  F01A         	goto	u8081
  6537  003478  EF40  F01A         	goto	u8080
  6538  00347C                     u8081:
  6539  00347C  EFFB  F019         	goto	l7405
  6540  003480                     u8080:
  6541  003480  5012               	movf	atoi@neg^0,w,c
  6542  003482  1013               	iorwf	(atoi@neg+1)^0,w,c
  6543  003484  A4D8               	btfss	status,2,c
  6544  003486  EF47  F01A         	goto	u8091
  6545  00348A  EF49  F01A         	goto	u8090
  6546  00348E                     u8091:
  6547  00348E  EF57  F01A         	goto	l1631
  6548  003492                     u8090:
  6549  003492  C019  F00E         	movff	atoi@n,??_atoi
  6550  003496  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  6551  00349A  1E0E               	comf	??_atoi^0,f,c
  6552  00349C  1E0F               	comf	(??_atoi+1)^0,f,c
  6553  00349E  4A0E               	infsnz	??_atoi^0,f,c
  6554  0034A0  2A0F               	incf	(??_atoi+1)^0,f,c
  6555  0034A2  C00E  F00C         	movff	??_atoi,?_atoi
  6556  0034A6  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  6557  0034AA  EF5B  F01A         	goto	l1634
  6558  0034AE                     l1631:
  6559  0034AE  C019  F00C         	movff	atoi@n,?_atoi
  6560  0034B2  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  6561  0034B6                     l1634:
  6562  0034B6  0012               	return		;funcret
  6563  0034B8                     __end_of_atoi:
  6564                           	callstack 0
  6565                           
  6566 ;; *************** function _isspace *****************
  6567 ;; Defined at:
  6568 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  c               2    4[COMRAM] int 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  2    4[COMRAM] int 
  6575 ;; Registers used:
  6576 ;;		wreg, status,2, status,0
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;Total ram usage:        7 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    4
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_atoi
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	text25
  6597  00457E                     __ptext25:
  6598                           	callstack 0
  6599  00457E                     _isspace:
  6600                           	callstack 22
  6601  00457E  0E01               	movlw	1
  6602  004580  6E0B               	movwf	_isspace$2198^0,c
  6603  004582  0E20               	movlw	32
  6604  004584  1805               	xorwf	isspace@c^0,w,c
  6605  004586  1006               	iorwf	(isspace@c+1)^0,w,c
  6606  004588  B4D8               	btfsc	status,2,c
  6607  00458A  EFC9  F022         	goto	u7491
  6608  00458E  EFCB  F022         	goto	u7490
  6609  004592                     u7491:
  6610  004592  EFE4  F022         	goto	l7079
  6611  004596                     u7490:
  6612  004596  0EF7               	movlw	247
  6613  004598  6E07               	movwf	??_isspace^0,c
  6614  00459A  0EFF               	movlw	255
  6615  00459C  6E08               	movwf	(??_isspace+1)^0,c
  6616  00459E  C005  F009         	movff	isspace@c,??_isspace+2
  6617  0045A2  C006  F00A         	movff	isspace@c+1,??_isspace+3
  6618  0045A6  5007               	movf	??_isspace^0,w,c
  6619  0045A8  2609               	addwf	(??_isspace+2)^0,f,c
  6620  0045AA  5008               	movf	(??_isspace+1)^0,w,c
  6621  0045AC  220A               	addwfc	(??_isspace+3)^0,f,c
  6622  0045AE  500A               	movf	(??_isspace+3)^0,w,c
  6623  0045B0  E109               	bnz	u7500
  6624  0045B2  0E05               	movlw	5
  6625  0045B4  5C09               	subwf	(??_isspace+2)^0,w,c
  6626  0045B6  A0D8               	btfss	status,0,c
  6627  0045B8  EFE0  F022         	goto	u7501
  6628  0045BC  EFE2  F022         	goto	u7500
  6629  0045C0                     u7501:
  6630  0045C0  EFE4  F022         	goto	l7079
  6631  0045C4                     u7500:
  6632  0045C4  0E00               	movlw	0
  6633  0045C6  6E0B               	movwf	_isspace$2198^0,c
  6634  0045C8                     l7079:
  6635  0045C8  C00B  F005         	movff	_isspace$2198,?_isspace
  6636  0045CC  6A06               	clrf	(?_isspace+1)^0,c
  6637  0045CE  0012               	return		;funcret
  6638  0045D0                     __end_of_isspace:
  6639                           	callstack 0
  6640                           
  6641 ;; *************** function _isdigit *****************
  6642 ;; Defined at:
  6643 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  c               2    4[COMRAM] int 
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;		None
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  2    4[COMRAM] int 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;Total ram usage:        6 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; Hardware stack levels required when called:    4
  6664 ;; This function calls:
  6665 ;;		Nothing
  6666 ;; This function is called by:
  6667 ;;		_vfpfcnvrt
  6668 ;;		_atoi
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text26
  6673  004822                     __ptext26:
  6674                           	callstack 0
  6675  004822                     _isdigit:
  6676                           	callstack 23
  6677  004822  0ED0               	movlw	208
  6678  004824  6E07               	movwf	??_isdigit^0,c
  6679  004826  0EFF               	movlw	255
  6680  004828  6E08               	movwf	(??_isdigit+1)^0,c
  6681  00482A  C005  F009         	movff	isdigit@c,??_isdigit+2
  6682  00482E  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  6683  004832  5007               	movf	??_isdigit^0,w,c
  6684  004834  2609               	addwf	(??_isdigit+2)^0,f,c
  6685  004836  5008               	movf	(??_isdigit+1)^0,w,c
  6686  004838  220A               	addwfc	(??_isdigit+3)^0,f,c
  6687  00483A  500A               	movf	(??_isdigit+3)^0,w,c
  6688  00483C  E10A               	bnz	u7470
  6689  00483E  0E0A               	movlw	10
  6690  004840  5C09               	subwf	(??_isdigit+2)^0,w,c
  6691  004842  A0D8               	btfss	status,0,c
  6692  004844  EF26  F024         	goto	u7471
  6693  004848  EF29  F024         	goto	u7470
  6694  00484C                     u7471:
  6695  00484C  0E01               	movlw	1
  6696  00484E  EF2A  F024         	goto	u7480
  6697  004852                     u7470:
  6698  004852  0E00               	movlw	0
  6699  004854                     u7480:
  6700  004854  6E05               	movwf	?_isdigit^0,c
  6701  004856  6A06               	clrf	(?_isdigit+1)^0,c
  6702  004858  0012               	return		;funcret
  6703  00485A                     __end_of_isdigit:
  6704                           	callstack 0
  6705                           
  6706 ;; *************** function ___wmul *****************
  6707 ;; Defined at:
  6708 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  multiplier      2    4[COMRAM] unsigned int 
  6711 ;;  multiplicand    2    6[COMRAM] unsigned int 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  product         2    8[COMRAM] unsigned int 
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  2    4[COMRAM] unsigned int 
  6716 ;; Registers used:
  6717 ;;		wreg, status,2, status,0, prodl, prodh
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;Total ram usage:        6 bytes
  6728 ;; Hardware stack levels used:    1
  6729 ;; Hardware stack levels required when called:    4
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_atoi
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text27
  6738  004A46                     __ptext27:
  6739                           	callstack 0
  6740  004A46                     ___wmul:
  6741                           	callstack 22
  6742  004A46  5005               	movf	___wmul@multiplier^0,w,c
  6743  004A48  0207               	mulwf	___wmul@multiplicand^0,c
  6744  004A4A  CFF3 F009          	movff	prodl,___wmul@product
  6745  004A4E  CFF4 F00A          	movff	prodh,___wmul@product+1
  6746  004A52  5005               	movf	___wmul@multiplier^0,w,c
  6747  004A54  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  6748  004A56  50F3               	movf	243,w,c
  6749  004A58  260A               	addwf	(___wmul@product+1)^0,f,c
  6750  004A5A  5006               	movf	(___wmul@multiplier+1)^0,w,c
  6751  004A5C  0207               	mulwf	___wmul@multiplicand^0,c
  6752  004A5E  50F3               	movf	243,w,c
  6753  004A60  260A               	addwf	(___wmul@product+1)^0,f,c
  6754  004A62  C009  F005         	movff	___wmul@product,?___wmul
  6755  004A66  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  6756  004A6A  0012               	return		;funcret
  6757  004A6C                     __end_of___wmul:
  6758                           	callstack 0
  6759                           
  6760 ;; *************** function _SYSTEM_Initialize *****************
  6761 ;; Defined at:
  6762 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;		None
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;		None
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1    wreg      void 
  6769 ;; Registers used:
  6770 ;;		wreg, status,2, status,0, cstack
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;Total ram usage:        0 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; Hardware stack levels required when called:    6
  6783 ;; This function calls:
  6784 ;;		_EUSART_Initialize
  6785 ;;		_I2C_Initialize
  6786 ;;		_INTERRUPT_Initialize
  6787 ;;		_OSCILLATOR_Initialize
  6788 ;;		_PIN_MANAGER_Initialize
  6789 ;; This function is called by:
  6790 ;;		_main
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text28
  6795  004B00                     __ptext28:
  6796                           	callstack 0
  6797  004B00                     _SYSTEM_Initialize:
  6798                           	callstack 24
  6799  004B00                     
  6800                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  6801  004B00  EC20  F026         	call	_INTERRUPT_Initialize	;wreg free
  6802  004B04                     
  6803                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  6804  004B04  EC8B  F025         	call	_I2C_Initialize	;wreg free
  6805  004B08                     
  6806                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  6807  004B08  EC48  F024         	call	_PIN_MANAGER_Initialize	;wreg free
  6808  004B0C                     
  6809                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  6810  004B0C  ECCE  F025         	call	_OSCILLATOR_Initialize	;wreg free
  6811  004B10                     
  6812                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  6813  004B10  ECF8  F020         	call	_EUSART_Initialize	;wreg free
  6814  004B14  0012               	return		;funcret
  6815  004B16                     __end_of_SYSTEM_Initialize:
  6816                           	callstack 0
  6817                           
  6818 ;; *************** function _PIN_MANAGER_Initialize *****************
  6819 ;; Defined at:
  6820 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;		None
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;		None
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		wreg, status,2
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6838 ;;Total ram usage:        0 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    4
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_SYSTEM_Initialize
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text29
  6849  004890                     __ptext29:
  6850                           	callstack 0
  6851  004890                     _PIN_MANAGER_Initialize:
  6852                           	callstack 25
  6853  004890                     
  6854                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6855  004890  0E00               	movlw	0
  6856  004892  6E8D               	movwf	141,c	;volatile
  6857                           
  6858                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6859  004894  0E00               	movlw	0
  6860  004896  6E8C               	movwf	140,c	;volatile
  6861                           
  6862                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6863  004898  0E00               	movlw	0
  6864  00489A  6E89               	movwf	137,c	;volatile
  6865                           
  6866                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6867  00489C  0E00               	movlw	0
  6868  00489E  6E8A               	movwf	138,c	;volatile
  6869                           
  6870                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6871  0048A0  0E00               	movlw	0
  6872  0048A2  6E8B               	movwf	139,c	;volatile
  6873                           
  6874                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  6875  0048A4  0E07               	movlw	7
  6876  0048A6  6E96               	movwf	150,c	;volatile
  6877  0048A8                     
  6878                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  6879  0048A8  6892               	setf	146,c	;volatile
  6880  0048AA                     
  6881                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  6882  0048AA  6893               	setf	147,c	;volatile
  6883                           
  6884                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  6885  0048AC  0EBF               	movlw	191
  6886  0048AE  6E94               	movwf	148,c	;volatile
  6887  0048B0                     
  6888                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  6889  0048B0  6895               	setf	149,c	;volatile
  6890  0048B2                     
  6891                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  6892  0048B2  687E               	setf	126,c	;volatile
  6893                           
  6894                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  6895  0048B4  0E1F               	movlw	31
  6896  0048B6  6E7F               	movwf	127,c	;volatile
  6897                           
  6898                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  6899  0048B8  0E00               	movlw	0
  6900  0048BA  6E7C               	movwf	124,c	;volatile
  6901  0048BC                     
  6902                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  6903  0048BC  8EF1               	bsf	241,7,c	;volatile
  6904  0048BE  0012               	return		;funcret
  6905  0048C0                     __end_of_PIN_MANAGER_Initialize:
  6906                           	callstack 0
  6907                           
  6908 ;; *************** function _OSCILLATOR_Initialize *****************
  6909 ;; Defined at:
  6910 ;;		line 60 in file "mcc_generated_files/mcc.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;		None
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  1    wreg      void 
  6917 ;; Registers used:
  6918 ;;		wreg, status,2
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;Total ram usage:        0 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:    4
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_SYSTEM_Initialize
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text30
  6939  004B9C                     __ptext30:
  6940                           	callstack 0
  6941  004B9C                     _OSCILLATOR_Initialize:
  6942                           	callstack 25
  6943  004B9C                     
  6944                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  6945  004B9C  0E60               	movlw	96
  6946  004B9E  6ED3               	movwf	211,c	;volatile
  6947                           
  6948                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  6949  004BA0  0E00               	movlw	0
  6950  004BA2  6E9B               	movwf	155,c	;volatile
  6951  004BA4  0012               	return		;funcret
  6952  004BA6                     __end_of_OSCILLATOR_Initialize:
  6953                           	callstack 0
  6954                           
  6955 ;; *************** function _INTERRUPT_Initialize *****************
  6956 ;; Defined at:
  6957 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;		None
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  1    wreg      void 
  6964 ;; Registers used:
  6965 ;;		None
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;Total ram usage:        0 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    4
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_SYSTEM_Initialize
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text31
  6986  004C40                     __ptext31:
  6987                           	callstack 0
  6988  004C40                     _INTERRUPT_Initialize:
  6989                           	callstack 25
  6990  004C40                     
  6991                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6992  004C40  9ED0               	bcf	208,7,c	;volatile
  6993  004C42  0012               	return		;funcret
  6994  004C44                     __end_of_INTERRUPT_Initialize:
  6995                           	callstack 0
  6996                           
  6997 ;; *************** function _I2C_Initialize *****************
  6998 ;; Defined at:
  6999 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;		None
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      void 
  7006 ;; Registers used:
  7007 ;;		wreg, status,2
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;Total ram usage:        0 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:    4
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_SYSTEM_Initialize
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text32
  7028  004B16                     __ptext32:
  7029                           	callstack 0
  7030  004B16                     _I2C_Initialize:
  7031                           	callstack 25
  7032  004B16                     
  7033                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  7034  004B16  0E00               	movlw	0
  7035  004B18  6EC7               	movwf	199,c	;volatile
  7036                           
  7037                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  7038  004B1A  0E08               	movlw	8
  7039  004B1C  6EC6               	movwf	198,c	;volatile
  7040                           
  7041                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  7042  004B1E  0E00               	movlw	0
  7043  004B20  6EC5               	movwf	197,c	;volatile
  7044                           
  7045                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  7046  004B22  0E13               	movlw	19
  7047  004B24  6EC8               	movwf	200,c	;volatile
  7048  004B26                     
  7049                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  7050  004B26  9AC6               	bcf	198,5,c	;volatile
  7051  004B28  0012               	return		;funcret
  7052  004B2A                     __end_of_I2C_Initialize:
  7053                           	callstack 0
  7054                           
  7055 ;; *************** function _EUSART_Initialize *****************
  7056 ;; Defined at:
  7057 ;;		line 88 in file "mcc_generated_files/eusart.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;		None
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;		None
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  1    wreg      void 
  7064 ;; Registers used:
  7065 ;;		wreg, status,2, status,0, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7075 ;;Total ram usage:        0 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    5
  7078 ;; This function calls:
  7079 ;;		_EUSART_SetErrorHandler
  7080 ;;		_EUSART_SetFramingErrorHandler
  7081 ;;		_EUSART_SetOverrunErrorHandler
  7082 ;;		_EUSART_SetRxInterruptHandler
  7083 ;;		_EUSART_SetTxInterruptHandler
  7084 ;; This function is called by:
  7085 ;;		_SYSTEM_Initialize
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text33
  7090  0041F0                     __ptext33:
  7091                           	callstack 0
  7092  0041F0                     _EUSART_Initialize:
  7093                           	callstack 24
  7094  0041F0                     
  7095                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  7096  0041F0  9A9D               	bcf	157,5,c	;volatile
  7097  0041F2                     
  7098                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  7099  0041F2  0EBA               	movlw	low _EUSART_Receive_ISR
  7100  0041F4  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  7101  0041F6  0E3B               	movlw	high _EUSART_Receive_ISR
  7102  0041F8  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  7103  0041FA  ECD8  F025         	call	_EUSART_SetRxInterruptHandler	;wreg free
  7104  0041FE                     
  7105                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  7106  0041FE  989D               	bcf	157,4,c	;volatile
  7107                           
  7108                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  7109  004200  0E30               	movlw	low _EUSART_Transmit_ISR
  7110  004202  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  7111  004204  0E47               	movlw	high _EUSART_Transmit_ISR
  7112  004206  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  7113  004208  ECD3  F025         	call	_EUSART_SetTxInterruptHandler	;wreg free
  7114  00420C                     
  7115                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  7116  00420C  0E08               	movlw	8
  7117  00420E  6EB8               	movwf	184,c	;volatile
  7118  004210                     
  7119                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  7120  004210  0E90               	movlw	144
  7121  004212  6EAB               	movwf	171,c	;volatile
  7122  004214                     
  7123                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  7124  004214  0E24               	movlw	36
  7125  004216  6EAC               	movwf	172,c	;volatile
  7126  004218                     
  7127                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  7128  004218  0ECF               	movlw	207
  7129  00421A  6EAF               	movwf	175,c	;volatile
  7130  00421C                     
  7131                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  7132  00421C  0E00               	movlw	0
  7133  00421E  6EB0               	movwf	176,c	;volatile
  7134  004220                     
  7135                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  7136  004220  0E70               	movlw	low _EUSART_DefaultFramingErrorHandler
  7137  004222  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  7138  004224  0E4C               	movlw	high _EUSART_DefaultFramingErrorHandler
  7139  004226  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  7140  004228  ECE2  F025         	call	_EUSART_SetFramingErrorHandler	;wreg free
  7141  00422C                     
  7142                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  7143  00422C  0E34               	movlw	low _EUSART_DefaultOverrunErrorHandler
  7144  00422E  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  7145  004230  0E4C               	movlw	high _EUSART_DefaultOverrunErrorHandler
  7146  004232  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7147  004234  ECDD  F025         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  7148  004238                     
  7149                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  7150  004238  0E3A               	movlw	low _EUSART_DefaultErrorHandler
  7151  00423A  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  7152  00423C  0E4C               	movlw	high _EUSART_DefaultErrorHandler
  7153  00423E  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  7154  004240  ECE7  F025         	call	_EUSART_SetErrorHandler	;wreg free
  7155                           
  7156                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  7157  004244  0E00               	movlw	0
  7158  004246  0100               	movlb	0	; () banked
  7159  004248  6FF8               	movwf	_eusartRxLastError& (0+255),b	;volatile
  7160                           
  7161                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  7162  00424A  0E00               	movlw	0
  7163  00424C  6E59               	movwf	_eusartTxHead^0,c	;volatile
  7164                           
  7165                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  7166  00424E  0E00               	movlw	0
  7167  004250  6E58               	movwf	_eusartTxTail^0,c	;volatile
  7168                           
  7169                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  7170  004252  0E08               	movlw	8
  7171  004254  6FFE               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  7172                           
  7173                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  7174  004256  0E00               	movlw	0
  7175  004258  6E57               	movwf	_eusartRxHead^0,c	;volatile
  7176                           
  7177                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  7178  00425A  0E00               	movlw	0
  7179  00425C  6E56               	movwf	_eusartRxTail^0,c	;volatile
  7180                           
  7181                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  7182  00425E  0E00               	movlw	0
  7183  004260  6FF9               	movwf	_eusartRxCount& (0+255),b	;volatile
  7184  004262                     
  7185                           ; BSR set to: 0
  7186                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  7187  004262  8A9D               	bsf	157,5,c	;volatile
  7188  004264                     
  7189                           ; BSR set to: 0
  7190  004264  0012               	return		;funcret
  7191  004266                     __end_of_EUSART_Initialize:
  7192                           	callstack 0
  7193                           
  7194 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  7195 ;; Defined at:
  7196 ;;		line 285 in file "mcc_generated_files/eusart.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7199 ;;		 -> EUSART_Transmit_ISR(1), 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;		None
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  1    wreg      void 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7215 ;;Total ram usage:        2 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    4
  7218 ;; This function calls:
  7219 ;;		Nothing
  7220 ;; This function is called by:
  7221 ;;		_EUSART_Initialize
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text34
  7226  004BA6                     __ptext34:
  7227                           	callstack 0
  7228  004BA6                     _EUSART_SetTxInterruptHandler:
  7229                           	callstack 24
  7230  004BA6                     
  7231                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  7232  004BA6  C005  F0FC         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  7233  004BAA  C006  F0FD         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  7234  004BAE  0012               	return		;funcret
  7235  004BB0                     __end_of_EUSART_SetTxInterruptHandler:
  7236                           	callstack 0
  7237                           
  7238 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  7239 ;; Defined at:
  7240 ;;		line 289 in file "mcc_generated_files/eusart.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7243 ;;		 -> EUSART_Receive_ISR(1), 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;		None
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, status,2, status,0
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7259 ;;Total ram usage:        2 bytes
  7260 ;; Hardware stack levels used:    1
  7261 ;; Hardware stack levels required when called:    4
  7262 ;; This function calls:
  7263 ;;		Nothing
  7264 ;; This function is called by:
  7265 ;;		_EUSART_Initialize
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           	psect	text35
  7270  004BB0                     __ptext35:
  7271                           	callstack 0
  7272  004BB0                     _EUSART_SetRxInterruptHandler:
  7273                           	callstack 24
  7274  004BB0                     
  7275                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  7276  004BB0  C005  F0FA         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  7277  004BB4  C006  F0FB         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  7278  004BB8  0012               	return		;funcret
  7279  004BBA                     __end_of_EUSART_SetRxInterruptHandler:
  7280                           	callstack 0
  7281                           
  7282 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7283 ;; Defined at:
  7284 ;;		line 277 in file "mcc_generated_files/eusart.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7287 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;		None
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      void 
  7292 ;; Registers used:
  7293 ;;		wreg, status,2, status,0
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;Total ram usage:        2 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    4
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		_EUSART_Initialize
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text36
  7314  004BBA                     __ptext36:
  7315                           	callstack 0
  7316  004BBA                     _EUSART_SetOverrunErrorHandler:
  7317                           	callstack 24
  7318  004BBA                     
  7319                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  7320  004BBA  C005  F180         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  7321  004BBE  C006  F181         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  7322  004BC2  0012               	return		;funcret
  7323  004BC4                     __end_of_EUSART_SetOverrunErrorHandler:
  7324                           	callstack 0
  7325                           
  7326 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7327 ;; Defined at:
  7328 ;;		line 273 in file "mcc_generated_files/eusart.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7331 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, status,2, status,0
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;Total ram usage:        2 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    4
  7350 ;; This function calls:
  7351 ;;		Nothing
  7352 ;; This function is called by:
  7353 ;;		_EUSART_Initialize
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text37
  7358  004BC4                     __ptext37:
  7359                           	callstack 0
  7360  004BC4                     _EUSART_SetFramingErrorHandler:
  7361                           	callstack 24
  7362  004BC4                     
  7363                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  7364  004BC4  C005  F182         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  7365  004BC8  C006  F183         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  7366  004BCC  0012               	return		;funcret
  7367  004BCE                     __end_of_EUSART_SetFramingErrorHandler:
  7368                           	callstack 0
  7369                           
  7370 ;; *************** function _EUSART_SetErrorHandler *****************
  7371 ;; Defined at:
  7372 ;;		line 281 in file "mcc_generated_files/eusart.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7375 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;		None
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg, status,2, status,0
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7391 ;;Total ram usage:        2 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; Hardware stack levels required when called:    4
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_EUSART_Initialize
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text38
  7402  004BCE                     __ptext38:
  7403                           	callstack 0
  7404  004BCE                     _EUSART_SetErrorHandler:
  7405                           	callstack 24
  7406  004BCE                     
  7407                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  7408  004BCE  C005  F17E         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  7409  004BD2  C006  F17F         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  7410  004BD6  0012               	return		;funcret
  7411  004BD8                     __end_of_EUSART_SetErrorHandler:
  7412                           	callstack 0
  7413                           
  7414 ;; *************** function _HDC1080_temp_GetValue *****************
  7415 ;; Defined at:
  7416 ;;		line 32 in file "hdc1080.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;		None
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;  tempDataAnz     4   76[COMRAM] float 
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  4   70[COMRAM] float 
  7423 ;; Registers used:
  7424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;Total ram usage:       10 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:   14
  7437 ;; This function calls:
  7438 ;;		_HDC1080_Read
  7439 ;;		___fladd
  7440 ;;		___fldiv
  7441 ;;		___flmul
  7442 ;;		___xxtofl
  7443 ;; This function is called by:
  7444 ;;		_main
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text39
  7449  00389C                     __ptext39:
  7450                           	callstack 0
  7451  00389C                     _HDC1080_temp_GetValue:
  7452                           	callstack 16
  7453  00389C                     
  7454                           ;hdc1080.c: 33:     float tempDataAnz;;hdc1080.c: 35:     HDC1080_Read();
  7455  00389C  ECE8  F022         	call	_HDC1080_Read	;wreg free
  7456  0038A0                     
  7457                           ;hdc1080.c: 36:     tempDataAnz = (readBuffer[0] << 8) + readBuffer[1];
  7458  0038A0  0101               	movlb	1	; () banked
  7459  0038A2  5175               	movf	(_readBuffer+1)& (0+255),w,b
  7460  0038A4  C174  F04B         	movff	_readBuffer,??_HDC1080_temp_GetValue
  7461  0038A8  6A4C               	clrf	(??_HDC1080_temp_GetValue+1)^0,c
  7462  0038AA  C04B  F04C         	movff	??_HDC1080_temp_GetValue,??_HDC1080_temp_GetValue+1
  7463  0038AE  6A4B               	clrf	??_HDC1080_temp_GetValue^0,c
  7464  0038B0  264B               	addwf	??_HDC1080_temp_GetValue^0,f,c
  7465  0038B2  0E00               	movlw	0
  7466  0038B4  224C               	addwfc	(??_HDC1080_temp_GetValue+1)^0,f,c
  7467  0038B6  C04B  F005         	movff	??_HDC1080_temp_GetValue,___xxtofl@val
  7468  0038BA  C04C  F006         	movff	??_HDC1080_temp_GetValue+1,___xxtofl@val+1
  7469  0038BE  0E00               	movlw	0
  7470  0038C0  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7471  0038C2  0EFF               	movlw	-1
  7472  0038C4  6E07               	movwf	(___xxtofl@val+2)^0,c
  7473  0038C6  6E08               	movwf	(___xxtofl@val+3)^0,c
  7474  0038C8  0E01               	movlw	1
  7475  0038CA  ECB5  F018         	call	___xxtofl
  7476  0038CE  C005  F04D         	movff	?___xxtofl,HDC1080_temp_GetValue@tempDataAnz
  7477  0038D2  C006  F04E         	movff	?___xxtofl+1,HDC1080_temp_GetValue@tempDataAnz+1
  7478  0038D6  C007  F04F         	movff	?___xxtofl+2,HDC1080_temp_GetValue@tempDataAnz+2
  7479  0038DA  C008  F050         	movff	?___xxtofl+3,HDC1080_temp_GetValue@tempDataAnz+3
  7480  0038DE                     
  7481                           ;hdc1080.c: 37:     tempDataAnz = tempDataAnz * 165 / 65536 - 40;
  7482  0038DE  0E00               	movlw	0
  7483  0038E0  6E22               	movwf	___fldiv@a^0,c
  7484  0038E2  0E00               	movlw	0
  7485  0038E4  6E23               	movwf	(___fldiv@a+1)^0,c
  7486  0038E6  0E80               	movlw	128
  7487  0038E8  6E24               	movwf	(___fldiv@a+2)^0,c
  7488  0038EA  0E47               	movlw	71
  7489  0038EC  6E25               	movwf	(___fldiv@a+3)^0,c
  7490  0038EE  0E00               	movlw	0
  7491  0038F0  6E09               	movwf	___flmul@a^0,c
  7492  0038F2  0E00               	movlw	0
  7493  0038F4  6E0A               	movwf	(___flmul@a+1)^0,c
  7494  0038F6  0E25               	movlw	37
  7495  0038F8  6E0B               	movwf	(___flmul@a+2)^0,c
  7496  0038FA  0E43               	movlw	67
  7497  0038FC  6E0C               	movwf	(___flmul@a+3)^0,c
  7498  0038FE  C04D  F005         	movff	HDC1080_temp_GetValue@tempDataAnz,___flmul@b
  7499  003902  C04E  F006         	movff	HDC1080_temp_GetValue@tempDataAnz+1,___flmul@b+1
  7500  003906  C04F  F007         	movff	HDC1080_temp_GetValue@tempDataAnz+2,___flmul@b+2
  7501  00390A  C050  F008         	movff	HDC1080_temp_GetValue@tempDataAnz+3,___flmul@b+3
  7502  00390E  ECCA  F013         	call	___flmul	;wreg free
  7503  003912  C005  F01E         	movff	?___flmul,___fldiv@b
  7504  003916  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  7505  00391A  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  7506  00391E  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  7507  003922  ECDF  F015         	call	___fldiv	;wreg free
  7508  003926  C01E  F037         	movff	?___fldiv,___fladd@b
  7509  00392A  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  7510  00392E  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  7511  003932  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  7512  003936  0E00               	movlw	0
  7513  003938  6E3B               	movwf	___fladd@a^0,c
  7514  00393A  0E00               	movlw	0
  7515  00393C  6E3C               	movwf	(___fladd@a+1)^0,c
  7516  00393E  0E20               	movlw	32
  7517  003940  6E3D               	movwf	(___fladd@a+2)^0,c
  7518  003942  0EC2               	movlw	194
  7519  003944  6E3E               	movwf	(___fladd@a+3)^0,c
  7520  003946  EC6A  F011         	call	___fladd	;wreg free
  7521  00394A  C037  F04D         	movff	?___fladd,HDC1080_temp_GetValue@tempDataAnz
  7522  00394E  C038  F04E         	movff	?___fladd+1,HDC1080_temp_GetValue@tempDataAnz+1
  7523  003952  C039  F04F         	movff	?___fladd+2,HDC1080_temp_GetValue@tempDataAnz+2
  7524  003956  C03A  F050         	movff	?___fladd+3,HDC1080_temp_GetValue@tempDataAnz+3
  7525  00395A                     
  7526                           ;hdc1080.c: 39:     return tempDataAnz;
  7527  00395A  C04D  F047         	movff	HDC1080_temp_GetValue@tempDataAnz,?_HDC1080_temp_GetValue
  7528  00395E  C04E  F048         	movff	HDC1080_temp_GetValue@tempDataAnz+1,?_HDC1080_temp_GetValue+1
  7529  003962  C04F  F049         	movff	HDC1080_temp_GetValue@tempDataAnz+2,?_HDC1080_temp_GetValue+2
  7530  003966  C050  F04A         	movff	HDC1080_temp_GetValue@tempDataAnz+3,?_HDC1080_temp_GetValue+3
  7531  00396A  0012               	return		;funcret
  7532  00396C                     __end_of_HDC1080_temp_GetValue:
  7533                           	callstack 0
  7534                           
  7535 ;; *************** function ___fladd *****************
  7536 ;; Defined at:
  7537 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  b               4   54[COMRAM] float 
  7540 ;;  a               4   58[COMRAM] float 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  grs             1   69[COMRAM] unsigned char 
  7543 ;;  bexp            1   68[COMRAM] unsigned char 
  7544 ;;  aexp            1   67[COMRAM] unsigned char 
  7545 ;;  signs           1   66[COMRAM] unsigned char 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  4   54[COMRAM] unsigned char 
  7548 ;; Registers used:
  7549 ;;		wreg, status,2, status,0
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7555 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;Total ram usage:       16 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    4
  7562 ;; This function calls:
  7563 ;;		Nothing
  7564 ;; This function is called by:
  7565 ;;		_HDC1080_temp_GetValue
  7566 ;;		___flsub
  7567 ;;		_efgtoa
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text40
  7572  0022D4                     __ptext40:
  7573                           	callstack 0
  7574  0022D4                     ___fladd:
  7575                           	callstack 21
  7576  0022D4  503A               	movf	(___fladd@b+3)^0,w,c
  7577  0022D6  0B80               	andlw	128
  7578  0022D8  6E43               	movwf	___fladd@signs^0,c
  7579  0022DA  503A               	movf	(___fladd@b+3)^0,w,c
  7580  0022DC  243A               	addwf	(___fladd@b+3)^0,w,c
  7581  0022DE  6E45               	movwf	___fladd@bexp^0,c
  7582  0022E0  AE39               	btfss	(___fladd@b+2)^0,7,c
  7583  0022E2  EF75  F011         	goto	u6081
  7584  0022E6  EF77  F011         	goto	u6080
  7585  0022EA                     u6081:
  7586  0022EA  EF78  F011         	goto	l6313
  7587  0022EE                     u6080:
  7588  0022EE  8045               	bsf	___fladd@bexp^0,0,c
  7589  0022F0                     l6313:
  7590  0022F0  5045               	movf	___fladd@bexp^0,w,c
  7591  0022F2  B4D8               	btfsc	status,2,c
  7592  0022F4  EF7E  F011         	goto	u6091
  7593  0022F8  EF80  F011         	goto	u6090
  7594  0022FC                     u6091:
  7595  0022FC  EF95  F011         	goto	l6323
  7596  002300                     u6090:
  7597  002300  2845               	incf	___fladd@bexp^0,w,c
  7598  002302  A4D8               	btfss	status,2,c
  7599  002304  EF86  F011         	goto	u6101
  7600  002308  EF88  F011         	goto	u6100
  7601  00230C                     u6101:
  7602  00230C  EF90  F011         	goto	l6319
  7603  002310                     u6100:
  7604  002310  0E00               	movlw	0
  7605  002312  6E37               	movwf	___fladd@b^0,c
  7606  002314  0E00               	movlw	0
  7607  002316  6E38               	movwf	(___fladd@b+1)^0,c
  7608  002318  0E00               	movlw	0
  7609  00231A  6E39               	movwf	(___fladd@b+2)^0,c
  7610  00231C  0E00               	movlw	0
  7611  00231E  6E3A               	movwf	(___fladd@b+3)^0,c
  7612  002320                     l6319:
  7613  002320  8E39               	bsf	(___fladd@b+2)^0,7,c
  7614  002322  0E00               	movlw	0
  7615  002324  6E3A               	movwf	(___fladd@b+3)^0,c
  7616  002326  EF9D  F011         	goto	l6325
  7617  00232A                     l6323:
  7618  00232A  0E00               	movlw	0
  7619  00232C  6E37               	movwf	___fladd@b^0,c
  7620  00232E  0E00               	movlw	0
  7621  002330  6E38               	movwf	(___fladd@b+1)^0,c
  7622  002332  0E00               	movlw	0
  7623  002334  6E39               	movwf	(___fladd@b+2)^0,c
  7624  002336  0E00               	movlw	0
  7625  002338  6E3A               	movwf	(___fladd@b+3)^0,c
  7626  00233A                     l6325:
  7627  00233A  503E               	movf	(___fladd@a+3)^0,w,c
  7628  00233C  0B80               	andlw	128
  7629  00233E  6E44               	movwf	___fladd@aexp^0,c
  7630  002340  5043               	movf	___fladd@signs^0,w,c
  7631  002342  1844               	xorwf	___fladd@aexp^0,w,c
  7632  002344  B4D8               	btfsc	status,2,c
  7633  002346  EFA7  F011         	goto	u6111
  7634  00234A  EFA9  F011         	goto	u6110
  7635  00234E                     u6111:
  7636  00234E  EFAA  F011         	goto	l6331
  7637  002352                     u6110:
  7638  002352  8C43               	bsf	___fladd@signs^0,6,c
  7639  002354                     l6331:
  7640  002354  503E               	movf	(___fladd@a+3)^0,w,c
  7641  002356  243E               	addwf	(___fladd@a+3)^0,w,c
  7642  002358  6E44               	movwf	___fladd@aexp^0,c
  7643  00235A  AE3D               	btfss	(___fladd@a+2)^0,7,c
  7644  00235C  EFB2  F011         	goto	u6121
  7645  002360  EFB4  F011         	goto	u6120
  7646  002364                     u6121:
  7647  002364  EFB5  F011         	goto	l6337
  7648  002368                     u6120:
  7649  002368  8044               	bsf	___fladd@aexp^0,0,c
  7650  00236A                     l6337:
  7651  00236A  5044               	movf	___fladd@aexp^0,w,c
  7652  00236C  B4D8               	btfsc	status,2,c
  7653  00236E  EFBB  F011         	goto	u6131
  7654  002372  EFBD  F011         	goto	u6130
  7655  002376                     u6131:
  7656  002376  EFD2  F011         	goto	l6347
  7657  00237A                     u6130:
  7658  00237A  2844               	incf	___fladd@aexp^0,w,c
  7659  00237C  A4D8               	btfss	status,2,c
  7660  00237E  EFC3  F011         	goto	u6141
  7661  002382  EFC5  F011         	goto	u6140
  7662  002386                     u6141:
  7663  002386  EFCD  F011         	goto	l6343
  7664  00238A                     u6140:
  7665  00238A  0E00               	movlw	0
  7666  00238C  6E3B               	movwf	___fladd@a^0,c
  7667  00238E  0E00               	movlw	0
  7668  002390  6E3C               	movwf	(___fladd@a+1)^0,c
  7669  002392  0E00               	movlw	0
  7670  002394  6E3D               	movwf	(___fladd@a+2)^0,c
  7671  002396  0E00               	movlw	0
  7672  002398  6E3E               	movwf	(___fladd@a+3)^0,c
  7673  00239A                     l6343:
  7674  00239A  8E3D               	bsf	(___fladd@a+2)^0,7,c
  7675  00239C  0E00               	movlw	0
  7676  00239E  6E3E               	movwf	(___fladd@a+3)^0,c
  7677  0023A0  EFDA  F011         	goto	l6349
  7678  0023A4                     l6347:
  7679  0023A4  0E00               	movlw	0
  7680  0023A6  6E3B               	movwf	___fladd@a^0,c
  7681  0023A8  0E00               	movlw	0
  7682  0023AA  6E3C               	movwf	(___fladd@a+1)^0,c
  7683  0023AC  0E00               	movlw	0
  7684  0023AE  6E3D               	movwf	(___fladd@a+2)^0,c
  7685  0023B0  0E00               	movlw	0
  7686  0023B2  6E3E               	movwf	(___fladd@a+3)^0,c
  7687  0023B4                     l6349:
  7688  0023B4  5045               	movf	___fladd@bexp^0,w,c
  7689  0023B6  5C44               	subwf	___fladd@aexp^0,w,c
  7690  0023B8  B0D8               	btfsc	status,0,c
  7691  0023BA  EFE1  F011         	goto	u6151
  7692  0023BE  EFE3  F011         	goto	u6150
  7693  0023C2                     u6151:
  7694  0023C2  EF0A  F012         	goto	l6385
  7695  0023C6                     u6150:
  7696  0023C6  AC43               	btfss	___fladd@signs^0,6,c
  7697  0023C8  EFE8  F011         	goto	u6161
  7698  0023CC  EFEA  F011         	goto	u6160
  7699  0023D0                     u6161:
  7700  0023D0  EFEC  F011         	goto	l6355
  7701  0023D4                     u6160:
  7702  0023D4  0E80               	movlw	128
  7703  0023D6  1A43               	xorwf	___fladd@signs^0,f,c
  7704  0023D8                     l6355:
  7705  0023D8  C045  F046         	movff	___fladd@bexp,___fladd@grs
  7706  0023DC  C044  F045         	movff	___fladd@aexp,___fladd@bexp
  7707  0023E0  C046  F044         	movff	___fladd@grs,___fladd@aexp
  7708  0023E4  C037  F046         	movff	___fladd@b,___fladd@grs
  7709  0023E8  C03B  F037         	movff	___fladd@a,___fladd@b
  7710  0023EC  C046  F03B         	movff	___fladd@grs,___fladd@a
  7711  0023F0  C038  F046         	movff	___fladd@b+1,___fladd@grs
  7712  0023F4  C03C  F038         	movff	___fladd@a+1,___fladd@b+1
  7713  0023F8  C046  F03C         	movff	___fladd@grs,___fladd@a+1
  7714  0023FC  C039  F046         	movff	___fladd@b+2,___fladd@grs
  7715  002400  C03D  F039         	movff	___fladd@a+2,___fladd@b+2
  7716  002404  C046  F03D         	movff	___fladd@grs,___fladd@a+2
  7717  002408  C03A  F046         	movff	___fladd@b+3,___fladd@grs
  7718  00240C  C03E  F03A         	movff	___fladd@a+3,___fladd@b+3
  7719  002410  C046  F03E         	movff	___fladd@grs,___fladd@a+3
  7720  002414                     l6385:
  7721  002414  0E00               	movlw	0
  7722  002416  6E46               	movwf	___fladd@grs^0,c
  7723  002418  5045               	movf	___fladd@bexp^0,w,c
  7724  00241A  C044  F03F         	movff	___fladd@aexp,??___fladd
  7725  00241E  6A40               	clrf	(??___fladd+1)^0,c
  7726  002420  5E3F               	subwf	??___fladd^0,f,c
  7727  002422  0E00               	movlw	0
  7728  002424  5A40               	subwfb	(??___fladd+1)^0,f,c
  7729  002426  BE40               	btfsc	(??___fladd+1)^0,7,c
  7730  002428  EF1F  F012         	goto	u6171
  7731  00242C  5040               	movf	(??___fladd+1)^0,w,c
  7732  00242E  E109               	bnz	u6170
  7733  002430  0E1A               	movlw	26
  7734  002432  5C3F               	subwf	??___fladd^0,w,c
  7735  002434  A0D8               	btfss	status,0,c
  7736  002436  EF1F  F012         	goto	u6171
  7737  00243A  EF21  F012         	goto	u6170
  7738  00243E                     u6171:
  7739  00243E  EF58  F012         	goto	l1253
  7740  002442                     u6170:
  7741  002442  5037               	movf	___fladd@b^0,w,c
  7742  002444  1038               	iorwf	(___fladd@b+1)^0,w,c
  7743  002446  1039               	iorwf	(___fladd@b+2)^0,w,c
  7744  002448  103A               	iorwf	(___fladd@b+3)^0,w,c
  7745  00244A  A4D8               	btfss	status,2,c
  7746  00244C  EF2A  F012         	goto	u6181
  7747  002450  EF2D  F012         	goto	u6180
  7748  002454                     u6181:
  7749  002454  0E01               	movlw	1
  7750  002456  EF2E  F012         	goto	u6190
  7751  00245A                     u6180:
  7752  00245A  0E00               	movlw	0
  7753  00245C                     u6190:
  7754  00245C  6E46               	movwf	___fladd@grs^0,c
  7755  00245E  0E00               	movlw	0
  7756  002460  6E37               	movwf	___fladd@b^0,c
  7757  002462  0E00               	movlw	0
  7758  002464  6E38               	movwf	(___fladd@b+1)^0,c
  7759  002466  0E00               	movlw	0
  7760  002468  6E39               	movwf	(___fladd@b+2)^0,c
  7761  00246A  0E00               	movlw	0
  7762  00246C  6E3A               	movwf	(___fladd@b+3)^0,c
  7763  00246E  C044  F045         	movff	___fladd@aexp,___fladd@bexp
  7764  002472  EF61  F012         	goto	l1252
  7765  002476                     l1254:
  7766  002476  A046               	btfss	___fladd@grs^0,0,c
  7767  002478  EF40  F012         	goto	u6201
  7768  00247C  EF42  F012         	goto	u6200
  7769  002480                     u6201:
  7770  002480  EF48  F012         	goto	l6397
  7771  002484                     u6200:
  7772  002484  90D8               	bcf	status,0,c
  7773  002486  3046               	rrcf	___fladd@grs^0,w,c
  7774  002488  0901               	iorlw	1
  7775  00248A  6E46               	movwf	___fladd@grs^0,c
  7776  00248C  EF4A  F012         	goto	l6399
  7777  002490                     l6397:
  7778  002490  90D8               	bcf	status,0,c
  7779  002492  3246               	rrcf	___fladd@grs^0,f,c
  7780  002494                     l6399:
  7781  002494  A037               	btfss	___fladd@b^0,0,c
  7782  002496  EF4F  F012         	goto	u6211
  7783  00249A  EF51  F012         	goto	u6210
  7784  00249E                     u6211:
  7785  00249E  EF52  F012         	goto	l6403
  7786  0024A2                     u6210:
  7787  0024A2  8E46               	bsf	___fladd@grs^0,7,c
  7788  0024A4                     l6403:
  7789  0024A4  343A               	rlcf	(___fladd@b+3)^0,w,c
  7790  0024A6  323A               	rrcf	(___fladd@b+3)^0,f,c
  7791  0024A8  3239               	rrcf	(___fladd@b+2)^0,f,c
  7792  0024AA  3238               	rrcf	(___fladd@b+1)^0,f,c
  7793  0024AC  3237               	rrcf	___fladd@b^0,f,c
  7794  0024AE  2A45               	incf	___fladd@bexp^0,f,c
  7795  0024B0                     l1253:
  7796  0024B0  5044               	movf	___fladd@aexp^0,w,c
  7797  0024B2  5C45               	subwf	___fladd@bexp^0,w,c
  7798  0024B4  A0D8               	btfss	status,0,c
  7799  0024B6  EF5F  F012         	goto	u6221
  7800  0024BA  EF61  F012         	goto	u6220
  7801  0024BE                     u6221:
  7802  0024BE  EF3B  F012         	goto	l1254
  7803  0024C2                     u6220:
  7804  0024C2                     l1252:
  7805  0024C2  BC43               	btfsc	___fladd@signs^0,6,c
  7806  0024C4  EF66  F012         	goto	u6231
  7807  0024C8  EF68  F012         	goto	u6230
  7808  0024CC                     u6231:
  7809  0024CC  EFA8  F012         	goto	l6431
  7810  0024D0                     u6230:
  7811  0024D0  5045               	movf	___fladd@bexp^0,w,c
  7812  0024D2  A4D8               	btfss	status,2,c
  7813  0024D4  EF6E  F012         	goto	u6241
  7814  0024D8  EF70  F012         	goto	u6240
  7815  0024DC                     u6241:
  7816  0024DC  EF7A  F012         	goto	l6413
  7817  0024E0                     u6240:
  7818  0024E0  0E00               	movlw	0
  7819  0024E2  6E37               	movwf	?___fladd^0,c
  7820  0024E4  0E00               	movlw	0
  7821  0024E6  6E38               	movwf	(?___fladd+1)^0,c
  7822  0024E8  0E00               	movlw	0
  7823  0024EA  6E39               	movwf	(?___fladd+2)^0,c
  7824  0024EC  0E00               	movlw	0
  7825  0024EE  6E3A               	movwf	(?___fladd+3)^0,c
  7826  0024F0  EFC9  F013         	goto	l1261
  7827  0024F4                     l6413:
  7828  0024F4  503B               	movf	___fladd@a^0,w,c
  7829  0024F6  2637               	addwf	___fladd@b^0,f,c
  7830  0024F8  503C               	movf	(___fladd@a+1)^0,w,c
  7831  0024FA  2238               	addwfc	(___fladd@b+1)^0,f,c
  7832  0024FC  503D               	movf	(___fladd@a+2)^0,w,c
  7833  0024FE  2239               	addwfc	(___fladd@b+2)^0,f,c
  7834  002500  503E               	movf	(___fladd@a+3)^0,w,c
  7835  002502  223A               	addwfc	(___fladd@b+3)^0,f,c
  7836  002504  A03A               	btfss	(___fladd@b+3)^0,0,c
  7837  002506  EF87  F012         	goto	u6251
  7838  00250A  EF89  F012         	goto	u6250
  7839  00250E                     u6251:
  7840  00250E  EF35  F013         	goto	l6467
  7841  002512                     u6250:
  7842  002512  A046               	btfss	___fladd@grs^0,0,c
  7843  002514  EF8E  F012         	goto	u6261
  7844  002518  EF90  F012         	goto	u6260
  7845  00251C                     u6261:
  7846  00251C  EF96  F012         	goto	l6421
  7847  002520                     u6260:
  7848  002520  90D8               	bcf	status,0,c
  7849  002522  3046               	rrcf	___fladd@grs^0,w,c
  7850  002524  0901               	iorlw	1
  7851  002526  6E46               	movwf	___fladd@grs^0,c
  7852  002528  EF98  F012         	goto	l6423
  7853  00252C                     l6421:
  7854  00252C  90D8               	bcf	status,0,c
  7855  00252E  3246               	rrcf	___fladd@grs^0,f,c
  7856  002530                     l6423:
  7857  002530  A037               	btfss	___fladd@b^0,0,c
  7858  002532  EF9D  F012         	goto	u6271
  7859  002536  EF9F  F012         	goto	u6270
  7860  00253A                     u6271:
  7861  00253A  EFA0  F012         	goto	l6427
  7862  00253E                     u6270:
  7863  00253E  8E46               	bsf	___fladd@grs^0,7,c
  7864  002540                     l6427:
  7865  002540  343A               	rlcf	(___fladd@b+3)^0,w,c
  7866  002542  323A               	rrcf	(___fladd@b+3)^0,f,c
  7867  002544  3239               	rrcf	(___fladd@b+2)^0,f,c
  7868  002546  3238               	rrcf	(___fladd@b+1)^0,f,c
  7869  002548  3237               	rrcf	___fladd@b^0,f,c
  7870  00254A  2A45               	incf	___fladd@bexp^0,f,c
  7871  00254C  EF35  F013         	goto	l6467
  7872  002550                     l6431:
  7873  002550  503B               	movf	___fladd@a^0,w,c
  7874  002552  5C37               	subwf	___fladd@b^0,w,c
  7875  002554  503C               	movf	(___fladd@a+1)^0,w,c
  7876  002556  5838               	subwfb	(___fladd@b+1)^0,w,c
  7877  002558  503D               	movf	(___fladd@a+2)^0,w,c
  7878  00255A  5839               	subwfb	(___fladd@b+2)^0,w,c
  7879  00255C  503A               	movf	(___fladd@b+3)^0,w,c
  7880  00255E  0A80               	xorlw	128
  7881  002560  6E3F               	movwf	??___fladd^0,c
  7882  002562  503E               	movf	(___fladd@a+3)^0,w,c
  7883  002564  0A80               	xorlw	128
  7884  002566  583F               	subwfb	??___fladd^0,w,c
  7885  002568  B0D8               	btfsc	status,0,c
  7886  00256A  EFB9  F012         	goto	u6281
  7887  00256E  EFBB  F012         	goto	u6280
  7888  002572                     u6281:
  7889  002572  EFE6  F012         	goto	l6441
  7890  002576                     u6280:
  7891  002576  5037               	movf	___fladd@b^0,w,c
  7892  002578  5C3B               	subwf	___fladd@a^0,w,c
  7893  00257A  6E3F               	movwf	??___fladd^0,c
  7894  00257C  5038               	movf	(___fladd@b+1)^0,w,c
  7895  00257E  583C               	subwfb	(___fladd@a+1)^0,w,c
  7896  002580  6E40               	movwf	(??___fladd+1)^0,c
  7897  002582  5039               	movf	(___fladd@b+2)^0,w,c
  7898  002584  583D               	subwfb	(___fladd@a+2)^0,w,c
  7899  002586  6E41               	movwf	(??___fladd+2)^0,c
  7900  002588  503A               	movf	(___fladd@b+3)^0,w,c
  7901  00258A  583E               	subwfb	(___fladd@a+3)^0,w,c
  7902  00258C  6E42               	movwf	(??___fladd+3)^0,c
  7903  00258E  0EFF               	movlw	255
  7904  002590  243F               	addwf	??___fladd^0,w,c
  7905  002592  6E37               	movwf	___fladd@b^0,c
  7906  002594  0EFF               	movlw	255
  7907  002596  2040               	addwfc	(??___fladd+1)^0,w,c
  7908  002598  6E38               	movwf	(___fladd@b+1)^0,c
  7909  00259A  0EFF               	movlw	255
  7910  00259C  2041               	addwfc	(??___fladd+2)^0,w,c
  7911  00259E  6E39               	movwf	(___fladd@b+2)^0,c
  7912  0025A0  0EFF               	movlw	255
  7913  0025A2  2042               	addwfc	(??___fladd+3)^0,w,c
  7914  0025A4  6E3A               	movwf	(___fladd@b+3)^0,c
  7915  0025A6  0E80               	movlw	128
  7916  0025A8  1A43               	xorwf	___fladd@signs^0,f,c
  7917  0025AA  6C46               	negf	___fladd@grs^0,c
  7918  0025AC  5046               	movf	___fladd@grs^0,w,c
  7919  0025AE  A4D8               	btfss	status,2,c
  7920  0025B0  EFDC  F012         	goto	u6291
  7921  0025B4  EFDE  F012         	goto	u6290
  7922  0025B8                     u6291:
  7923  0025B8  EFEE  F012         	goto	l1269
  7924  0025BC                     u6290:
  7925  0025BC  0E01               	movlw	1
  7926  0025BE  2637               	addwf	___fladd@b^0,f,c
  7927  0025C0  0E00               	movlw	0
  7928  0025C2  2238               	addwfc	(___fladd@b+1)^0,f,c
  7929  0025C4  2239               	addwfc	(___fladd@b+2)^0,f,c
  7930  0025C6  223A               	addwfc	(___fladd@b+3)^0,f,c
  7931  0025C8  EFEE  F012         	goto	l1269
  7932  0025CC                     l6441:
  7933  0025CC  503B               	movf	___fladd@a^0,w,c
  7934  0025CE  5E37               	subwf	___fladd@b^0,f,c
  7935  0025D0  503C               	movf	(___fladd@a+1)^0,w,c
  7936  0025D2  5A38               	subwfb	(___fladd@b+1)^0,f,c
  7937  0025D4  503D               	movf	(___fladd@a+2)^0,w,c
  7938  0025D6  5A39               	subwfb	(___fladd@b+2)^0,f,c
  7939  0025D8  503E               	movf	(___fladd@a+3)^0,w,c
  7940  0025DA  5A3A               	subwfb	(___fladd@b+3)^0,f,c
  7941  0025DC                     l1269:
  7942  0025DC  5037               	movf	___fladd@b^0,w,c
  7943  0025DE  1038               	iorwf	(___fladd@b+1)^0,w,c
  7944  0025E0  1039               	iorwf	(___fladd@b+2)^0,w,c
  7945  0025E2  103A               	iorwf	(___fladd@b+3)^0,w,c
  7946  0025E4  A4D8               	btfss	status,2,c
  7947  0025E6  EFF7  F012         	goto	u6301
  7948  0025EA  EFF9  F012         	goto	u6300
  7949  0025EE                     u6301:
  7950  0025EE  EF2E  F013         	goto	l6465
  7951  0025F2                     u6300:
  7952  0025F2  5046               	movf	___fladd@grs^0,w,c
  7953  0025F4  A4D8               	btfss	status,2,c
  7954  0025F6  EFFF  F012         	goto	u6311
  7955  0025FA  EF01  F013         	goto	u6310
  7956  0025FE                     u6311:
  7957  0025FE  EF2E  F013         	goto	l6465
  7958  002602                     u6310:
  7959  002602  0E00               	movlw	0
  7960  002604  6E37               	movwf	?___fladd^0,c
  7961  002606  0E00               	movlw	0
  7962  002608  6E38               	movwf	(?___fladd+1)^0,c
  7963  00260A  0E00               	movlw	0
  7964  00260C  6E39               	movwf	(?___fladd+2)^0,c
  7965  00260E  0E00               	movlw	0
  7966  002610  6E3A               	movwf	(?___fladd+3)^0,c
  7967  002612  EFC9  F013         	goto	l1261
  7968  002616                     l6449:
  7969  002616  90D8               	bcf	status,0,c
  7970  002618  3637               	rlcf	___fladd@b^0,f,c
  7971  00261A  3638               	rlcf	(___fladd@b+1)^0,f,c
  7972  00261C  3639               	rlcf	(___fladd@b+2)^0,f,c
  7973  00261E  363A               	rlcf	(___fladd@b+3)^0,f,c
  7974  002620  AE46               	btfss	___fladd@grs^0,7,c
  7975  002622  EF15  F013         	goto	u6321
  7976  002626  EF17  F013         	goto	u6320
  7977  00262A                     u6321:
  7978  00262A  EF18  F013         	goto	l6455
  7979  00262E                     u6320:
  7980  00262E  8037               	bsf	___fladd@b^0,0,c
  7981  002630                     l6455:
  7982  002630  A046               	btfss	___fladd@grs^0,0,c
  7983  002632  EF1D  F013         	goto	u6331
  7984  002636  EF1F  F013         	goto	u6330
  7985  00263A                     u6331:
  7986  00263A  EF23  F013         	goto	l6459
  7987  00263E                     u6330:
  7988  00263E  80D8               	bsf	status,0,c
  7989  002640  3646               	rlcf	___fladd@grs^0,f,c
  7990  002642  EF25  F013         	goto	l6461
  7991  002646                     l6459:
  7992  002646  90D8               	bcf	status,0,c
  7993  002648  3646               	rlcf	___fladd@grs^0,f,c
  7994  00264A                     l6461:
  7995  00264A  5045               	movf	___fladd@bexp^0,w,c
  7996  00264C  B4D8               	btfsc	status,2,c
  7997  00264E  EF2B  F013         	goto	u6341
  7998  002652  EF2D  F013         	goto	u6340
  7999  002656                     u6341:
  8000  002656  EF2E  F013         	goto	l6465
  8001  00265A                     u6340:
  8002  00265A  0645               	decf	___fladd@bexp^0,f,c
  8003  00265C                     l6465:
  8004  00265C  AE39               	btfss	(___fladd@b+2)^0,7,c
  8005  00265E  EF33  F013         	goto	u6351
  8006  002662  EF35  F013         	goto	u6350
  8007  002666                     u6351:
  8008  002666  EF0B  F013         	goto	l6449
  8009  00266A                     u6350:
  8010  00266A                     l6467:
  8011  00266A  0E00               	movlw	0
  8012  00266C  6E44               	movwf	___fladd@aexp^0,c
  8013  00266E  AE46               	btfss	___fladd@grs^0,7,c
  8014  002670  EF3C  F013         	goto	u6361
  8015  002674  EF3E  F013         	goto	u6360
  8016  002678                     u6361:
  8017  002678  EF56  F013         	goto	l1278
  8018  00267C                     u6360:
  8019  00267C  C046  F03F         	movff	___fladd@grs,??___fladd
  8020  002680  0E7F               	movlw	127
  8021  002682  163F               	andwf	??___fladd^0,f,c
  8022  002684  B4D8               	btfsc	status,2,c
  8023  002686  EF47  F013         	goto	u6371
  8024  00268A  EF49  F013         	goto	u6370
  8025  00268E                     u6371:
  8026  00268E  EF4D  F013         	goto	l1279
  8027  002692                     u6370:
  8028  002692                     l6473:
  8029  002692  0E01               	movlw	1
  8030  002694  6E44               	movwf	___fladd@aexp^0,c
  8031  002696  EF56  F013         	goto	l1278
  8032  00269A                     l1279:
  8033  00269A  A037               	btfss	___fladd@b^0,0,c
  8034  00269C  EF52  F013         	goto	u6381
  8035  0026A0  EF54  F013         	goto	u6380
  8036  0026A4                     u6381:
  8037  0026A4  EF56  F013         	goto	l1278
  8038  0026A8                     u6380:
  8039  0026A8  EF49  F013         	goto	l6473
  8040  0026AC                     l1278:
  8041  0026AC  5044               	movf	___fladd@aexp^0,w,c
  8042  0026AE  B4D8               	btfsc	status,2,c
  8043  0026B0  EF5C  F013         	goto	u6391
  8044  0026B4  EF5E  F013         	goto	u6390
  8045  0026B8                     u6391:
  8046  0026B8  EF89  F013         	goto	l6485
  8047  0026BC                     u6390:
  8048  0026BC  0E01               	movlw	1
  8049  0026BE  2637               	addwf	___fladd@b^0,f,c
  8050  0026C0  0E00               	movlw	0
  8051  0026C2  2238               	addwfc	(___fladd@b+1)^0,f,c
  8052  0026C4  2239               	addwfc	(___fladd@b+2)^0,f,c
  8053  0026C6  223A               	addwfc	(___fladd@b+3)^0,f,c
  8054  0026C8  A03A               	btfss	(___fladd@b+3)^0,0,c
  8055  0026CA  EF69  F013         	goto	u6401
  8056  0026CE  EF6B  F013         	goto	u6400
  8057  0026D2                     u6401:
  8058  0026D2  EF89  F013         	goto	l6485
  8059  0026D6                     u6400:
  8060  0026D6  C037  F03F         	movff	___fladd@b,??___fladd
  8061  0026DA  C038  F040         	movff	___fladd@b+1,??___fladd+1
  8062  0026DE  C039  F041         	movff	___fladd@b+2,??___fladd+2
  8063  0026E2  C03A  F042         	movff	___fladd@b+3,??___fladd+3
  8064  0026E6  3442               	rlcf	(??___fladd+3)^0,w,c
  8065  0026E8  3242               	rrcf	(??___fladd+3)^0,f,c
  8066  0026EA  3241               	rrcf	(??___fladd+2)^0,f,c
  8067  0026EC  3240               	rrcf	(??___fladd+1)^0,f,c
  8068  0026EE  323F               	rrcf	??___fladd^0,f,c
  8069  0026F0  C03F  F037         	movff	??___fladd,___fladd@b
  8070  0026F4  C040  F038         	movff	??___fladd+1,___fladd@b+1
  8071  0026F8  C041  F039         	movff	??___fladd+2,___fladd@b+2
  8072  0026FC  C042  F03A         	movff	??___fladd+3,___fladd@b+3
  8073  002700  2845               	incf	___fladd@bexp^0,w,c
  8074  002702  B4D8               	btfsc	status,2,c
  8075  002704  EF86  F013         	goto	u6411
  8076  002708  EF88  F013         	goto	u6410
  8077  00270C                     u6411:
  8078  00270C  EF89  F013         	goto	l6485
  8079  002710                     u6410:
  8080  002710  2A45               	incf	___fladd@bexp^0,f,c
  8081  002712                     l6485:
  8082  002712  2845               	incf	___fladd@bexp^0,w,c
  8083  002714  B4D8               	btfsc	status,2,c
  8084  002716  EF8F  F013         	goto	u6421
  8085  00271A  EF91  F013         	goto	u6420
  8086  00271E                     u6421:
  8087  00271E  EF99  F013         	goto	l6489
  8088  002722                     u6420:
  8089  002722  5045               	movf	___fladd@bexp^0,w,c
  8090  002724  A4D8               	btfss	status,2,c
  8091  002726  EF97  F013         	goto	u6431
  8092  00272A  EF99  F013         	goto	u6430
  8093  00272E                     u6431:
  8094  00272E  EFAB  F013         	goto	l6493
  8095  002732                     u6430:
  8096  002732                     l6489:
  8097  002732  0E00               	movlw	0
  8098  002734  6E37               	movwf	___fladd@b^0,c
  8099  002736  0E00               	movlw	0
  8100  002738  6E38               	movwf	(___fladd@b+1)^0,c
  8101  00273A  0E00               	movlw	0
  8102  00273C  6E39               	movwf	(___fladd@b+2)^0,c
  8103  00273E  0E00               	movlw	0
  8104  002740  6E3A               	movwf	(___fladd@b+3)^0,c
  8105  002742  5045               	movf	___fladd@bexp^0,w,c
  8106  002744  A4D8               	btfss	status,2,c
  8107  002746  EFA7  F013         	goto	u6441
  8108  00274A  EFA9  F013         	goto	u6440
  8109  00274E                     u6441:
  8110  00274E  EFAB  F013         	goto	l6493
  8111  002752                     u6440:
  8112  002752  0E00               	movlw	0
  8113  002754  6E43               	movwf	___fladd@signs^0,c
  8114  002756                     l6493:
  8115  002756  A045               	btfss	___fladd@bexp^0,0,c
  8116  002758  EFB0  F013         	goto	u6451
  8117  00275C  EFB2  F013         	goto	u6450
  8118  002760                     u6451:
  8119  002760  EFB5  F013         	goto	l6497
  8120  002764                     u6450:
  8121  002764  8E39               	bsf	(___fladd@b+2)^0,7,c
  8122  002766  EFB6  F013         	goto	l6499
  8123  00276A                     l6497:
  8124  00276A  9E39               	bcf	(___fladd@b+2)^0,7,c
  8125  00276C                     l6499:
  8126  00276C  90D8               	bcf	status,0,c
  8127  00276E  3045               	rrcf	___fladd@bexp^0,w,c
  8128  002770  6E3A               	movwf	(___fladd@b+3)^0,c
  8129  002772  AE43               	btfss	___fladd@signs^0,7,c
  8130  002774  EFBE  F013         	goto	u6461
  8131  002778  EFC0  F013         	goto	u6460
  8132  00277C                     u6461:
  8133  00277C  EFC1  F013         	goto	l6505
  8134  002780                     u6460:
  8135  002780  8E3A               	bsf	(___fladd@b+3)^0,7,c
  8136  002782                     l6505:
  8137  002782  C037  F037         	movff	___fladd@b,?___fladd
  8138  002786  C038  F038         	movff	___fladd@b+1,?___fladd+1
  8139  00278A  C039  F039         	movff	___fladd@b+2,?___fladd+2
  8140  00278E  C03A  F03A         	movff	___fladd@b+3,?___fladd+3
  8141  002792                     l1261:
  8142  002792  0012               	return		;funcret
  8143  002794                     __end_of___fladd:
  8144                           	callstack 0
  8145                           
  8146 ;; *************** function _HDC1080_humy_GetValue *****************
  8147 ;; Defined at:
  8148 ;;		line 42 in file "hdc1080.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;		None
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  humyDataAnz     4   60[COMRAM] float 
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  4   54[COMRAM] float 
  8155 ;; Registers used:
  8156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8163 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8165 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8166 ;;Total ram usage:       10 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; Hardware stack levels required when called:   14
  8169 ;; This function calls:
  8170 ;;		_HDC1080_Read
  8171 ;;		___fldiv
  8172 ;;		___flmul
  8173 ;;		___xxtofl
  8174 ;; This function is called by:
  8175 ;;		_main
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           	psect	text41
  8180  003DDA                     __ptext41:
  8181                           	callstack 0
  8182  003DDA                     _HDC1080_humy_GetValue:
  8183                           	callstack 16
  8184  003DDA                     
  8185                           ;hdc1080.c: 43:     float humyDataAnz;;hdc1080.c: 45:     HDC1080_Read();
  8186  003DDA  ECE8  F022         	call	_HDC1080_Read	;wreg free
  8187  003DDE                     
  8188                           ;hdc1080.c: 46:     humyDataAnz = (readBuffer[2] << 8) + readBuffer[3];
  8189  003DDE  0101               	movlb	1	; () banked
  8190  003DE0  5177               	movf	(_readBuffer+3)& (0+255),w,b
  8191  003DE2  C176  F03B         	movff	_readBuffer+2,??_HDC1080_humy_GetValue
  8192  003DE6  6A3C               	clrf	(??_HDC1080_humy_GetValue+1)^0,c
  8193  003DE8  C03B  F03C         	movff	??_HDC1080_humy_GetValue,??_HDC1080_humy_GetValue+1
  8194  003DEC  6A3B               	clrf	??_HDC1080_humy_GetValue^0,c
  8195  003DEE  263B               	addwf	??_HDC1080_humy_GetValue^0,f,c
  8196  003DF0  0E00               	movlw	0
  8197  003DF2  223C               	addwfc	(??_HDC1080_humy_GetValue+1)^0,f,c
  8198  003DF4  C03B  F005         	movff	??_HDC1080_humy_GetValue,___xxtofl@val
  8199  003DF8  C03C  F006         	movff	??_HDC1080_humy_GetValue+1,___xxtofl@val+1
  8200  003DFC  0E00               	movlw	0
  8201  003DFE  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  8202  003E00  0EFF               	movlw	-1
  8203  003E02  6E07               	movwf	(___xxtofl@val+2)^0,c
  8204  003E04  6E08               	movwf	(___xxtofl@val+3)^0,c
  8205  003E06  0E01               	movlw	1
  8206  003E08  ECB5  F018         	call	___xxtofl
  8207  003E0C  C005  F03D         	movff	?___xxtofl,HDC1080_humy_GetValue@humyDataAnz
  8208  003E10  C006  F03E         	movff	?___xxtofl+1,HDC1080_humy_GetValue@humyDataAnz+1
  8209  003E14  C007  F03F         	movff	?___xxtofl+2,HDC1080_humy_GetValue@humyDataAnz+2
  8210  003E18  C008  F040         	movff	?___xxtofl+3,HDC1080_humy_GetValue@humyDataAnz+3
  8211  003E1C                     
  8212                           ;hdc1080.c: 47:     humyDataAnz = humyDataAnz * 100 / 65536;
  8213  003E1C  0E00               	movlw	0
  8214  003E1E  6E09               	movwf	___flmul@a^0,c
  8215  003E20  0E00               	movlw	0
  8216  003E22  6E0A               	movwf	(___flmul@a+1)^0,c
  8217  003E24  0EC8               	movlw	200
  8218  003E26  6E0B               	movwf	(___flmul@a+2)^0,c
  8219  003E28  0E42               	movlw	66
  8220  003E2A  6E0C               	movwf	(___flmul@a+3)^0,c
  8221  003E2C  C03D  F005         	movff	HDC1080_humy_GetValue@humyDataAnz,___flmul@b
  8222  003E30  C03E  F006         	movff	HDC1080_humy_GetValue@humyDataAnz+1,___flmul@b+1
  8223  003E34  C03F  F007         	movff	HDC1080_humy_GetValue@humyDataAnz+2,___flmul@b+2
  8224  003E38  C040  F008         	movff	HDC1080_humy_GetValue@humyDataAnz+3,___flmul@b+3
  8225  003E3C  ECCA  F013         	call	___flmul	;wreg free
  8226  003E40  C005  F01E         	movff	?___flmul,___fldiv@b
  8227  003E44  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  8228  003E48  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  8229  003E4C  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  8230  003E50  0E00               	movlw	0
  8231  003E52  6E22               	movwf	___fldiv@a^0,c
  8232  003E54  0E00               	movlw	0
  8233  003E56  6E23               	movwf	(___fldiv@a+1)^0,c
  8234  003E58  0E80               	movlw	128
  8235  003E5A  6E24               	movwf	(___fldiv@a+2)^0,c
  8236  003E5C  0E47               	movlw	71
  8237  003E5E  6E25               	movwf	(___fldiv@a+3)^0,c
  8238  003E60  ECDF  F015         	call	___fldiv	;wreg free
  8239  003E64  C01E  F03D         	movff	?___fldiv,HDC1080_humy_GetValue@humyDataAnz
  8240  003E68  C01F  F03E         	movff	?___fldiv+1,HDC1080_humy_GetValue@humyDataAnz+1
  8241  003E6C  C020  F03F         	movff	?___fldiv+2,HDC1080_humy_GetValue@humyDataAnz+2
  8242  003E70  C021  F040         	movff	?___fldiv+3,HDC1080_humy_GetValue@humyDataAnz+3
  8243  003E74                     
  8244                           ;hdc1080.c: 49:     return humyDataAnz;
  8245  003E74  C03D  F037         	movff	HDC1080_humy_GetValue@humyDataAnz,?_HDC1080_humy_GetValue
  8246  003E78  C03E  F038         	movff	HDC1080_humy_GetValue@humyDataAnz+1,?_HDC1080_humy_GetValue+1
  8247  003E7C  C03F  F039         	movff	HDC1080_humy_GetValue@humyDataAnz+2,?_HDC1080_humy_GetValue+2
  8248  003E80  C040  F03A         	movff	HDC1080_humy_GetValue@humyDataAnz+3,?_HDC1080_humy_GetValue+3
  8249  003E84  0012               	return		;funcret
  8250  003E86                     __end_of_HDC1080_humy_GetValue:
  8251                           	callstack 0
  8252                           
  8253 ;; *************** function ___xxtofl *****************
  8254 ;; Defined at:
  8255 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  sign            1    wreg     unsigned char 
  8258 ;;  val             4    4[COMRAM] long 
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;  sign            1   12[COMRAM] unsigned char 
  8261 ;;  arg             4   14[COMRAM] unsigned long 
  8262 ;;  exp             1   13[COMRAM] unsigned char 
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  4    4[COMRAM] unsigned char 
  8265 ;; Registers used:
  8266 ;;		wreg, status,2, status,0
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8272 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;Total ram usage:       14 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:    4
  8279 ;; This function calls:
  8280 ;;		Nothing
  8281 ;; This function is called by:
  8282 ;;		_HDC1080_temp_GetValue
  8283 ;;		_HDC1080_humy_GetValue
  8284 ;; This function uses a non-reentrant model
  8285 ;;
  8286                           
  8287                           	psect	text42
  8288  00316A                     __ptext42:
  8289                           	callstack 0
  8290  00316A                     ___xxtofl:
  8291                           	callstack 25
  8292                           
  8293                           ;incstack = 0
  8294                           ;___xxtofl@sign stored from wreg
  8295  00316A  6E0D               	movwf	___xxtofl@sign^0,c
  8296  00316C  500D               	movf	___xxtofl@sign^0,w,c
  8297  00316E  B4D8               	btfsc	status,2,c
  8298  003170  EFBC  F018         	goto	u5631
  8299  003174  EFBE  F018         	goto	u5630
  8300  003178                     u5631:
  8301  003178  EFE0  F018         	goto	l1379
  8302  00317C                     u5630:
  8303  00317C  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8304  00317E  EFC5  F018         	goto	u5640
  8305  003182  EFC3  F018         	goto	u5641
  8306  003186                     u5641:
  8307  003186  EFE0  F018         	goto	l1379
  8308  00318A                     u5640:
  8309  00318A  C005  F009         	movff	___xxtofl@val,??___xxtofl
  8310  00318E  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  8311  003192  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  8312  003196  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  8313  00319A  1E09               	comf	??___xxtofl^0,f,c
  8314  00319C  1E0A               	comf	(??___xxtofl+1)^0,f,c
  8315  00319E  1E0B               	comf	(??___xxtofl+2)^0,f,c
  8316  0031A0  1E0C               	comf	(??___xxtofl+3)^0,f,c
  8317  0031A2  2A09               	incf	??___xxtofl^0,f,c
  8318  0031A4  0E00               	movlw	0
  8319  0031A6  220A               	addwfc	(??___xxtofl+1)^0,f,c
  8320  0031A8  220B               	addwfc	(??___xxtofl+2)^0,f,c
  8321  0031AA  220C               	addwfc	(??___xxtofl+3)^0,f,c
  8322  0031AC  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  8323  0031B0  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  8324  0031B4  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  8325  0031B8  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  8326  0031BC  EFE8  F018         	goto	l5831
  8327  0031C0                     l1379:
  8328  0031C0  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  8329  0031C4  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8330  0031C8  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8331  0031CC  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8332  0031D0                     l5831:
  8333  0031D0  5005               	movf	___xxtofl@val^0,w,c
  8334  0031D2  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  8335  0031D4  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  8336  0031D6  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  8337  0031D8  A4D8               	btfss	status,2,c
  8338  0031DA  EFF1  F018         	goto	u5651
  8339  0031DE  EFF3  F018         	goto	u5650
  8340  0031E2                     u5651:
  8341  0031E2  EFFD  F018         	goto	l5837
  8342  0031E6                     u5650:
  8343  0031E6  0E00               	movlw	0
  8344  0031E8  6E05               	movwf	?___xxtofl^0,c
  8345  0031EA  0E00               	movlw	0
  8346  0031EC  6E06               	movwf	(?___xxtofl+1)^0,c
  8347  0031EE  0E00               	movlw	0
  8348  0031F0  6E07               	movwf	(?___xxtofl+2)^0,c
  8349  0031F2  0E00               	movlw	0
  8350  0031F4  6E08               	movwf	(?___xxtofl+3)^0,c
  8351  0031F6  EF8E  F019         	goto	l1382
  8352  0031FA                     l5837:
  8353  0031FA  0E96               	movlw	150
  8354  0031FC  6E0E               	movwf	___xxtofl@exp^0,c
  8355  0031FE  EF07  F019         	goto	l5841
  8356  003202                     l5839:
  8357  003202  2A0E               	incf	___xxtofl@exp^0,f,c
  8358  003204  90D8               	bcf	status,0,c
  8359  003206  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8360  003208  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8361  00320A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8362  00320C  320F               	rrcf	___xxtofl@arg^0,f,c
  8363  00320E                     l5841:
  8364  00320E  0E00               	movlw	0
  8365  003210  140F               	andwf	___xxtofl@arg^0,w,c
  8366  003212  6E09               	movwf	??___xxtofl^0,c
  8367  003214  0E00               	movlw	0
  8368  003216  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8369  003218  6E0A               	movwf	(??___xxtofl+1)^0,c
  8370  00321A  0E00               	movlw	0
  8371  00321C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8372  00321E  6E0B               	movwf	(??___xxtofl+2)^0,c
  8373  003220  0EFE               	movlw	254
  8374  003222  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8375  003224  6E0C               	movwf	(??___xxtofl+3)^0,c
  8376  003226  5009               	movf	??___xxtofl^0,w,c
  8377  003228  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8378  00322A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8379  00322C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8380  00322E  A4D8               	btfss	status,2,c
  8381  003230  EF1C  F019         	goto	u5661
  8382  003234  EF1E  F019         	goto	u5660
  8383  003238                     u5661:
  8384  003238  EF01  F019         	goto	l5839
  8385  00323C                     u5660:
  8386  00323C  EF2C  F019         	goto	l1386
  8387  003240                     l5843:
  8388  003240  2A0E               	incf	___xxtofl@exp^0,f,c
  8389  003242  0E01               	movlw	1
  8390  003244  260F               	addwf	___xxtofl@arg^0,f,c
  8391  003246  0E00               	movlw	0
  8392  003248  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  8393  00324A  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  8394  00324C  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  8395  00324E  90D8               	bcf	status,0,c
  8396  003250  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8397  003252  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8398  003254  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8399  003256  320F               	rrcf	___xxtofl@arg^0,f,c
  8400  003258                     l1386:
  8401  003258  0E00               	movlw	0
  8402  00325A  140F               	andwf	___xxtofl@arg^0,w,c
  8403  00325C  6E09               	movwf	??___xxtofl^0,c
  8404  00325E  0E00               	movlw	0
  8405  003260  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8406  003262  6E0A               	movwf	(??___xxtofl+1)^0,c
  8407  003264  0E00               	movlw	0
  8408  003266  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8409  003268  6E0B               	movwf	(??___xxtofl+2)^0,c
  8410  00326A  0EFF               	movlw	255
  8411  00326C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8412  00326E  6E0C               	movwf	(??___xxtofl+3)^0,c
  8413  003270  5009               	movf	??___xxtofl^0,w,c
  8414  003272  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8415  003274  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8416  003276  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8417  003278  A4D8               	btfss	status,2,c
  8418  00327A  EF41  F019         	goto	u5671
  8419  00327E  EF43  F019         	goto	u5670
  8420  003282                     u5671:
  8421  003282  EF20  F019         	goto	l5843
  8422  003286                     u5670:
  8423  003286  EF4B  F019         	goto	l5851
  8424  00328A                     l5849:
  8425  00328A  060E               	decf	___xxtofl@exp^0,f,c
  8426  00328C  90D8               	bcf	status,0,c
  8427  00328E  360F               	rlcf	___xxtofl@arg^0,f,c
  8428  003290  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  8429  003292  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  8430  003294  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  8431  003296                     l5851:
  8432  003296  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  8433  003298  EF50  F019         	goto	u5681
  8434  00329C  EF52  F019         	goto	u5680
  8435  0032A0                     u5681:
  8436  0032A0  EF5A  F019         	goto	l1393
  8437  0032A4                     u5680:
  8438  0032A4  0E02               	movlw	2
  8439  0032A6  600E               	cpfslt	___xxtofl@exp^0,c
  8440  0032A8  EF58  F019         	goto	u5691
  8441  0032AC  EF5A  F019         	goto	u5690
  8442  0032B0                     u5691:
  8443  0032B0  EF45  F019         	goto	l5849
  8444  0032B4                     u5690:
  8445  0032B4                     l1393:
  8446  0032B4  B00E               	btfsc	___xxtofl@exp^0,0,c
  8447  0032B6  EF5F  F019         	goto	u5701
  8448  0032BA  EF61  F019         	goto	u5700
  8449  0032BE                     u5701:
  8450  0032BE  EF62  F019         	goto	l5857
  8451  0032C2                     u5700:
  8452  0032C2  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  8453  0032C4                     l5857:
  8454  0032C4  90D8               	bcf	status,0,c
  8455  0032C6  320E               	rrcf	___xxtofl@exp^0,f,c
  8456  0032C8  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  8457  0032CC  6A0A               	clrf	(??___xxtofl+1)^0,c
  8458  0032CE  6A0B               	clrf	(??___xxtofl+2)^0,c
  8459  0032D0  6A0C               	clrf	(??___xxtofl+3)^0,c
  8460  0032D2  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  8461  0032D6  6A0B               	clrf	(??___xxtofl+2)^0,c
  8462  0032D8  6A0A               	clrf	(??___xxtofl+1)^0,c
  8463  0032DA  6A09               	clrf	??___xxtofl^0,c
  8464  0032DC  5009               	movf	??___xxtofl^0,w,c
  8465  0032DE  120F               	iorwf	___xxtofl@arg^0,f,c
  8466  0032E0  500A               	movf	(??___xxtofl+1)^0,w,c
  8467  0032E2  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  8468  0032E4  500B               	movf	(??___xxtofl+2)^0,w,c
  8469  0032E6  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  8470  0032E8  500C               	movf	(??___xxtofl+3)^0,w,c
  8471  0032EA  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  8472  0032EC  500D               	movf	___xxtofl@sign^0,w,c
  8473  0032EE  B4D8               	btfsc	status,2,c
  8474  0032F0  EF7C  F019         	goto	u5711
  8475  0032F4  EF7E  F019         	goto	u5710
  8476  0032F8                     u5711:
  8477  0032F8  EF86  F019         	goto	l5867
  8478  0032FC                     u5710:
  8479  0032FC  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8480  0032FE  EF85  F019         	goto	u5720
  8481  003302  EF83  F019         	goto	u5721
  8482  003306                     u5721:
  8483  003306  EF86  F019         	goto	l5867
  8484  00330A                     u5720:
  8485  00330A  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8486  00330C                     l5867:
  8487  00330C  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8488  003310  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8489  003314  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8490  003318  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8491  00331C                     l1382:
  8492  00331C  0012               	return		;funcret
  8493  00331E                     __end_of___xxtofl:
  8494                           	callstack 0
  8495                           
  8496 ;; *************** function ___flmul *****************
  8497 ;; Defined at:
  8498 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  b               4    4[COMRAM] unsigned char 
  8501 ;;  a               4    8[COMRAM] unsigned char 
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;  prod            4   23[COMRAM] struct .
  8504 ;;  grs             4   18[COMRAM] unsigned long 
  8505 ;;  temp            2   27[COMRAM] struct .
  8506 ;;  bexp            1   22[COMRAM] unsigned char 
  8507 ;;  aexp            1   17[COMRAM] unsigned char 
  8508 ;;  sign            1   16[COMRAM] unsigned char 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  4    4[COMRAM] unsigned char 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2, status,0, prodl, prodh
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8518 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8519 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8520 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8521 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;Total ram usage:       25 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    4
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_HDC1080_temp_GetValue
  8529 ;;		_HDC1080_humy_GetValue
  8530 ;;		_efgtoa
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text43
  8535  002794                     __ptext43:
  8536                           	callstack 0
  8537  002794                     ___flmul:
  8538                           	callstack 22
  8539  002794  5008               	movf	(___flmul@b+3)^0,w,c
  8540  002796  0B80               	andlw	128
  8541  002798  6E11               	movwf	___flmul@sign^0,c
  8542  00279A  5008               	movf	(___flmul@b+3)^0,w,c
  8543  00279C  2408               	addwf	(___flmul@b+3)^0,w,c
  8544  00279E  6E17               	movwf	___flmul@bexp^0,c
  8545  0027A0  AE07               	btfss	(___flmul@b+2)^0,7,c
  8546  0027A2  EFD5  F013         	goto	u6741
  8547  0027A6  EFD7  F013         	goto	u6740
  8548  0027AA                     u6741:
  8549  0027AA  EFD8  F013         	goto	l6681
  8550  0027AE                     u6740:
  8551  0027AE  8017               	bsf	___flmul@bexp^0,0,c
  8552  0027B0                     l6681:
  8553  0027B0  5017               	movf	___flmul@bexp^0,w,c
  8554  0027B2  B4D8               	btfsc	status,2,c
  8555  0027B4  EFDE  F013         	goto	u6751
  8556  0027B8  EFE0  F013         	goto	u6750
  8557  0027BC                     u6751:
  8558  0027BC  EFF3  F013         	goto	l6689
  8559  0027C0                     u6750:
  8560  0027C0  2817               	incf	___flmul@bexp^0,w,c
  8561  0027C2  A4D8               	btfss	status,2,c
  8562  0027C4  EFE6  F013         	goto	u6761
  8563  0027C8  EFE8  F013         	goto	u6760
  8564  0027CC                     u6761:
  8565  0027CC  EFF0  F013         	goto	l6687
  8566  0027D0                     u6760:
  8567  0027D0  0E00               	movlw	0
  8568  0027D2  6E05               	movwf	___flmul@b^0,c
  8569  0027D4  0E00               	movlw	0
  8570  0027D6  6E06               	movwf	(___flmul@b+1)^0,c
  8571  0027D8  0E00               	movlw	0
  8572  0027DA  6E07               	movwf	(___flmul@b+2)^0,c
  8573  0027DC  0E00               	movlw	0
  8574  0027DE  6E08               	movwf	(___flmul@b+3)^0,c
  8575  0027E0                     l6687:
  8576  0027E0  8E07               	bsf	(___flmul@b+2)^0,7,c
  8577  0027E2  EFFB  F013         	goto	l6691
  8578  0027E6                     l6689:
  8579  0027E6  0E00               	movlw	0
  8580  0027E8  6E05               	movwf	___flmul@b^0,c
  8581  0027EA  0E00               	movlw	0
  8582  0027EC  6E06               	movwf	(___flmul@b+1)^0,c
  8583  0027EE  0E00               	movlw	0
  8584  0027F0  6E07               	movwf	(___flmul@b+2)^0,c
  8585  0027F2  0E00               	movlw	0
  8586  0027F4  6E08               	movwf	(___flmul@b+3)^0,c
  8587  0027F6                     l6691:
  8588  0027F6  500C               	movf	(___flmul@a+3)^0,w,c
  8589  0027F8  0B80               	andlw	128
  8590  0027FA  1A11               	xorwf	___flmul@sign^0,f,c
  8591  0027FC  500C               	movf	(___flmul@a+3)^0,w,c
  8592  0027FE  240C               	addwf	(___flmul@a+3)^0,w,c
  8593  002800  6E12               	movwf	___flmul@aexp^0,c
  8594  002802  AE0B               	btfss	(___flmul@a+2)^0,7,c
  8595  002804  EF06  F014         	goto	u6771
  8596  002808  EF08  F014         	goto	u6770
  8597  00280C                     u6771:
  8598  00280C  EF09  F014         	goto	l6699
  8599  002810                     u6770:
  8600  002810  8012               	bsf	___flmul@aexp^0,0,c
  8601  002812                     l6699:
  8602  002812  5012               	movf	___flmul@aexp^0,w,c
  8603  002814  B4D8               	btfsc	status,2,c
  8604  002816  EF0F  F014         	goto	u6781
  8605  00281A  EF11  F014         	goto	u6780
  8606  00281E                     u6781:
  8607  00281E  EF24  F014         	goto	l6707
  8608  002822                     u6780:
  8609  002822  2812               	incf	___flmul@aexp^0,w,c
  8610  002824  A4D8               	btfss	status,2,c
  8611  002826  EF17  F014         	goto	u6791
  8612  00282A  EF19  F014         	goto	u6790
  8613  00282E                     u6791:
  8614  00282E  EF21  F014         	goto	l6705
  8615  002832                     u6790:
  8616  002832  0E00               	movlw	0
  8617  002834  6E09               	movwf	___flmul@a^0,c
  8618  002836  0E00               	movlw	0
  8619  002838  6E0A               	movwf	(___flmul@a+1)^0,c
  8620  00283A  0E00               	movlw	0
  8621  00283C  6E0B               	movwf	(___flmul@a+2)^0,c
  8622  00283E  0E00               	movlw	0
  8623  002840  6E0C               	movwf	(___flmul@a+3)^0,c
  8624  002842                     l6705:
  8625  002842  8E0B               	bsf	(___flmul@a+2)^0,7,c
  8626  002844  EF2C  F014         	goto	l1338
  8627  002848                     l6707:
  8628  002848  0E00               	movlw	0
  8629  00284A  6E09               	movwf	___flmul@a^0,c
  8630  00284C  0E00               	movlw	0
  8631  00284E  6E0A               	movwf	(___flmul@a+1)^0,c
  8632  002850  0E00               	movlw	0
  8633  002852  6E0B               	movwf	(___flmul@a+2)^0,c
  8634  002854  0E00               	movlw	0
  8635  002856  6E0C               	movwf	(___flmul@a+3)^0,c
  8636  002858                     l1338:
  8637  002858  5012               	movf	___flmul@aexp^0,w,c
  8638  00285A  B4D8               	btfsc	status,2,c
  8639  00285C  EF32  F014         	goto	u6801
  8640  002860  EF34  F014         	goto	u6800
  8641  002864                     u6801:
  8642  002864  EF3C  F014         	goto	l6711
  8643  002868                     u6800:
  8644  002868  5017               	movf	___flmul@bexp^0,w,c
  8645  00286A  A4D8               	btfss	status,2,c
  8646  00286C  EF3A  F014         	goto	u6811
  8647  002870  EF3C  F014         	goto	u6810
  8648  002874                     u6811:
  8649  002874  EF46  F014         	goto	l6715
  8650  002878                     u6810:
  8651  002878                     l6711:
  8652  002878  0E00               	movlw	0
  8653  00287A  6E05               	movwf	?___flmul^0,c
  8654  00287C  0E00               	movlw	0
  8655  00287E  6E06               	movwf	(?___flmul+1)^0,c
  8656  002880  0E00               	movlw	0
  8657  002882  6E07               	movwf	(?___flmul+2)^0,c
  8658  002884  0E00               	movlw	0
  8659  002886  6E08               	movwf	(?___flmul+3)^0,c
  8660  002888  EFDE  F015         	goto	l1342
  8661  00288C                     l6715:
  8662  00288C  500B               	movf	(___flmul@a+2)^0,w,c
  8663  00288E  0205               	mulwf	___flmul@b^0,c
  8664  002890  CFF3 F01C          	movff	prodl,___flmul@temp
  8665  002894  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8666  002898  501C               	movf	___flmul@temp^0,w,c
  8667  00289A  6E13               	movwf	___flmul@grs^0,c
  8668  00289C  6A14               	clrf	(___flmul@grs+1)^0,c
  8669  00289E  6A15               	clrf	(___flmul@grs+2)^0,c
  8670  0028A0  6A16               	clrf	(___flmul@grs+3)^0,c
  8671  0028A2  501D               	movf	(___flmul@temp+1)^0,w,c
  8672  0028A4  6E18               	movwf	___flmul@prod^0,c
  8673  0028A6  6A19               	clrf	(___flmul@prod+1)^0,c
  8674  0028A8  6A1A               	clrf	(___flmul@prod+2)^0,c
  8675  0028AA  6A1B               	clrf	(___flmul@prod+3)^0,c
  8676  0028AC  500A               	movf	(___flmul@a+1)^0,w,c
  8677  0028AE  0206               	mulwf	(___flmul@b+1)^0,c
  8678  0028B0  CFF3 F01C          	movff	prodl,___flmul@temp
  8679  0028B4  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8680  0028B8  501C               	movf	___flmul@temp^0,w,c
  8681  0028BA  2613               	addwf	___flmul@grs^0,f,c
  8682  0028BC  0E00               	movlw	0
  8683  0028BE  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8684  0028C0  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8685  0028C2  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8686  0028C4  501D               	movf	(___flmul@temp+1)^0,w,c
  8687  0028C6  2618               	addwf	___flmul@prod^0,f,c
  8688  0028C8  0E00               	movlw	0
  8689  0028CA  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8690  0028CC  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8691  0028CE  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8692  0028D0  5009               	movf	___flmul@a^0,w,c
  8693  0028D2  0207               	mulwf	(___flmul@b+2)^0,c
  8694  0028D4  CFF3 F01C          	movff	prodl,___flmul@temp
  8695  0028D8  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8696  0028DC  501C               	movf	___flmul@temp^0,w,c
  8697  0028DE  2613               	addwf	___flmul@grs^0,f,c
  8698  0028E0  0E00               	movlw	0
  8699  0028E2  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8700  0028E4  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8701  0028E6  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8702  0028E8  501D               	movf	(___flmul@temp+1)^0,w,c
  8703  0028EA  2618               	addwf	___flmul@prod^0,f,c
  8704  0028EC  0E00               	movlw	0
  8705  0028EE  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8706  0028F0  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8707  0028F2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8708  0028F4  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  8709  0028F8  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  8710  0028FC  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  8711  002900  6A13               	clrf	___flmul@grs^0,c
  8712  002902  5009               	movf	___flmul@a^0,w,c
  8713  002904  0206               	mulwf	(___flmul@b+1)^0,c
  8714  002906  CFF3 F01C          	movff	prodl,___flmul@temp
  8715  00290A  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8716  00290E  501C               	movf	___flmul@temp^0,w,c
  8717  002910  2613               	addwf	___flmul@grs^0,f,c
  8718  002912  501D               	movf	(___flmul@temp+1)^0,w,c
  8719  002914  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8720  002916  0E00               	movlw	0
  8721  002918  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8722  00291A  0E00               	movlw	0
  8723  00291C  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8724  00291E  500A               	movf	(___flmul@a+1)^0,w,c
  8725  002920  0205               	mulwf	___flmul@b^0,c
  8726  002922  CFF3 F01C          	movff	prodl,___flmul@temp
  8727  002926  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8728  00292A  501C               	movf	___flmul@temp^0,w,c
  8729  00292C  2613               	addwf	___flmul@grs^0,f,c
  8730  00292E  501D               	movf	(___flmul@temp+1)^0,w,c
  8731  002930  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8732  002932  0E00               	movlw	0
  8733  002934  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8734  002936  0E00               	movlw	0
  8735  002938  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8736  00293A  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  8737  00293E  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  8738  002942  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  8739  002946  6A13               	clrf	___flmul@grs^0,c
  8740  002948  5009               	movf	___flmul@a^0,w,c
  8741  00294A  0205               	mulwf	___flmul@b^0,c
  8742  00294C  CFF3 F01C          	movff	prodl,___flmul@temp
  8743  002950  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8744  002954  501C               	movf	___flmul@temp^0,w,c
  8745  002956  2613               	addwf	___flmul@grs^0,f,c
  8746  002958  501D               	movf	(___flmul@temp+1)^0,w,c
  8747  00295A  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8748  00295C  0E00               	movlw	0
  8749  00295E  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8750  002960  0E00               	movlw	0
  8751  002962  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8752  002964  500B               	movf	(___flmul@a+2)^0,w,c
  8753  002966  0206               	mulwf	(___flmul@b+1)^0,c
  8754  002968  CFF3 F01C          	movff	prodl,___flmul@temp
  8755  00296C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8756  002970  501C               	movf	___flmul@temp^0,w,c
  8757  002972  2618               	addwf	___flmul@prod^0,f,c
  8758  002974  501D               	movf	(___flmul@temp+1)^0,w,c
  8759  002976  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8760  002978  0E00               	movlw	0
  8761  00297A  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8762  00297C  0E00               	movlw	0
  8763  00297E  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8764  002980  500A               	movf	(___flmul@a+1)^0,w,c
  8765  002982  0207               	mulwf	(___flmul@b+2)^0,c
  8766  002984  CFF3 F01C          	movff	prodl,___flmul@temp
  8767  002988  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8768  00298C  501C               	movf	___flmul@temp^0,w,c
  8769  00298E  2618               	addwf	___flmul@prod^0,f,c
  8770  002990  501D               	movf	(___flmul@temp+1)^0,w,c
  8771  002992  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8772  002994  0E00               	movlw	0
  8773  002996  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8774  002998  0E00               	movlw	0
  8775  00299A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8776  00299C  500B               	movf	(___flmul@a+2)^0,w,c
  8777  00299E  0207               	mulwf	(___flmul@b+2)^0,c
  8778  0029A0  CFF3 F01C          	movff	prodl,___flmul@temp
  8779  0029A4  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8780  0029A8  501C               	movf	___flmul@temp^0,w,c
  8781  0029AA  6E0D               	movwf	??___flmul^0,c
  8782  0029AC  501D               	movf	(___flmul@temp+1)^0,w,c
  8783  0029AE  6E0E               	movwf	(??___flmul+1)^0,c
  8784  0029B0  6A0F               	clrf	(??___flmul+2)^0,c
  8785  0029B2  6A10               	clrf	(??___flmul+3)^0,c
  8786  0029B4  C00F  F010         	movff	??___flmul+2,??___flmul+3
  8787  0029B8  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  8788  0029BC  C00D  F00E         	movff	??___flmul,??___flmul+1
  8789  0029C0  6A0D               	clrf	??___flmul^0,c
  8790  0029C2  500D               	movf	??___flmul^0,w,c
  8791  0029C4  2618               	addwf	___flmul@prod^0,f,c
  8792  0029C6  500E               	movf	(??___flmul+1)^0,w,c
  8793  0029C8  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8794  0029CA  500F               	movf	(??___flmul+2)^0,w,c
  8795  0029CC  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8796  0029CE  5010               	movf	(??___flmul+3)^0,w,c
  8797  0029D0  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8798  0029D2  C013  F00D         	movff	___flmul@grs,??___flmul
  8799  0029D6  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  8800  0029DA  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  8801  0029DE  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  8802  0029E2  0E19               	movlw	25
  8803  0029E4  EFF9  F014         	goto	u6820
  8804  0029E8                     u6825:
  8805  0029E8  90D8               	bcf	status,0,c
  8806  0029EA  3210               	rrcf	(??___flmul+3)^0,f,c
  8807  0029EC  320F               	rrcf	(??___flmul+2)^0,f,c
  8808  0029EE  320E               	rrcf	(??___flmul+1)^0,f,c
  8809  0029F0  320D               	rrcf	??___flmul^0,f,c
  8810  0029F2                     u6820:
  8811  0029F2  2EE8               	decfsz	wreg,f,c
  8812  0029F4  EFF4  F014         	goto	u6825
  8813  0029F8  500D               	movf	??___flmul^0,w,c
  8814  0029FA  2618               	addwf	___flmul@prod^0,f,c
  8815  0029FC  500E               	movf	(??___flmul+1)^0,w,c
  8816  0029FE  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8817  002A00  500F               	movf	(??___flmul+2)^0,w,c
  8818  002A02  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8819  002A04  5010               	movf	(??___flmul+3)^0,w,c
  8820  002A06  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8821  002A08  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  8822  002A0C  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  8823  002A10  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  8824  002A14  6A13               	clrf	___flmul@grs^0,c
  8825  002A16  5012               	movf	___flmul@aexp^0,w,c
  8826  002A18  C017  F00D         	movff	___flmul@bexp,??___flmul
  8827  002A1C  6A0E               	clrf	(??___flmul+1)^0,c
  8828  002A1E  260D               	addwf	??___flmul^0,f,c
  8829  002A20  0E00               	movlw	0
  8830  002A22  220E               	addwfc	(??___flmul+1)^0,f,c
  8831  002A24  0E82               	movlw	130
  8832  002A26  240D               	addwf	??___flmul^0,w,c
  8833  002A28  6E1C               	movwf	___flmul@temp^0,c
  8834  002A2A  0EFF               	movlw	255
  8835  002A2C  200E               	addwfc	(??___flmul+1)^0,w,c
  8836  002A2E  6E1D               	movwf	(___flmul@temp+1)^0,c
  8837  002A30  EF2F  F015         	goto	l6763
  8838  002A34                     l6757:
  8839  002A34  90D8               	bcf	status,0,c
  8840  002A36  3618               	rlcf	___flmul@prod^0,f,c
  8841  002A38  3619               	rlcf	(___flmul@prod+1)^0,f,c
  8842  002A3A  361A               	rlcf	(___flmul@prod+2)^0,f,c
  8843  002A3C  361B               	rlcf	(___flmul@prod+3)^0,f,c
  8844  002A3E  AE16               	btfss	(___flmul@grs+3)^0,7,c
  8845  002A40  EF24  F015         	goto	u6831
  8846  002A44  EF26  F015         	goto	u6830
  8847  002A48                     u6831:
  8848  002A48  EF27  F015         	goto	l1345
  8849  002A4C                     u6830:
  8850  002A4C  8018               	bsf	___flmul@prod^0,0,c
  8851  002A4E                     l1345:
  8852  002A4E  90D8               	bcf	status,0,c
  8853  002A50  3613               	rlcf	___flmul@grs^0,f,c
  8854  002A52  3614               	rlcf	(___flmul@grs+1)^0,f,c
  8855  002A54  3615               	rlcf	(___flmul@grs+2)^0,f,c
  8856  002A56  3616               	rlcf	(___flmul@grs+3)^0,f,c
  8857  002A58  061C               	decf	___flmul@temp^0,f,c
  8858  002A5A  A0D8               	btfss	status,0,c
  8859  002A5C  061D               	decf	(___flmul@temp+1)^0,f,c
  8860  002A5E                     l6763:
  8861  002A5E  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  8862  002A60  EF34  F015         	goto	u6841
  8863  002A64  EF36  F015         	goto	u6840
  8864  002A68                     u6841:
  8865  002A68  EF1A  F015         	goto	l6757
  8866  002A6C                     u6840:
  8867  002A6C  0E00               	movlw	0
  8868  002A6E  6E12               	movwf	___flmul@aexp^0,c
  8869  002A70  AE16               	btfss	(___flmul@grs+3)^0,7,c
  8870  002A72  EF3D  F015         	goto	u6851
  8871  002A76  EF3F  F015         	goto	u6850
  8872  002A7A                     u6851:
  8873  002A7A  EF63  F015         	goto	l1347
  8874  002A7E                     u6850:
  8875  002A7E  0EFF               	movlw	255
  8876  002A80  1413               	andwf	___flmul@grs^0,w,c
  8877  002A82  6E0D               	movwf	??___flmul^0,c
  8878  002A84  0EFF               	movlw	255
  8879  002A86  1414               	andwf	(___flmul@grs+1)^0,w,c
  8880  002A88  6E0E               	movwf	(??___flmul+1)^0,c
  8881  002A8A  0EFF               	movlw	255
  8882  002A8C  1415               	andwf	(___flmul@grs+2)^0,w,c
  8883  002A8E  6E0F               	movwf	(??___flmul+2)^0,c
  8884  002A90  0E7F               	movlw	127
  8885  002A92  1416               	andwf	(___flmul@grs+3)^0,w,c
  8886  002A94  6E10               	movwf	(??___flmul+3)^0,c
  8887  002A96  500D               	movf	??___flmul^0,w,c
  8888  002A98  100E               	iorwf	(??___flmul+1)^0,w,c
  8889  002A9A  100F               	iorwf	(??___flmul+2)^0,w,c
  8890  002A9C  1010               	iorwf	(??___flmul+3)^0,w,c
  8891  002A9E  B4D8               	btfsc	status,2,c
  8892  002AA0  EF54  F015         	goto	u6861
  8893  002AA4  EF56  F015         	goto	u6860
  8894  002AA8                     u6861:
  8895  002AA8  EF5A  F015         	goto	l1348
  8896  002AAC                     u6860:
  8897  002AAC                     l6771:
  8898  002AAC  0E01               	movlw	1
  8899  002AAE  6E12               	movwf	___flmul@aexp^0,c
  8900  002AB0  EF63  F015         	goto	l1347
  8901  002AB4                     l1348:
  8902  002AB4  A018               	btfss	___flmul@prod^0,0,c
  8903  002AB6  EF5F  F015         	goto	u6871
  8904  002ABA  EF61  F015         	goto	u6870
  8905  002ABE                     u6871:
  8906  002ABE  EF63  F015         	goto	l1347
  8907  002AC2                     u6870:
  8908  002AC2  EF56  F015         	goto	l6771
  8909  002AC6                     l1347:
  8910  002AC6  5012               	movf	___flmul@aexp^0,w,c
  8911  002AC8  B4D8               	btfsc	status,2,c
  8912  002ACA  EF69  F015         	goto	u6881
  8913  002ACE  EF6B  F015         	goto	u6880
  8914  002AD2                     u6881:
  8915  002AD2  EF8F  F015         	goto	l6783
  8916  002AD6                     u6880:
  8917  002AD6  0E01               	movlw	1
  8918  002AD8  2618               	addwf	___flmul@prod^0,f,c
  8919  002ADA  0E00               	movlw	0
  8920  002ADC  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8921  002ADE  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8922  002AE0  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8923  002AE2  A01B               	btfss	(___flmul@prod+3)^0,0,c
  8924  002AE4  EF76  F015         	goto	u6891
  8925  002AE8  EF78  F015         	goto	u6890
  8926  002AEC                     u6891:
  8927  002AEC  EF8F  F015         	goto	l6783
  8928  002AF0                     u6890:
  8929  002AF0  C018  F00D         	movff	___flmul@prod,??___flmul
  8930  002AF4  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  8931  002AF8  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  8932  002AFC  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  8933  002B00  3410               	rlcf	(??___flmul+3)^0,w,c
  8934  002B02  3210               	rrcf	(??___flmul+3)^0,f,c
  8935  002B04  320F               	rrcf	(??___flmul+2)^0,f,c
  8936  002B06  320E               	rrcf	(??___flmul+1)^0,f,c
  8937  002B08  320D               	rrcf	??___flmul^0,f,c
  8938  002B0A  C00D  F018         	movff	??___flmul,___flmul@prod
  8939  002B0E  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  8940  002B12  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  8941  002B16  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  8942  002B1A  4A1C               	infsnz	___flmul@temp^0,f,c
  8943  002B1C  2A1D               	incf	(___flmul@temp+1)^0,f,c
  8944  002B1E                     l6783:
  8945  002B1E  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  8946  002B20  EF9A  F015         	goto	u6901
  8947  002B24  501D               	movf	(___flmul@temp+1)^0,w,c
  8948  002B26  E108               	bnz	u6900
  8949  002B28  281C               	incf	___flmul@temp^0,w,c
  8950  002B2A  A0D8               	btfss	status,0,c
  8951  002B2C  EF9A  F015         	goto	u6901
  8952  002B30  EF9C  F015         	goto	u6900
  8953  002B34                     u6901:
  8954  002B34  EFA6  F015         	goto	l6787
  8955  002B38                     u6900:
  8956  002B38  0E00               	movlw	0
  8957  002B3A  6E18               	movwf	___flmul@prod^0,c
  8958  002B3C  0E00               	movlw	0
  8959  002B3E  6E19               	movwf	(___flmul@prod+1)^0,c
  8960  002B40  0E80               	movlw	128
  8961  002B42  6E1A               	movwf	(___flmul@prod+2)^0,c
  8962  002B44  0E7F               	movlw	127
  8963  002B46  6E1B               	movwf	(___flmul@prod+3)^0,c
  8964  002B48  EFD4  F015         	goto	l6799
  8965  002B4C                     l6787:
  8966  002B4C  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  8967  002B4E  EFB3  F015         	goto	u6910
  8968  002B52  501D               	movf	(___flmul@temp+1)^0,w,c
  8969  002B54  E106               	bnz	u6911
  8970  002B56  041C               	decf	___flmul@temp^0,w,c
  8971  002B58  B0D8               	btfsc	status,0,c
  8972  002B5A  EFB1  F015         	goto	u6911
  8973  002B5E  EFB3  F015         	goto	u6910
  8974  002B62                     u6911:
  8975  002B62  EFBF  F015         	goto	l1355
  8976  002B66                     u6910:
  8977  002B66  0E00               	movlw	0
  8978  002B68  6E18               	movwf	___flmul@prod^0,c
  8979  002B6A  0E00               	movlw	0
  8980  002B6C  6E19               	movwf	(___flmul@prod+1)^0,c
  8981  002B6E  0E00               	movlw	0
  8982  002B70  6E1A               	movwf	(___flmul@prod+2)^0,c
  8983  002B72  0E00               	movlw	0
  8984  002B74  6E1B               	movwf	(___flmul@prod+3)^0,c
  8985  002B76  0E00               	movlw	0
  8986  002B78  6E11               	movwf	___flmul@sign^0,c
  8987  002B7A  EFD4  F015         	goto	l6799
  8988  002B7E                     l1355:
  8989  002B7E  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  8990  002B82  0EFF               	movlw	255
  8991  002B84  1618               	andwf	___flmul@prod^0,f,c
  8992  002B86  0EFF               	movlw	255
  8993  002B88  1619               	andwf	(___flmul@prod+1)^0,f,c
  8994  002B8A  0E7F               	movlw	127
  8995  002B8C  161A               	andwf	(___flmul@prod+2)^0,f,c
  8996  002B8E  0E00               	movlw	0
  8997  002B90  161B               	andwf	(___flmul@prod+3)^0,f,c
  8998  002B92  A017               	btfss	___flmul@bexp^0,0,c
  8999  002B94  EFCE  F015         	goto	u6921
  9000  002B98  EFD0  F015         	goto	u6920
  9001  002B9C                     u6921:
  9002  002B9C  EFD1  F015         	goto	l6797
  9003  002BA0                     u6920:
  9004  002BA0  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  9005  002BA2                     l6797:
  9006  002BA2  90D8               	bcf	status,0,c
  9007  002BA4  3017               	rrcf	___flmul@bexp^0,w,c
  9008  002BA6  6E1B               	movwf	(___flmul@prod+3)^0,c
  9009  002BA8                     l6799:
  9010  002BA8  5011               	movf	___flmul@sign^0,w,c
  9011  002BAA  121B               	iorwf	(___flmul@prod+3)^0,f,c
  9012  002BAC  C018  F005         	movff	___flmul@prod,?___flmul
  9013  002BB0  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  9014  002BB4  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  9015  002BB8  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  9016  002BBC                     l1342:
  9017  002BBC  0012               	return		;funcret
  9018  002BBE                     __end_of___flmul:
  9019                           	callstack 0
  9020                           
  9021 ;; *************** function ___fldiv *****************
  9022 ;; Defined at:
  9023 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;  b               4   29[COMRAM] unsigned char 
  9026 ;;  a               4   33[COMRAM] unsigned char 
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;  grs             4   48[COMRAM] unsigned long 
  9029 ;;  rem             4   41[COMRAM] unsigned long 
  9030 ;;  new_exp         2   46[COMRAM] short 
  9031 ;;  aexp            1   53[COMRAM] unsigned char 
  9032 ;;  bexp            1   52[COMRAM] unsigned char 
  9033 ;;  sign            1   45[COMRAM] unsigned char 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  4   29[COMRAM] unsigned char 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9043 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9046 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9047 ;;Total ram usage:       25 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    4
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_HDC1080_temp_GetValue
  9054 ;;		_HDC1080_humy_GetValue
  9055 ;;		_efgtoa
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           	psect	text44
  9060  002BBE                     __ptext44:
  9061                           	callstack 0
  9062  002BBE                     ___fldiv:
  9063                           	callstack 22
  9064  002BBE  5021               	movf	(___fldiv@b+3)^0,w,c
  9065  002BC0  0B80               	andlw	128
  9066  002BC2  6E2E               	movwf	___fldiv@sign^0,c
  9067  002BC4  5021               	movf	(___fldiv@b+3)^0,w,c
  9068  002BC6  2421               	addwf	(___fldiv@b+3)^0,w,c
  9069  002BC8  6E35               	movwf	___fldiv@bexp^0,c
  9070  002BCA  AE20               	btfss	(___fldiv@b+2)^0,7,c
  9071  002BCC  EFEA  F015         	goto	u6511
  9072  002BD0  EFEC  F015         	goto	u6510
  9073  002BD4                     u6511:
  9074  002BD4  EFED  F015         	goto	l6543
  9075  002BD8                     u6510:
  9076  002BD8  8035               	bsf	___fldiv@bexp^0,0,c
  9077  002BDA                     l6543:
  9078  002BDA  5035               	movf	___fldiv@bexp^0,w,c
  9079  002BDC  B4D8               	btfsc	status,2,c
  9080  002BDE  EFF3  F015         	goto	u6521
  9081  002BE2  EFF5  F015         	goto	u6520
  9082  002BE6                     u6521:
  9083  002BE6  EF0A  F016         	goto	l6553
  9084  002BEA                     u6520:
  9085  002BEA  2835               	incf	___fldiv@bexp^0,w,c
  9086  002BEC  A4D8               	btfss	status,2,c
  9087  002BEE  EFFB  F015         	goto	u6531
  9088  002BF2  EFFD  F015         	goto	u6530
  9089  002BF6                     u6531:
  9090  002BF6  EF05  F016         	goto	l6549
  9091  002BFA                     u6530:
  9092  002BFA  0E00               	movlw	0
  9093  002BFC  6E1E               	movwf	___fldiv@b^0,c
  9094  002BFE  0E00               	movlw	0
  9095  002C00  6E1F               	movwf	(___fldiv@b+1)^0,c
  9096  002C02  0E00               	movlw	0
  9097  002C04  6E20               	movwf	(___fldiv@b+2)^0,c
  9098  002C06  0E00               	movlw	0
  9099  002C08  6E21               	movwf	(___fldiv@b+3)^0,c
  9100  002C0A                     l6549:
  9101  002C0A  8E20               	bsf	(___fldiv@b+2)^0,7,c
  9102  002C0C  0E00               	movlw	0
  9103  002C0E  6E21               	movwf	(___fldiv@b+3)^0,c
  9104  002C10  EF12  F016         	goto	l6555
  9105  002C14                     l6553:
  9106  002C14  0E00               	movlw	0
  9107  002C16  6E1E               	movwf	___fldiv@b^0,c
  9108  002C18  0E00               	movlw	0
  9109  002C1A  6E1F               	movwf	(___fldiv@b+1)^0,c
  9110  002C1C  0E00               	movlw	0
  9111  002C1E  6E20               	movwf	(___fldiv@b+2)^0,c
  9112  002C20  0E00               	movlw	0
  9113  002C22  6E21               	movwf	(___fldiv@b+3)^0,c
  9114  002C24                     l6555:
  9115  002C24  5025               	movf	(___fldiv@a+3)^0,w,c
  9116  002C26  0B80               	andlw	128
  9117  002C28  1A2E               	xorwf	___fldiv@sign^0,f,c
  9118  002C2A  5025               	movf	(___fldiv@a+3)^0,w,c
  9119  002C2C  2425               	addwf	(___fldiv@a+3)^0,w,c
  9120  002C2E  6E36               	movwf	___fldiv@aexp^0,c
  9121  002C30  AE24               	btfss	(___fldiv@a+2)^0,7,c
  9122  002C32  EF1D  F016         	goto	u6541
  9123  002C36  EF1F  F016         	goto	u6540
  9124  002C3A                     u6541:
  9125  002C3A  EF20  F016         	goto	l6563
  9126  002C3E                     u6540:
  9127  002C3E  8036               	bsf	___fldiv@aexp^0,0,c
  9128  002C40                     l6563:
  9129  002C40  5036               	movf	___fldiv@aexp^0,w,c
  9130  002C42  B4D8               	btfsc	status,2,c
  9131  002C44  EF26  F016         	goto	u6551
  9132  002C48  EF28  F016         	goto	u6550
  9133  002C4C                     u6551:
  9134  002C4C  EF3D  F016         	goto	l6573
  9135  002C50                     u6550:
  9136  002C50  2836               	incf	___fldiv@aexp^0,w,c
  9137  002C52  A4D8               	btfss	status,2,c
  9138  002C54  EF2E  F016         	goto	u6561
  9139  002C58  EF30  F016         	goto	u6560
  9140  002C5C                     u6561:
  9141  002C5C  EF38  F016         	goto	l6569
  9142  002C60                     u6560:
  9143  002C60  0E00               	movlw	0
  9144  002C62  6E22               	movwf	___fldiv@a^0,c
  9145  002C64  0E00               	movlw	0
  9146  002C66  6E23               	movwf	(___fldiv@a+1)^0,c
  9147  002C68  0E00               	movlw	0
  9148  002C6A  6E24               	movwf	(___fldiv@a+2)^0,c
  9149  002C6C  0E00               	movlw	0
  9150  002C6E  6E25               	movwf	(___fldiv@a+3)^0,c
  9151  002C70                     l6569:
  9152  002C70  8E24               	bsf	(___fldiv@a+2)^0,7,c
  9153  002C72  0E00               	movlw	0
  9154  002C74  6E25               	movwf	(___fldiv@a+3)^0,c
  9155  002C76  EF45  F016         	goto	l6575
  9156  002C7A                     l6573:
  9157  002C7A  0E00               	movlw	0
  9158  002C7C  6E22               	movwf	___fldiv@a^0,c
  9159  002C7E  0E00               	movlw	0
  9160  002C80  6E23               	movwf	(___fldiv@a+1)^0,c
  9161  002C82  0E00               	movlw	0
  9162  002C84  6E24               	movwf	(___fldiv@a+2)^0,c
  9163  002C86  0E00               	movlw	0
  9164  002C88  6E25               	movwf	(___fldiv@a+3)^0,c
  9165  002C8A                     l6575:
  9166  002C8A  5022               	movf	___fldiv@a^0,w,c
  9167  002C8C  1023               	iorwf	(___fldiv@a+1)^0,w,c
  9168  002C8E  1024               	iorwf	(___fldiv@a+2)^0,w,c
  9169  002C90  1025               	iorwf	(___fldiv@a+3)^0,w,c
  9170  002C92  A4D8               	btfss	status,2,c
  9171  002C94  EF4E  F016         	goto	u6571
  9172  002C98  EF50  F016         	goto	u6570
  9173  002C9C                     u6571:
  9174  002C9C  EF68  F016         	goto	l6587
  9175  002CA0                     u6570:
  9176  002CA0  0E00               	movlw	0
  9177  002CA2  6E1E               	movwf	___fldiv@b^0,c
  9178  002CA4  0E00               	movlw	0
  9179  002CA6  6E1F               	movwf	(___fldiv@b+1)^0,c
  9180  002CA8  0E00               	movlw	0
  9181  002CAA  6E20               	movwf	(___fldiv@b+2)^0,c
  9182  002CAC  0E00               	movlw	0
  9183  002CAE  6E21               	movwf	(___fldiv@b+3)^0,c
  9184  002CB0  0E80               	movlw	128
  9185  002CB2  1220               	iorwf	(___fldiv@b+2)^0,f,c
  9186  002CB4  0E7F               	movlw	127
  9187  002CB6  1221               	iorwf	(___fldiv@b+3)^0,f,c
  9188  002CB8                     l6581:
  9189  002CB8  502E               	movf	___fldiv@sign^0,w,c
  9190  002CBA  1221               	iorwf	(___fldiv@b+3)^0,f,c
  9191  002CBC  C01E  F01E         	movff	___fldiv@b,?___fldiv
  9192  002CC0  C01F  F01F         	movff	___fldiv@b+1,?___fldiv+1
  9193  002CC4  C020  F020         	movff	___fldiv@b+2,?___fldiv+2
  9194  002CC8  C021  F021         	movff	___fldiv@b+3,?___fldiv+3
  9195  002CCC  EFAB  F017         	goto	l1306
  9196  002CD0                     l6587:
  9197  002CD0  5035               	movf	___fldiv@bexp^0,w,c
  9198  002CD2  A4D8               	btfss	status,2,c
  9199  002CD4  EF6E  F016         	goto	u6581
  9200  002CD8  EF70  F016         	goto	u6580
  9201  002CDC                     u6581:
  9202  002CDC  EF7A  F016         	goto	l6595
  9203  002CE0                     u6580:
  9204  002CE0  0E00               	movlw	0
  9205  002CE2  6E1E               	movwf	?___fldiv^0,c
  9206  002CE4  0E00               	movlw	0
  9207  002CE6  6E1F               	movwf	(?___fldiv+1)^0,c
  9208  002CE8  0E00               	movlw	0
  9209  002CEA  6E20               	movwf	(?___fldiv+2)^0,c
  9210  002CEC  0E00               	movlw	0
  9211  002CEE  6E21               	movwf	(?___fldiv+3)^0,c
  9212  002CF0  EFAB  F017         	goto	l1306
  9213  002CF4                     l6595:
  9214  002CF4  5036               	movf	___fldiv@aexp^0,w,c
  9215  002CF6  C035  F026         	movff	___fldiv@bexp,??___fldiv
  9216  002CFA  6A27               	clrf	(??___fldiv+1)^0,c
  9217  002CFC  5E26               	subwf	??___fldiv^0,f,c
  9218  002CFE  0E00               	movlw	0
  9219  002D00  5A27               	subwfb	(??___fldiv+1)^0,f,c
  9220  002D02  0E7F               	movlw	127
  9221  002D04  2426               	addwf	??___fldiv^0,w,c
  9222  002D06  6E2F               	movwf	___fldiv@new_exp^0,c
  9223  002D08  0E00               	movlw	0
  9224  002D0A  2027               	addwfc	(??___fldiv+1)^0,w,c
  9225  002D0C  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  9226  002D0E  C01E  F02A         	movff	___fldiv@b,___fldiv@rem
  9227  002D12  C01F  F02B         	movff	___fldiv@b+1,___fldiv@rem+1
  9228  002D16  C020  F02C         	movff	___fldiv@b+2,___fldiv@rem+2
  9229  002D1A  C021  F02D         	movff	___fldiv@b+3,___fldiv@rem+3
  9230  002D1E  0E00               	movlw	0
  9231  002D20  6E1E               	movwf	___fldiv@b^0,c
  9232  002D22  0E00               	movlw	0
  9233  002D24  6E1F               	movwf	(___fldiv@b+1)^0,c
  9234  002D26  0E00               	movlw	0
  9235  002D28  6E20               	movwf	(___fldiv@b+2)^0,c
  9236  002D2A  0E00               	movlw	0
  9237  002D2C  6E21               	movwf	(___fldiv@b+3)^0,c
  9238  002D2E  0E00               	movlw	0
  9239  002D30  6E31               	movwf	___fldiv@grs^0,c
  9240  002D32  0E00               	movlw	0
  9241  002D34  6E32               	movwf	(___fldiv@grs+1)^0,c
  9242  002D36  0E00               	movlw	0
  9243  002D38  6E33               	movwf	(___fldiv@grs+2)^0,c
  9244  002D3A  0E00               	movlw	0
  9245  002D3C  6E34               	movwf	(___fldiv@grs+3)^0,c
  9246  002D3E  0E00               	movlw	0
  9247  002D40  6E36               	movwf	___fldiv@aexp^0,c
  9248  002D42  EFDB  F016         	goto	l1308
  9249  002D46                     l6605:
  9250  002D46  5036               	movf	___fldiv@aexp^0,w,c
  9251  002D48  B4D8               	btfsc	status,2,c
  9252  002D4A  EFA9  F016         	goto	u6591
  9253  002D4E  EFAB  F016         	goto	u6590
  9254  002D52                     u6591:
  9255  002D52  EFC2  F016         	goto	l6613
  9256  002D56                     u6590:
  9257  002D56  90D8               	bcf	status,0,c
  9258  002D58  362A               	rlcf	___fldiv@rem^0,f,c
  9259  002D5A  362B               	rlcf	(___fldiv@rem+1)^0,f,c
  9260  002D5C  362C               	rlcf	(___fldiv@rem+2)^0,f,c
  9261  002D5E  362D               	rlcf	(___fldiv@rem+3)^0,f,c
  9262  002D60  90D8               	bcf	status,0,c
  9263  002D62  361E               	rlcf	___fldiv@b^0,f,c
  9264  002D64  361F               	rlcf	(___fldiv@b+1)^0,f,c
  9265  002D66  3620               	rlcf	(___fldiv@b+2)^0,f,c
  9266  002D68  3621               	rlcf	(___fldiv@b+3)^0,f,c
  9267  002D6A  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  9268  002D6C  EFBA  F016         	goto	u6601
  9269  002D70  EFBC  F016         	goto	u6600
  9270  002D74                     u6601:
  9271  002D74  EFBD  F016         	goto	l1311
  9272  002D78                     u6600:
  9273  002D78  801E               	bsf	___fldiv@b^0,0,c
  9274  002D7A                     l1311:
  9275  002D7A  90D8               	bcf	status,0,c
  9276  002D7C  3631               	rlcf	___fldiv@grs^0,f,c
  9277  002D7E  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  9278  002D80  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  9279  002D82  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  9280  002D84                     l6613:
  9281  002D84  5022               	movf	___fldiv@a^0,w,c
  9282  002D86  5C2A               	subwf	___fldiv@rem^0,w,c
  9283  002D88  5023               	movf	(___fldiv@a+1)^0,w,c
  9284  002D8A  582B               	subwfb	(___fldiv@rem+1)^0,w,c
  9285  002D8C  5024               	movf	(___fldiv@a+2)^0,w,c
  9286  002D8E  582C               	subwfb	(___fldiv@rem+2)^0,w,c
  9287  002D90  5025               	movf	(___fldiv@a+3)^0,w,c
  9288  002D92  582D               	subwfb	(___fldiv@rem+3)^0,w,c
  9289  002D94  A0D8               	btfss	status,0,c
  9290  002D96  EFCF  F016         	goto	u6611
  9291  002D9A  EFD1  F016         	goto	u6610
  9292  002D9E                     u6611:
  9293  002D9E  EFDA  F016         	goto	l6619
  9294  002DA2                     u6610:
  9295  002DA2  8C34               	bsf	(___fldiv@grs+3)^0,6,c
  9296  002DA4  5022               	movf	___fldiv@a^0,w,c
  9297  002DA6  5E2A               	subwf	___fldiv@rem^0,f,c
  9298  002DA8  5023               	movf	(___fldiv@a+1)^0,w,c
  9299  002DAA  5A2B               	subwfb	(___fldiv@rem+1)^0,f,c
  9300  002DAC  5024               	movf	(___fldiv@a+2)^0,w,c
  9301  002DAE  5A2C               	subwfb	(___fldiv@rem+2)^0,f,c
  9302  002DB0  5025               	movf	(___fldiv@a+3)^0,w,c
  9303  002DB2  5A2D               	subwfb	(___fldiv@rem+3)^0,f,c
  9304  002DB4                     l6619:
  9305  002DB4  2A36               	incf	___fldiv@aexp^0,f,c
  9306  002DB6                     l1308:
  9307  002DB6  0E19               	movlw	25
  9308  002DB8  6436               	cpfsgt	___fldiv@aexp^0,c
  9309  002DBA  EFE1  F016         	goto	u6621
  9310  002DBE  EFE3  F016         	goto	u6620
  9311  002DC2                     u6621:
  9312  002DC2  EFA3  F016         	goto	l6605
  9313  002DC6                     u6620:
  9314  002DC6  502A               	movf	___fldiv@rem^0,w,c
  9315  002DC8  102B               	iorwf	(___fldiv@rem+1)^0,w,c
  9316  002DCA  102C               	iorwf	(___fldiv@rem+2)^0,w,c
  9317  002DCC  102D               	iorwf	(___fldiv@rem+3)^0,w,c
  9318  002DCE  B4D8               	btfsc	status,2,c
  9319  002DD0  EFEC  F016         	goto	u6631
  9320  002DD4  EFEE  F016         	goto	u6630
  9321  002DD8                     u6631:
  9322  002DD8  EF06  F017         	goto	l6631
  9323  002DDC                     u6630:
  9324  002DDC  8031               	bsf	___fldiv@grs^0,0,c
  9325  002DDE  EF06  F017         	goto	l6631
  9326  002DE2                     l6625:
  9327  002DE2  90D8               	bcf	status,0,c
  9328  002DE4  361E               	rlcf	___fldiv@b^0,f,c
  9329  002DE6  361F               	rlcf	(___fldiv@b+1)^0,f,c
  9330  002DE8  3620               	rlcf	(___fldiv@b+2)^0,f,c
  9331  002DEA  3621               	rlcf	(___fldiv@b+3)^0,f,c
  9332  002DEC  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  9333  002DEE  EFFB  F016         	goto	u6641
  9334  002DF2  EFFD  F016         	goto	u6640
  9335  002DF6                     u6641:
  9336  002DF6  EFFE  F016         	goto	l1317
  9337  002DFA                     u6640:
  9338  002DFA  801E               	bsf	___fldiv@b^0,0,c
  9339  002DFC                     l1317:
  9340  002DFC  90D8               	bcf	status,0,c
  9341  002DFE  3631               	rlcf	___fldiv@grs^0,f,c
  9342  002E00  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  9343  002E02  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  9344  002E04  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  9345  002E06  062F               	decf	___fldiv@new_exp^0,f,c
  9346  002E08  A0D8               	btfss	status,0,c
  9347  002E0A  0630               	decf	(___fldiv@new_exp+1)^0,f,c
  9348  002E0C                     l6631:
  9349  002E0C  AE20               	btfss	(___fldiv@b+2)^0,7,c
  9350  002E0E  EF0B  F017         	goto	u6651
  9351  002E12  EF0D  F017         	goto	u6650
  9352  002E16                     u6651:
  9353  002E16  EFF1  F016         	goto	l6625
  9354  002E1A                     u6650:
  9355  002E1A  0E00               	movlw	0
  9356  002E1C  6E36               	movwf	___fldiv@aexp^0,c
  9357  002E1E  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  9358  002E20  EF14  F017         	goto	u6661
  9359  002E24  EF16  F017         	goto	u6660
  9360  002E28                     u6661:
  9361  002E28  EF3A  F017         	goto	l1319
  9362  002E2C                     u6660:
  9363  002E2C  0EFF               	movlw	255
  9364  002E2E  1431               	andwf	___fldiv@grs^0,w,c
  9365  002E30  6E26               	movwf	??___fldiv^0,c
  9366  002E32  0EFF               	movlw	255
  9367  002E34  1432               	andwf	(___fldiv@grs+1)^0,w,c
  9368  002E36  6E27               	movwf	(??___fldiv+1)^0,c
  9369  002E38  0EFF               	movlw	255
  9370  002E3A  1433               	andwf	(___fldiv@grs+2)^0,w,c
  9371  002E3C  6E28               	movwf	(??___fldiv+2)^0,c
  9372  002E3E  0E7F               	movlw	127
  9373  002E40  1434               	andwf	(___fldiv@grs+3)^0,w,c
  9374  002E42  6E29               	movwf	(??___fldiv+3)^0,c
  9375  002E44  5026               	movf	??___fldiv^0,w,c
  9376  002E46  1027               	iorwf	(??___fldiv+1)^0,w,c
  9377  002E48  1028               	iorwf	(??___fldiv+2)^0,w,c
  9378  002E4A  1029               	iorwf	(??___fldiv+3)^0,w,c
  9379  002E4C  B4D8               	btfsc	status,2,c
  9380  002E4E  EF2B  F017         	goto	u6671
  9381  002E52  EF2D  F017         	goto	u6670
  9382  002E56                     u6671:
  9383  002E56  EF31  F017         	goto	l1320
  9384  002E5A                     u6670:
  9385  002E5A                     l6639:
  9386  002E5A  0E01               	movlw	1
  9387  002E5C  6E36               	movwf	___fldiv@aexp^0,c
  9388  002E5E  EF3A  F017         	goto	l1319
  9389  002E62                     l1320:
  9390  002E62  A01E               	btfss	___fldiv@b^0,0,c
  9391  002E64  EF36  F017         	goto	u6681
  9392  002E68  EF38  F017         	goto	u6680
  9393  002E6C                     u6681:
  9394  002E6C  EF3A  F017         	goto	l1319
  9395  002E70                     u6680:
  9396  002E70  EF2D  F017         	goto	l6639
  9397  002E74                     l1319:
  9398  002E74  5036               	movf	___fldiv@aexp^0,w,c
  9399  002E76  B4D8               	btfsc	status,2,c
  9400  002E78  EF40  F017         	goto	u6691
  9401  002E7C  EF42  F017         	goto	u6690
  9402  002E80                     u6691:
  9403  002E80  EF66  F017         	goto	l6651
  9404  002E84                     u6690:
  9405  002E84  0E01               	movlw	1
  9406  002E86  261E               	addwf	___fldiv@b^0,f,c
  9407  002E88  0E00               	movlw	0
  9408  002E8A  221F               	addwfc	(___fldiv@b+1)^0,f,c
  9409  002E8C  2220               	addwfc	(___fldiv@b+2)^0,f,c
  9410  002E8E  2221               	addwfc	(___fldiv@b+3)^0,f,c
  9411  002E90  A021               	btfss	(___fldiv@b+3)^0,0,c
  9412  002E92  EF4D  F017         	goto	u6701
  9413  002E96  EF4F  F017         	goto	u6700
  9414  002E9A                     u6701:
  9415  002E9A  EF66  F017         	goto	l6651
  9416  002E9E                     u6700:
  9417  002E9E  C01E  F026         	movff	___fldiv@b,??___fldiv
  9418  002EA2  C01F  F027         	movff	___fldiv@b+1,??___fldiv+1
  9419  002EA6  C020  F028         	movff	___fldiv@b+2,??___fldiv+2
  9420  002EAA  C021  F029         	movff	___fldiv@b+3,??___fldiv+3
  9421  002EAE  3429               	rlcf	(??___fldiv+3)^0,w,c
  9422  002EB0  3229               	rrcf	(??___fldiv+3)^0,f,c
  9423  002EB2  3228               	rrcf	(??___fldiv+2)^0,f,c
  9424  002EB4  3227               	rrcf	(??___fldiv+1)^0,f,c
  9425  002EB6  3226               	rrcf	??___fldiv^0,f,c
  9426  002EB8  C026  F01E         	movff	??___fldiv,___fldiv@b
  9427  002EBC  C027  F01F         	movff	??___fldiv+1,___fldiv@b+1
  9428  002EC0  C028  F020         	movff	??___fldiv+2,___fldiv@b+2
  9429  002EC4  C029  F021         	movff	??___fldiv+3,___fldiv@b+3
  9430  002EC8  4A2F               	infsnz	___fldiv@new_exp^0,f,c
  9431  002ECA  2A30               	incf	(___fldiv@new_exp+1)^0,f,c
  9432  002ECC                     l6651:
  9433  002ECC  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9434  002ECE  EF71  F017         	goto	u6711
  9435  002ED2  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  9436  002ED4  E108               	bnz	u6710
  9437  002ED6  282F               	incf	___fldiv@new_exp^0,w,c
  9438  002ED8  A0D8               	btfss	status,0,c
  9439  002EDA  EF71  F017         	goto	u6711
  9440  002EDE  EF73  F017         	goto	u6710
  9441  002EE2                     u6711:
  9442  002EE2  EF7E  F017         	goto	l6655
  9443  002EE6                     u6710:
  9444  002EE6  0E00               	movlw	0
  9445  002EE8  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  9446  002EEA  682F               	setf	___fldiv@new_exp^0,c
  9447  002EEC  0E00               	movlw	0
  9448  002EEE  6E1E               	movwf	___fldiv@b^0,c
  9449  002EF0  0E00               	movlw	0
  9450  002EF2  6E1F               	movwf	(___fldiv@b+1)^0,c
  9451  002EF4  0E00               	movlw	0
  9452  002EF6  6E20               	movwf	(___fldiv@b+2)^0,c
  9453  002EF8  0E00               	movlw	0
  9454  002EFA  6E21               	movwf	(___fldiv@b+3)^0,c
  9455  002EFC                     l6655:
  9456  002EFC  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9457  002EFE  EF8B  F017         	goto	u6720
  9458  002F02  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  9459  002F04  E106               	bnz	u6721
  9460  002F06  042F               	decf	___fldiv@new_exp^0,w,c
  9461  002F08  B0D8               	btfsc	status,0,c
  9462  002F0A  EF89  F017         	goto	u6721
  9463  002F0E  EF8B  F017         	goto	u6720
  9464  002F12                     u6721:
  9465  002F12  EF99  F017         	goto	l6659
  9466  002F16                     u6720:
  9467  002F16  0E00               	movlw	0
  9468  002F18  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  9469  002F1A  0E00               	movlw	0
  9470  002F1C  6E2F               	movwf	___fldiv@new_exp^0,c
  9471  002F1E  0E00               	movlw	0
  9472  002F20  6E1E               	movwf	___fldiv@b^0,c
  9473  002F22  0E00               	movlw	0
  9474  002F24  6E1F               	movwf	(___fldiv@b+1)^0,c
  9475  002F26  0E00               	movlw	0
  9476  002F28  6E20               	movwf	(___fldiv@b+2)^0,c
  9477  002F2A  0E00               	movlw	0
  9478  002F2C  6E21               	movwf	(___fldiv@b+3)^0,c
  9479  002F2E  0E00               	movlw	0
  9480  002F30  6E2E               	movwf	___fldiv@sign^0,c
  9481  002F32                     l6659:
  9482  002F32  C02F  F035         	movff	___fldiv@new_exp,___fldiv@bexp
  9483  002F36  A035               	btfss	___fldiv@bexp^0,0,c
  9484  002F38  EFA0  F017         	goto	u6731
  9485  002F3C  EFA2  F017         	goto	u6730
  9486  002F40                     u6731:
  9487  002F40  EFA5  F017         	goto	l6665
  9488  002F44                     u6730:
  9489  002F44  8E20               	bsf	(___fldiv@b+2)^0,7,c
  9490  002F46  EFA6  F017         	goto	l6667
  9491  002F4A                     l6665:
  9492  002F4A  9E20               	bcf	(___fldiv@b+2)^0,7,c
  9493  002F4C                     l6667:
  9494  002F4C  90D8               	bcf	status,0,c
  9495  002F4E  3035               	rrcf	___fldiv@bexp^0,w,c
  9496  002F50  6E21               	movwf	(___fldiv@b+3)^0,c
  9497  002F52  EF5C  F016         	goto	l6581
  9498  002F56                     l1306:
  9499  002F56  0012               	return		;funcret
  9500  002F58                     __end_of___fldiv:
  9501                           	callstack 0
  9502                           
  9503 ;; *************** function _HDC1080_Read *****************
  9504 ;; Defined at:
  9505 ;;		line 24 in file "hdc1080.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;		None
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;  regist          1   28[COMRAM] unsigned char 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  1    wreg      void 
  9512 ;; Registers used:
  9513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9522 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9523 ;;Total ram usage:        3 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:   13
  9526 ;; This function calls:
  9527 ;;		_I2C_ReadNBytes
  9528 ;;		_I2C_WriteNBytes
  9529 ;; This function is called by:
  9530 ;;		_HDC1080_temp_GetValue
  9531 ;;		_HDC1080_humy_GetValue
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           	psect	text45
  9536  0045D0                     __ptext45:
  9537                           	callstack 0
  9538  0045D0                     _HDC1080_Read:
  9539                           	callstack 16
  9540  0045D0                     
  9541                           ;hdc1080.c: 25:     uint8_t regist = 0x00;
  9542  0045D0  0E00               	movlw	0
  9543  0045D2  6E1D               	movwf	HDC1080_Read@regist^0,c
  9544  0045D4                     
  9545                           ;hdc1080.c: 27:     I2C_WriteNBytes(0x40, &regist, 1);
  9546  0045D4  0E1D               	movlw	low HDC1080_Read@regist
  9547  0045D6  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9548  0045D8  0E00               	movlw	high HDC1080_Read@regist
  9549  0045DA  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9550  0045DC  0E00               	movlw	0
  9551  0045DE  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9552  0045E0  0E01               	movlw	1
  9553  0045E2  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9554  0045E4  0E40               	movlw	64
  9555  0045E6  EC66  F022         	call	_I2C_WriteNBytes
  9556  0045EA                     
  9557                           ;hdc1080.c: 28:     _delay((unsigned long)((15000)*(8000000/4000.0)));
  9558  0045EA  0E99               	movlw	153
  9559  0045EC  6E1C               	movwf	(??_HDC1080_Read+1)^0,c
  9560  0045EE  0E31               	movlw	49
  9561  0045F0  6E1B               	movwf	??_HDC1080_Read^0,c
  9562  0045F2  0EA2               	movlw	162
  9563  0045F4                     u8397:
  9564  0045F4  2EE8               	decfsz	wreg,f,c
  9565  0045F6  D7FE               	bra	u8397
  9566  0045F8  2E1B               	decfsz	??_HDC1080_Read^0,f,c
  9567  0045FA  D7FC               	bra	u8397
  9568  0045FC  2E1C               	decfsz	(??_HDC1080_Read+1)^0,f,c
  9569  0045FE  D7FA               	bra	u8397
  9570  004600  F000 F000          	nop2	
  9571  004604                     
  9572                           ;hdc1080.c: 29:     I2C_ReadNBytes(0x40, &readBuffer, 6);
  9573  004604  0E74               	movlw	low _readBuffer
  9574  004606  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9575  004608  0E01               	movlw	high _readBuffer
  9576  00460A  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9577  00460C  0E00               	movlw	0
  9578  00460E  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9579  004610  0E06               	movlw	6
  9580  004612  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9581  004614  0E40               	movlw	64
  9582  004616  EC31  F023         	call	_I2C_ReadNBytes
  9583  00461A  0012               	return		;funcret
  9584  00461C                     __end_of_HDC1080_Read:
  9585                           	callstack 0
  9586                           
  9587 ;; *************** function _I2C_WriteNBytes *****************
  9588 ;; Defined at:
  9589 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;  address         1    wreg     unsigned char 
  9592 ;;  data            2   21[COMRAM] PTR unsigned char 
  9593 ;;		 -> HDC1080_Read@regist(1), 
  9594 ;;  len             2   23[COMRAM] unsigned int 
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;  address         1   25[COMRAM] unsigned char 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1    wreg      void 
  9599 ;; Registers used:
  9600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9609 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;Total ram usage:        5 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:   12
  9613 ;; This function calls:
  9614 ;;		_I2C_Close
  9615 ;;		_I2C_MasterWrite
  9616 ;;		_I2C_Open
  9617 ;;		_I2C_SetAddressNackCallback
  9618 ;;		_I2C_SetBuffer
  9619 ;; This function is called by:
  9620 ;;		_HDC1080_Read
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text46
  9625  0044CC                     __ptext46:
  9626                           	callstack 0
  9627  0044CC                     _I2C_WriteNBytes:
  9628                           	callstack 16
  9629                           
  9630                           ;incstack = 0
  9631                           ;I2C_WriteNBytes@address stored from wreg
  9632  0044CC  6E1A               	movwf	I2C_WriteNBytes@address^0,c
  9633  0044CE                     l5569:
  9634  0044CE  501A               	movf	I2C_WriteNBytes@address^0,w,c
  9635  0044D0  EC36  F020         	call	_I2C_Open
  9636  0044D4  0900               	iorlw	0
  9637  0044D6  B4D8               	btfsc	status,2,c
  9638  0044D8  EF70  F022         	goto	u5351
  9639  0044DC  EF72  F022         	goto	u5350
  9640  0044E0                     u5351:
  9641  0044E0  EF67  F022         	goto	l5569
  9642  0044E4                     u5350:
  9643  0044E4                     
  9644                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  9645  0044E4  C016  F005         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
  9646  0044E8  C017  F006         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
  9647  0044EC  C018  F007         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
  9648  0044F0  C019  F008         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
  9649  0044F4  EC36  F025         	call	_I2C_SetBuffer	;wreg free
  9650  0044F8                     
  9651                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  9652  0044F8  0E00               	movlw	0
  9653  0044FA  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  9654  0044FC  0E00               	movlw	0
  9655  0044FE  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  9656  004500  0E00               	movlw	0
  9657  004502  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  9658  004504  0E00               	movlw	0
  9659  004506  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  9660  004508  EC68  F025         	call	_I2C_SetAddressNackCallback	;wreg free
  9661  00450C                     
  9662                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  9663  00450C  ECF0  F025         	call	_I2C_MasterWrite	;wreg free
  9664  004510                     l5577:
  9665  004510  ECB8  F024         	call	_I2C_Close	;wreg free
  9666  004514  06E8               	decf	wreg,f,c
  9667  004516  B4D8               	btfsc	status,2,c
  9668  004518  EF90  F022         	goto	u5361
  9669  00451C  EF92  F022         	goto	u5360
  9670  004520                     u5361:
  9671  004520  EF88  F022         	goto	l5577
  9672  004524                     u5360:
  9673  004524  0012               	return		;funcret
  9674  004526                     __end_of_I2C_WriteNBytes:
  9675                           	callstack 0
  9676                           
  9677 ;; *************** function _I2C_ReadNBytes *****************
  9678 ;; Defined at:
  9679 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  address         1    wreg     unsigned char 
  9682 ;;  data            2   21[COMRAM] PTR unsigned char 
  9683 ;;		 -> readBuffer(10), 
  9684 ;;  len             2   23[COMRAM] unsigned int 
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;  address         1   25[COMRAM] unsigned char 
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  1    wreg      void 
  9689 ;; Registers used:
  9690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9699 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9700 ;;Total ram usage:        5 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; Hardware stack levels required when called:   12
  9703 ;; This function calls:
  9704 ;;		_I2C_Close
  9705 ;;		_I2C_MasterRead
  9706 ;;		_I2C_Open
  9707 ;;		_I2C_SetBuffer
  9708 ;; This function is called by:
  9709 ;;		_HDC1080_Read
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713                           	psect	text47
  9714  004662                     __ptext47:
  9715                           	callstack 0
  9716  004662                     _I2C_ReadNBytes:
  9717                           	callstack 16
  9718                           
  9719                           ;incstack = 0
  9720                           ;I2C_ReadNBytes@address stored from wreg
  9721  004662  6E1A               	movwf	I2C_ReadNBytes@address^0,c
  9722  004664                     l5581:
  9723  004664  501A               	movf	I2C_ReadNBytes@address^0,w,c
  9724  004666  EC36  F020         	call	_I2C_Open
  9725  00466A  0900               	iorlw	0
  9726  00466C  B4D8               	btfsc	status,2,c
  9727  00466E  EF3B  F023         	goto	u5371
  9728  004672  EF3D  F023         	goto	u5370
  9729  004676                     u5371:
  9730  004676  EF32  F023         	goto	l5581
  9731  00467A                     u5370:
  9732  00467A                     
  9733                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  9734  00467A  C016  F005         	movff	I2C_ReadNBytes@data,I2C_SetBuffer@buffer
  9735  00467E  C017  F006         	movff	I2C_ReadNBytes@data+1,I2C_SetBuffer@buffer+1
  9736  004682  C018  F007         	movff	I2C_ReadNBytes@len,I2C_SetBuffer@bufferSize
  9737  004686  C019  F008         	movff	I2C_ReadNBytes@len+1,I2C_SetBuffer@bufferSize+1
  9738  00468A  EC36  F025         	call	_I2C_SetBuffer	;wreg free
  9739  00468E                     
  9740                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  9741  00468E  ECEC  F025         	call	_I2C_MasterRead	;wreg free
  9742  004692                     l5587:
  9743  004692  ECB8  F024         	call	_I2C_Close	;wreg free
  9744  004696  06E8               	decf	wreg,f,c
  9745  004698  B4D8               	btfsc	status,2,c
  9746  00469A  EF51  F023         	goto	u5381
  9747  00469E  EF53  F023         	goto	u5380
  9748  0046A2                     u5381:
  9749  0046A2  EF49  F023         	goto	l5587
  9750  0046A6                     u5380:
  9751  0046A6  0012               	return		;funcret
  9752  0046A8                     __end_of_I2C_ReadNBytes:
  9753                           	callstack 0
  9754                           
  9755 ;; *************** function _I2C_MasterRead *****************
  9756 ;; Defined at:
  9757 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;		None
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;		None
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  1    wreg      enum E353
  9764 ;; Registers used:
  9765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9775 ;;Total ram usage:        0 bytes
  9776 ;; Hardware stack levels used:    1
  9777 ;; Hardware stack levels required when called:   11
  9778 ;; This function calls:
  9779 ;;		_I2C_MasterOperation
  9780 ;; This function is called by:
  9781 ;;		_I2C_ReadNBytes
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text48
  9786  004BD8                     __ptext48:
  9787                           	callstack 0
  9788  004BD8                     _I2C_MasterRead:
  9789                           	callstack 16
  9790  004BD8                     
  9791                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  9792  004BD8  0E01               	movlw	1
  9793  004BDA  EC76  F023         	call	_I2C_MasterOperation
  9794  004BDE  0012               	return		;funcret
  9795  004BE0                     __end_of_I2C_MasterRead:
  9796                           	callstack 0
  9797                           
  9798 ;; *************** function _HDC1080_Init *****************
  9799 ;; Defined at:
  9800 ;;		line 19 in file "hdc1080.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;		None
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;		None
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  1    wreg      void 
  9807 ;; Registers used:
  9808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9818 ;;Total ram usage:        2 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; Hardware stack levels required when called:   13
  9821 ;; This function calls:
  9822 ;;		_I2C_Write1ByteRegister
  9823 ;; This function is called by:
  9824 ;;		_main
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           	psect	text49
  9829  004A1C                     __ptext49:
  9830                           	callstack 0
  9831  004A1C                     _HDC1080_Init:
  9832                           	callstack 17
  9833  004A1C                     
  9834                           ;hdc1080.c: 20:     I2C_Write1ByteRegister(0x40, 0x02, 0x10);
  9835  004A1C  0E02               	movlw	2
  9836  004A1E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  9837  004A20  0E10               	movlw	16
  9838  004A22  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  9839  004A24  0E40               	movlw	64
  9840  004A26  EC6B  F021         	call	_I2C_Write1ByteRegister
  9841  004A2A                     
  9842                           ;hdc1080.c: 21:     _delay((unsigned long)((100)*(8000000/4000.0)));
  9843  004A2A  0E02               	movlw	2
  9844  004A2C  6E1A               	movwf	(??_HDC1080_Init+1)^0,c
  9845  004A2E  0E04               	movlw	4
  9846  004A30  6E19               	movwf	??_HDC1080_Init^0,c
  9847  004A32  0EBA               	movlw	186
  9848  004A34                     u8407:
  9849  004A34  2EE8               	decfsz	wreg,f,c
  9850  004A36  D7FE               	bra	u8407
  9851  004A38  2E19               	decfsz	??_HDC1080_Init^0,f,c
  9852  004A3A  D7FC               	bra	u8407
  9853  004A3C  2E1A               	decfsz	(??_HDC1080_Init+1)^0,f,c
  9854  004A3E  D7FA               	bra	u8407
  9855  004A40  F000 F000          	nop2	
  9856  004A44  0012               	return		;funcret
  9857  004A46                     __end_of_HDC1080_Init:
  9858                           	callstack 0
  9859                           
  9860 ;; *************** function _I2C_Write1ByteRegister *****************
  9861 ;; Defined at:
  9862 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  address         1    wreg     unsigned char 
  9865 ;;  reg             1   21[COMRAM] unsigned char 
  9866 ;;  data            1   22[COMRAM] unsigned char 
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;  address         1   23[COMRAM] unsigned char 
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      void 
  9871 ;; Registers used:
  9872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9881 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9882 ;;Total ram usage:        3 bytes
  9883 ;; Hardware stack levels used:    1
  9884 ;; Hardware stack levels required when called:   12
  9885 ;; This function calls:
  9886 ;;		_I2C_Close
  9887 ;;		_I2C_MasterWrite
  9888 ;;		_I2C_Open
  9889 ;;		_I2C_SetAddressNackCallback
  9890 ;;		_I2C_SetBuffer
  9891 ;;		_I2C_SetDataCompleteCallback
  9892 ;; This function is called by:
  9893 ;;		_HDC1080_Init
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text50
  9898  0042D6                     __ptext50:
  9899                           	callstack 0
  9900  0042D6                     _I2C_Write1ByteRegister:
  9901                           	callstack 17
  9902                           
  9903                           ;incstack = 0
  9904                           ;I2C_Write1ByteRegister@address stored from wreg
  9905  0042D6  6E18               	movwf	I2C_Write1ByteRegister@address^0,c
  9906  0042D8                     l5757:
  9907  0042D8  5018               	movf	I2C_Write1ByteRegister@address^0,w,c
  9908  0042DA  EC36  F020         	call	_I2C_Open
  9909  0042DE  0900               	iorlw	0
  9910  0042E0  B4D8               	btfsc	status,2,c
  9911  0042E2  EF75  F021         	goto	u5611
  9912  0042E6  EF77  F021         	goto	u5610
  9913  0042EA                     u5611:
  9914  0042EA  EF6C  F021         	goto	l5757
  9915  0042EE                     u5610:
  9916  0042EE                     
  9917                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  9918  0042EE  0EC0               	movlw	low _wr1RegCompleteHandler
  9919  0042F0  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  9920  0042F2  0E48               	movlw	high _wr1RegCompleteHandler
  9921  0042F4  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  9922  0042F6  0E17               	movlw	low I2C_Write1ByteRegister@data
  9923  0042F8  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  9924  0042FA  0E00               	movlw	high I2C_Write1ByteRegister@data
  9925  0042FC  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  9926  0042FE  EC74  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
  9927  004302                     
  9928                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  9929  004302  0E16               	movlw	low I2C_Write1ByteRegister@reg
  9930  004304  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  9931  004306  0E00               	movlw	high I2C_Write1ByteRegister@reg
  9932  004308  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  9933  00430A  0E00               	movlw	0
  9934  00430C  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  9935  00430E  0E01               	movlw	1
  9936  004310  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  9937  004312  EC36  F025         	call	_I2C_SetBuffer	;wreg free
  9938  004316                     
  9939                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  9940  004316  0E00               	movlw	0
  9941  004318  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  9942  00431A  0E00               	movlw	0
  9943  00431C  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  9944  00431E  0E00               	movlw	0
  9945  004320  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  9946  004322  0E00               	movlw	0
  9947  004324  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  9948  004326  EC68  F025         	call	_I2C_SetAddressNackCallback	;wreg free
  9949  00432A                     
  9950                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  9951  00432A  ECF0  F025         	call	_I2C_MasterWrite	;wreg free
  9952  00432E                     l5767:
  9953  00432E  ECB8  F024         	call	_I2C_Close	;wreg free
  9954  004332  06E8               	decf	wreg,f,c
  9955  004334  B4D8               	btfsc	status,2,c
  9956  004336  EF9F  F021         	goto	u5621
  9957  00433A  EFA1  F021         	goto	u5620
  9958  00433E                     u5621:
  9959  00433E  EF97  F021         	goto	l5767
  9960  004342                     u5620:
  9961  004342  0012               	return		;funcret
  9962  004344                     __end_of_I2C_Write1ByteRegister:
  9963                           	callstack 0
  9964                           
  9965 ;; *************** function _I2C_SetAddressNackCallback *****************
  9966 ;; Defined at:
  9967 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  9970 ;;		 -> Absolute function(1), 
  9971 ;;  ptr             2   11[COMRAM] PTR void 
  9972 ;;		 -> NULL(0), 
  9973 ;; Auto vars:     Size  Location     Type
  9974 ;;		None
  9975 ;; Return value:  Size  Location     Type
  9976 ;;                  1    wreg      void 
  9977 ;; Registers used:
  9978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9979 ;; Tracked objects:
  9980 ;;		On entry : 0/0
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9988 ;;Total ram usage:        4 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; Hardware stack levels required when called:    5
  9991 ;; This function calls:
  9992 ;;		_I2C_SetCallback
  9993 ;; This function is called by:
  9994 ;;		_I2C_Write1ByteRegister
  9995 ;;		_I2C_WriteNBytes
  9996 ;;		_I2C_Read1ByteRegister
  9997 ;;		_I2C_Read2ByteRegister
  9998 ;;		_I2C_Write2ByteRegister
  9999 ;;		_I2C_ReadDataBlock
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text51
 10004  004AD0                     __ptext51:
 10005                           	callstack 0
 10006  004AD0                     _I2C_SetAddressNackCallback:
 10007                           	callstack 22
 10008  004AD0                     
 10009                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 10010  004AD0  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
 10011  004AD4  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
 10012  004AD8  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
 10013  004ADC  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
 10014  004AE0  0E02               	movlw	2
 10015  004AE2  ECBB  F020         	call	_I2C_SetCallback
 10016  004AE6  0012               	return		;funcret
 10017  004AE8                     __end_of_I2C_SetAddressNackCallback:
 10018                           	callstack 0
 10019                           
 10020 ;; *************** function _I2C_Open *****************
 10021 ;; Defined at:
 10022 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  address         1    wreg     unsigned char 
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;  address         1    4[COMRAM] unsigned char 
 10027 ;;  returnValue     1    5[COMRAM] enum E353
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      enum E353
 10030 ;; Registers used:
 10031 ;;		wreg, status,2, status,0, cstack
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10041 ;;Total ram usage:        2 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; Hardware stack levels required when called:    5
 10044 ;; This function calls:
 10045 ;;		_I2C_MasterClearIrq
 10046 ;;		_I2C_MasterOpen
 10047 ;; This function is called by:
 10048 ;;		_I2C_Write1ByteRegister
 10049 ;;		_I2C_WriteNBytes
 10050 ;;		_I2C_ReadNBytes
 10051 ;;		_I2C_Read1ByteRegister
 10052 ;;		_I2C_Read2ByteRegister
 10053 ;;		_I2C_Write2ByteRegister
 10054 ;;		_I2C_ReadDataBlock
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text52
 10059  00406C                     __ptext52:
 10060                           	callstack 0
 10061  00406C                     _I2C_Open:
 10062                           	callstack 22
 10063                           
 10064                           ;incstack = 0
 10065                           ;I2C_Open@address stored from wreg
 10066  00406C  6E05               	movwf	I2C_Open@address^0,c
 10067  00406E                     
 10068                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 10069  00406E  0E01               	movlw	1
 10070  004070  6E06               	movwf	I2C_Open@returnValue^0,c
 10071  004072                     
 10072                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
 10073  004072  0101               	movlb	1	; () banked
 10074  004074  B523               	btfsc	(_I2C_Status+35)& (0+255),2,b
 10075  004076  EF3F  F020         	goto	u4691
 10076  00407A  EF41  F020         	goto	u4690
 10077  00407E                     u4691:
 10078  00407E  EF7B  F020         	goto	l5179
 10079  004082                     u4690:
 10080  004082                     
 10081                           ; BSR set to: 1
 10082                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
 10083  004082  C005  F11C         	movff	I2C_Open@address,_I2C_Status+28
 10084  004086                     
 10085                           ; BSR set to: 1
 10086                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
 10087  004086  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
 10088  004088                     
 10089                           ; BSR set to: 1
 10090                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
 10091  004088  8523               	bsf	(_I2C_Status+35)& (0+255),2,b
 10092  00408A                     
 10093                           ; BSR set to: 1
 10094                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
 10095  00408A  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 10096  00408C                     
 10097                           ; BSR set to: 1
 10098                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
 10099  00408C  0E0E               	movlw	14
 10100  00408E  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10101  004090                     
 10102                           ; BSR set to: 1
 10103                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
 10104  004090  0E01               	movlw	1
 10105  004092  6F1B               	movwf	(_I2C_Status+27)& (0+255),b
 10106  004094  0EF4               	movlw	244
 10107  004096  6F1A               	movwf	(_I2C_Status+26)& (0+255),b
 10108  004098                     
 10109                           ; BSR set to: 1
 10110                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
 10111  004098  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
 10112  00409A                     
 10113                           ; BSR set to: 1
 10114                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 10115  00409A  0E54               	movlw	low _I2C_CallbackReturnStop
 10116  00409C  6F00               	movwf	_I2C_Status& (0+255),b
 10117  00409E  0E4C               	movlw	high _I2C_CallbackReturnStop
 10118  0040A0  6F01               	movwf	(_I2C_Status+1)& (0+255),b
 10119  0040A2                     
 10120                           ; BSR set to: 1
 10121                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 10122  0040A2  0E00               	movlw	0
 10123  0040A4  6F0C               	movwf	(_I2C_Status+12)& (0+255),b
 10124  0040A6  0E00               	movlw	0
 10125  0040A8  6F0D               	movwf	(_I2C_Status+13)& (0+255),b
 10126  0040AA                     
 10127                           ; BSR set to: 1
 10128                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 10129  0040AA  0E54               	movlw	low _I2C_CallbackReturnStop
 10130  0040AC  6F02               	movwf	(_I2C_Status+2)& (0+255),b
 10131  0040AE  0E4C               	movlw	high _I2C_CallbackReturnStop
 10132  0040B0  6F03               	movwf	(_I2C_Status+3)& (0+255),b
 10133  0040B2                     
 10134                           ; BSR set to: 1
 10135                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 10136  0040B2  0E00               	movlw	0
 10137  0040B4  6F0E               	movwf	(_I2C_Status+14)& (0+255),b
 10138  0040B6  0E00               	movlw	0
 10139  0040B8  6F0F               	movwf	(_I2C_Status+15)& (0+255),b
 10140  0040BA                     
 10141                           ; BSR set to: 1
 10142                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 10143  0040BA  0E54               	movlw	low _I2C_CallbackReturnStop
 10144  0040BC  6F04               	movwf	(_I2C_Status+4)& (0+255),b
 10145  0040BE  0E4C               	movlw	high _I2C_CallbackReturnStop
 10146  0040C0  6F05               	movwf	(_I2C_Status+5)& (0+255),b
 10147  0040C2                     
 10148                           ; BSR set to: 1
 10149                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 10150  0040C2  0E00               	movlw	0
 10151  0040C4  6F10               	movwf	(_I2C_Status+16)& (0+255),b
 10152  0040C6  0E00               	movlw	0
 10153  0040C8  6F11               	movwf	(_I2C_Status+17)& (0+255),b
 10154  0040CA                     
 10155                           ; BSR set to: 1
 10156                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 10157  0040CA  0E54               	movlw	low _I2C_CallbackReturnStop
 10158  0040CC  6F06               	movwf	(_I2C_Status+6)& (0+255),b
 10159  0040CE  0E4C               	movlw	high _I2C_CallbackReturnStop
 10160  0040D0  6F07               	movwf	(_I2C_Status+7)& (0+255),b
 10161  0040D2                     
 10162                           ; BSR set to: 1
 10163                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 10164  0040D2  0E00               	movlw	0
 10165  0040D4  6F12               	movwf	(_I2C_Status+18)& (0+255),b
 10166  0040D6  0E00               	movlw	0
 10167  0040D8  6F13               	movwf	(_I2C_Status+19)& (0+255),b
 10168  0040DA                     
 10169                           ; BSR set to: 1
 10170                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 10171  0040DA  0E50               	movlw	low _I2C_CallbackReturnReset
 10172  0040DC  6F08               	movwf	(_I2C_Status+8)& (0+255),b
 10173  0040DE  0E4C               	movlw	high _I2C_CallbackReturnReset
 10174  0040E0  6F09               	movwf	(_I2C_Status+9)& (0+255),b
 10175  0040E2                     
 10176                           ; BSR set to: 1
 10177                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 10178  0040E2  0E00               	movlw	0
 10179  0040E4  6F14               	movwf	(_I2C_Status+20)& (0+255),b
 10180  0040E6  0E00               	movlw	0
 10181  0040E8  6F15               	movwf	(_I2C_Status+21)& (0+255),b
 10182  0040EA                     
 10183                           ; BSR set to: 1
 10184                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 10185  0040EA  EC36  F026         	call	_I2C_MasterClearIrq	;wreg free
 10186  0040EE                     
 10187                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 10188  0040EE  EC48  F025         	call	_I2C_MasterOpen	;wreg free
 10189  0040F2                     
 10190                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 10191  0040F2  0E00               	movlw	0
 10192  0040F4  6E06               	movwf	I2C_Open@returnValue^0,c
 10193  0040F6                     l5179:
 10194                           
 10195                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 10196  0040F6  5006               	movf	I2C_Open@returnValue^0,w,c
 10197  0040F8  0012               	return		;funcret
 10198  0040FA                     __end_of_I2C_Open:
 10199                           	callstack 0
 10200                           
 10201 ;; *************** function _I2C_MasterOpen *****************
 10202 ;; Defined at:
 10203 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;		None
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;		None
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  1    wreg      _Bool 
 10210 ;; Registers used:
 10211 ;;		wreg, status,2
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;Total ram usage:        0 bytes
 10222 ;; Hardware stack levels used:    1
 10223 ;; Hardware stack levels required when called:    4
 10224 ;; This function calls:
 10225 ;;		Nothing
 10226 ;; This function is called by:
 10227 ;;		_I2C_Open
 10228 ;; This function uses a non-reentrant model
 10229 ;;
 10230                           
 10231                           	psect	text53
 10232  004A90                     __ptext53:
 10233                           	callstack 0
 10234  004A90                     _I2C_MasterOpen:
 10235                           	callstack 22
 10236  004A90                     
 10237                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
 10238  004A90  BAC6               	btfsc	198,5,c	;volatile
 10239  004A92  EF4D  F025         	goto	u3661
 10240  004A96  EF4F  F025         	goto	u3660
 10241  004A9A                     u3661:
 10242  004A9A  EF58  F025         	goto	l378
 10243  004A9E                     u3660:
 10244  004A9E                     
 10245                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
 10246  004A9E  0E00               	movlw	0
 10247  004AA0  6EC7               	movwf	199,c	;volatile
 10248                           
 10249                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
 10250  004AA2  0E08               	movlw	8
 10251  004AA4  6EC6               	movwf	198,c	;volatile
 10252                           
 10253                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
 10254  004AA6  0E00               	movlw	0
 10255  004AA8  6EC5               	movwf	197,c	;volatile
 10256                           
 10257                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
 10258  004AAA  0E13               	movlw	19
 10259  004AAC  6EC8               	movwf	200,c	;volatile
 10260  004AAE                     
 10261                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
 10262  004AAE  8AC6               	bsf	198,5,c	;volatile
 10263  004AB0                     l378:
 10264  004AB0  0012               	return		;funcret
 10265  004AB2                     __end_of_I2C_MasterOpen:
 10266                           	callstack 0
 10267                           
 10268 ;; *************** function _I2C_MasterWrite *****************
 10269 ;; Defined at:
 10270 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;		None
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;		None
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      enum E353
 10277 ;; Registers used:
 10278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;Total ram usage:        0 bytes
 10289 ;; Hardware stack levels used:    1
 10290 ;; Hardware stack levels required when called:   11
 10291 ;; This function calls:
 10292 ;;		_I2C_MasterOperation
 10293 ;; This function is called by:
 10294 ;;		_I2C_Write1ByteRegister
 10295 ;;		_I2C_WriteNBytes
 10296 ;;		_I2C_Read1ByteRegister
 10297 ;;		_I2C_Read2ByteRegister
 10298 ;;		_I2C_Write2ByteRegister
 10299 ;;		_I2C_ReadDataBlock
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text54
 10304  004BE0                     __ptext54:
 10305                           	callstack 0
 10306  004BE0                     _I2C_MasterWrite:
 10307                           	callstack 16
 10308  004BE0                     
 10309                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
 10310  004BE0  0E00               	movlw	0
 10311  004BE2  EC76  F023         	call	_I2C_MasterOperation
 10312  004BE6  0012               	return		;funcret
 10313  004BE8                     __end_of_I2C_MasterWrite:
 10314                           	callstack 0
 10315                           
 10316 ;; *************** function _I2C_MasterOperation *****************
 10317 ;; Defined at:
 10318 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;  read            1    wreg     _Bool 
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;  read            1   19[COMRAM] _Bool 
 10323 ;;  returnValue     1   20[COMRAM] enum E353
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1    wreg      enum E353
 10326 ;; Registers used:
 10327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10337 ;;Total ram usage:        2 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; Hardware stack levels required when called:   10
 10340 ;; This function calls:
 10341 ;;		_I2C_MasterStart
 10342 ;;		_I2C_Poller
 10343 ;; This function is called by:
 10344 ;;		_I2C_MasterRead
 10345 ;;		_I2C_MasterWrite
 10346 ;; This function uses a non-reentrant model
 10347 ;;
 10348                           
 10349                           	psect	text55
 10350  0046EC                     __ptext55:
 10351                           	callstack 0
 10352  0046EC                     _I2C_MasterOperation:
 10353                           	callstack 16
 10354                           
 10355                           ;incstack = 0
 10356                           ;I2C_MasterOperation@read stored from wreg
 10357  0046EC  6E14               	movwf	I2C_MasterOperation@read^0,c
 10358  0046EE                     
 10359                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 10360  0046EE  0E01               	movlw	1
 10361  0046F0  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 10362  0046F2                     
 10363                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 10364  0046F2  0101               	movlb	1	; () banked
 10365  0046F4  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10366  0046F6  EF7F  F023         	goto	u3671
 10367  0046FA  EF81  F023         	goto	u3670
 10368  0046FE                     u3671:
 10369  0046FE  EF96  F023         	goto	l4579
 10370  004702                     u3670:
 10371  004702                     
 10372                           ; BSR set to: 1
 10373                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 10374  004702  8323               	bsf	(_I2C_Status+35)& (0+255),1,b
 10375  004704                     
 10376                           ; BSR set to: 1
 10377                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 10378  004704  0E00               	movlw	0
 10379  004706  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 10380  004708                     
 10381                           ; BSR set to: 1
 10382                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 10383  004708  5014               	movf	I2C_MasterOperation@read^0,w,c
 10384  00470A  B4D8               	btfsc	status,2,c
 10385  00470C  EF8A  F023         	goto	u3681
 10386  004710  EF8C  F023         	goto	u3680
 10387  004714                     u3681:
 10388  004714  EF90  F023         	goto	l4573
 10389  004718                     u3680:
 10390  004718                     
 10391                           ; BSR set to: 1
 10392                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 10393  004718  0E01               	movlw	1
 10394  00471A  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10395                           
 10396                           ;mcc_generated_files/i2c_master.c: 235:         }
 10397  00471C  EF92  F023         	goto	l4575
 10398  004720                     l4573:
 10399                           
 10400                           ; BSR set to: 1
 10401                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 10402  004720  0E02               	movlw	2
 10403  004722  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10404  004724                     l4575:
 10405                           
 10406                           ; BSR set to: 1
 10407                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 10408  004724  EC30  F026         	call	_I2C_MasterStart	;wreg free
 10409  004728                     
 10410                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 10411  004728  EC59  F025         	call	_I2C_Poller	;wreg free
 10412  00472C                     l4579:
 10413                           
 10414                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 10415  00472C  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
 10416  00472E  0012               	return		;funcret
 10417  004730                     __end_of_I2C_MasterOperation:
 10418                           	callstack 0
 10419                           
 10420 ;; *************** function _I2C_Poller *****************
 10421 ;; Defined at:
 10422 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;		None
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;		None
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10440 ;;Total ram usage:        0 bytes
 10441 ;; Hardware stack levels used:    1
 10442 ;; Hardware stack levels required when called:    9
 10443 ;; This function calls:
 10444 ;;		_I2C_MasterFsm
 10445 ;;		_I2C_MasterWaitForEvent
 10446 ;; This function is called by:
 10447 ;;		_I2C_MasterOperation
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451                           	psect	text56
 10452  004AB2                     __ptext56:
 10453                           	callstack 0
 10454  004AB2                     _I2C_Poller:
 10455                           	callstack 16
 10456  004AB2                     
 10457                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10458  004AB2  EF5F  F025         	goto	l4323
 10459  004AB6                     l4319:
 10460                           
 10461                           ; BSR set to: 1
 10462                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 10463  004AB6  EC9F  F025         	call	_I2C_MasterWaitForEvent	;wreg free
 10464  004ABA                     
 10465                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 10466  004ABA  EC33  F021         	call	_I2C_MasterFsm	;wreg free
 10467  004ABE                     l4323:
 10468                           
 10469                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10470  004ABE  0101               	movlb	1	; () banked
 10471  004AC0  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10472  004AC2  EF65  F025         	goto	u3221
 10473  004AC6  EF67  F025         	goto	u3220
 10474  004ACA                     u3221:
 10475  004ACA  EF5B  F025         	goto	l4319
 10476  004ACE                     u3220:
 10477  004ACE                     
 10478                           ; BSR set to: 1
 10479  004ACE  0012               	return		;funcret
 10480  004AD0                     __end_of_I2C_Poller:
 10481                           	callstack 0
 10482                           
 10483 ;; *************** function _I2C_MasterWaitForEvent *****************
 10484 ;; Defined at:
 10485 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 10486 ;; Parameters:    Size  Location     Type
 10487 ;;		None
 10488 ;; Auto vars:     Size  Location     Type
 10489 ;;		None
 10490 ;; Return value:  Size  Location     Type
 10491 ;;                  1    wreg      void 
 10492 ;; Registers used:
 10493 ;;		None
 10494 ;; Tracked objects:
 10495 ;;		On entry : 0/0
 10496 ;;		On exit  : 0/0
 10497 ;;		Unchanged: 0/0
 10498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10503 ;;Total ram usage:        0 bytes
 10504 ;; Hardware stack levels used:    1
 10505 ;; Hardware stack levels required when called:    4
 10506 ;; This function calls:
 10507 ;;		Nothing
 10508 ;; This function is called by:
 10509 ;;		_I2C_Poller
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           	psect	text57
 10514  004B3E                     __ptext57:
 10515                           	callstack 0
 10516  004B3E                     _I2C_MasterWaitForEvent:
 10517                           	callstack 20
 10518  004B3E                     l435:
 10519                           
 10520                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
 10521  004B3E  A69E               	btfss	158,3,c	;volatile
 10522  004B40  EFA4  F025         	goto	u3141
 10523  004B44  EFA6  F025         	goto	u3140
 10524  004B48                     u3141:
 10525  004B48  EF9F  F025         	goto	l435
 10526  004B4C                     u3140:
 10527  004B4C  0012               	return		;funcret
 10528  004B4E                     __end_of_I2C_MasterWaitForEvent:
 10529                           	callstack 0
 10530                           
 10531 ;; *************** function _I2C_MasterFsm *****************
 10532 ;; Defined at:
 10533 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 10534 ;; Parameters:    Size  Location     Type
 10535 ;;		None
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;		None
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      void 
 10540 ;; Registers used:
 10541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10551 ;;Total ram usage:        2 bytes
 10552 ;; Hardware stack levels used:    1
 10553 ;; Hardware stack levels required when called:    8
 10554 ;; This function calls:
 10555 ;;		_I2C_DO_ADDRESS_NACK
 10556 ;;		_I2C_DO_IDLE
 10557 ;;		_I2C_DO_RCEN
 10558 ;;		_I2C_DO_RESET
 10559 ;;		_I2C_DO_RX
 10560 ;;		_I2C_DO_RX_ACK
 10561 ;;		_I2C_DO_RX_NACK_RESTART
 10562 ;;		_I2C_DO_RX_NACK_STOP
 10563 ;;		_I2C_DO_SEND_ADR_READ
 10564 ;;		_I2C_DO_SEND_ADR_WRITE
 10565 ;;		_I2C_DO_SEND_RESTART
 10566 ;;		_I2C_DO_SEND_RESTART_READ
 10567 ;;		_I2C_DO_SEND_RESTART_WRITE
 10568 ;;		_I2C_DO_SEND_STOP
 10569 ;;		_I2C_DO_TX
 10570 ;;		_I2C_DO_TX_EMPTY
 10571 ;;		_I2C_MasterClearIrq
 10572 ;;		_I2C_MasterIsNack
 10573 ;; This function is called by:
 10574 ;;		_I2C_Poller
 10575 ;; This function uses a non-reentrant model
 10576 ;;
 10577                           
 10578                           	psect	text58
 10579  004266                     __ptext58:
 10580                           	callstack 0
 10581  004266                     _I2C_MasterFsm:
 10582                           	callstack 16
 10583  004266                     
 10584                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 10585  004266  EC36  F026         	call	_I2C_MasterClearIrq	;wreg free
 10586  00426A                     
 10587                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 10588  00426A  0101               	movlb	1	; () banked
 10589  00426C  A123               	btfss	(_I2C_Status+35)& (0+255),0,b
 10590  00426E  EF3B  F021         	goto	u3151
 10591  004272  EF3D  F021         	goto	u3150
 10592  004276                     u3151:
 10593  004276  EF4A  F021         	goto	l4299
 10594  00427A                     u3150:
 10595  00427A                     
 10596                           ; BSR set to: 1
 10597  00427A  EC95  F025         	call	_I2C_MasterIsNack	;wreg free
 10598  00427E  0900               	iorlw	0
 10599  004280  B4D8               	btfsc	status,2,c
 10600  004282  EF45  F021         	goto	u3161
 10601  004286  EF47  F021         	goto	u3160
 10602  00428A                     u3161:
 10603  00428A  EF4A  F021         	goto	l4299
 10604  00428E                     u3160:
 10605  00428E                     
 10606                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 10607  00428E  0E0F               	movlw	15
 10608  004290  0101               	movlb	1	; () banked
 10609  004292  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10610  004294                     l4299:
 10611                           
 10612                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
 10613  004294  0101               	movlb	1	; () banked
 10614  004296  5121               	movf	(_I2C_Status+33)& (0+255),w,b
 10615  004298  0D02               	mullw	2
 10616  00429A  0E01               	movlw	low _fsmStateTable
 10617  00429C  24F3               	addwf	243,w,c
 10618  00429E  6EF6               	movwf	tblptrl,c
 10619  0042A0  0E10               	movlw	high _fsmStateTable
 10620  0042A2  20F4               	addwfc	244,w,c
 10621  0042A4  6EF7               	movwf	tblptrh,c
 10622  0042A6                     	if	1	;There are 3 active tblptr bytes
 10623  0042A6  6AF8               	clrf	tblptru,c
 10624  0042A8  0E00               	movlw	low (__mediumconst shr (0+16))
 10625  0042AA  22F8               	addwfc	tblptru,f,c
 10626  0042AC                     	endif
 10627  0042AC  0009               	tblrd		*+
 10628  0042AE  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
 10629  0042B2  0009               	tblrd		*+
 10630  0042B4  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
 10631  0042B8  D802               	call	u3178
 10632  0042BA  EF68  F021         	goto	u3179
 10633  0042BE                     u3178:
 10634  0042BE  0005               	push	
 10635  0042C0  6EFA               	movwf	pclath,c
 10636  0042C2  5012               	movf	??_I2C_MasterFsm^0,w,c
 10637  0042C4  6EFD               	movwf	tosl,c
 10638  0042C6  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
 10639  0042C8  6EFE               	movwf	tosh,c
 10640  0042CA  6AFF               	clrf	tosu,c
 10641  0042CC  50FA               	movf	pclath,w,c
 10642  0042CE  0012               	return		;indir
 10643  0042D0                     u3179:
 10644  0042D0  0101               	movlb	1	; () banked
 10645  0042D2  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10646  0042D4                     
 10647                           ; BSR set to: 1
 10648  0042D4  0012               	return		;funcret
 10649  0042D6                     __end_of_I2C_MasterFsm:
 10650                           	callstack 0
 10651                           
 10652 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 10653 ;; Defined at:
 10654 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;		None
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;		None
 10659 ;; Return value:  Size  Location     Type
 10660 ;;                  1    wreg      enum E3101
 10661 ;; Registers used:
 10662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10663 ;; Tracked objects:
 10664 ;;		On entry : 0/0
 10665 ;;		On exit  : 0/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;Total ram usage:        2 bytes
 10673 ;; Hardware stack levels used:    1
 10674 ;; Hardware stack levels required when called:    7
 10675 ;; This function calls:
 10676 ;;		Absolute function
 10677 ;;		_I2C_CallbackReturnReset
 10678 ;;		_I2C_CallbackReturnStop
 10679 ;;		_I2C_DO_SEND_RESTART
 10680 ;;		_I2C_DO_SEND_STOP
 10681 ;;		_rd1RegCompleteHandler
 10682 ;;		_rd2RegCompleteHandler
 10683 ;;		_rdBlkRegCompleteHandler
 10684 ;;		_wr1RegCompleteHandler
 10685 ;;		_wr2RegCompleteHandler
 10686 ;; This function is called by:
 10687 ;;		_I2C_MasterFsm
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           	psect	text59
 10692  004344                     __ptext59:
 10693                           	callstack 0
 10694  004344                     _I2C_DO_ADDRESS_NACK:
 10695                           	callstack 16
 10696  004344                     
 10697                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 10698  004344  0101               	movlb	1	; () banked
 10699  004346  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 10700  004348                     
 10701                           ; BSR set to: 1
 10702                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 10703  004348  0E02               	movlw	2
 10704  00434A  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 10705                           
 10706                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 10707  00434C  EFB0  F021         	goto	l4279
 10708  004350                     l4269:
 10709                           
 10710                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 10711  004350  EC04  F026         	call	_I2C_DO_SEND_RESTART	;wreg free
 10712  004354  EFD4  F021         	goto	l357
 10713  004358                     l4273:
 10714                           
 10715                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 10716  004358  EC00  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 10717  00435C  EFD4  F021         	goto	l357
 10718  004360                     l4279:
 10719                           
 10720                           ; BSR set to: 1
 10721  004360  C110  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
 10722  004364  C111  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
 10723  004368  D802               	call	u3138
 10724  00436A  EFC0  F021         	goto	u3139
 10725  00436E                     u3138:
 10726  00436E  0005               	push	
 10727  004370  6EFA               	movwf	pclath,c
 10728  004372  5104               	movf	(_I2C_Status+4)& (0+255),w,b
 10729  004374  6EFD               	movwf	tosl,c
 10730  004376  5105               	movf	(_I2C_Status+5)& (0+255),w,b
 10731  004378  6EFE               	movwf	tosh,c
 10732  00437A  6AFF               	clrf	tosu,c
 10733  00437C  50FA               	movf	pclath,w,c
 10734  00437E  0012               	return		;indir
 10735  004380                     u3139:
 10736  004380  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
 10737  004382  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
 10738                           
 10739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10740                           ; Switch size 1, requested type "simple"
 10741                           ; Number of cases is 1, Range of values is 0 to 0
 10742                           ; switch strategies available:
 10743                           ; Name         Instructions Cycles
 10744                           ; simple_byte            4     3 (average)
 10745                           ;	Chosen strategy is simple_byte
 10746  004384  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
 10747  004386  0A00               	xorlw	0	; case 0
 10748  004388  B4D8               	btfsc	status,2,c
 10749  00438A  EFC9  F021         	goto	l7807
 10750  00438E  EFAC  F021         	goto	l4273
 10751  004392                     l7807:
 10752                           
 10753                           ; Switch size 1, requested type "simple"
 10754                           ; Number of cases is 2, Range of values is 2 to 3
 10755                           ; switch strategies available:
 10756                           ; Name         Instructions Cycles
 10757                           ; simple_byte            7     4 (average)
 10758                           ;	Chosen strategy is simple_byte
 10759  004392  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
 10760  004394  0A02               	xorlw	2	; case 2
 10761  004396  B4D8               	btfsc	status,2,c
 10762  004398  EFA8  F021         	goto	l4269
 10763  00439C  0A01               	xorlw	1	; case 3
 10764  00439E  B4D8               	btfsc	status,2,c
 10765  0043A0  EFA8  F021         	goto	l4269
 10766  0043A4  EFAC  F021         	goto	l4273
 10767  0043A8                     l357:
 10768  0043A8  0012               	return		;funcret
 10769  0043AA                     __end_of_I2C_DO_ADDRESS_NACK:
 10770                           	callstack 0
 10771                           
 10772 ;; *************** function _I2C_DO_RESET *****************
 10773 ;; Defined at:
 10774 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;		None
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;		None
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  1    wreg      enum E3101
 10781 ;; Registers used:
 10782 ;;		wreg, status,2
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10792 ;;Total ram usage:        0 bytes
 10793 ;; Hardware stack levels used:    1
 10794 ;; Hardware stack levels required when called:    4
 10795 ;; This function calls:
 10796 ;;		Nothing
 10797 ;; This function is called by:
 10798 ;;		_I2C_MasterFsm
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           	psect	text60
 10803  004B6E                     __ptext60:
 10804                           	callstack 0
 10805  004B6E                     _I2C_DO_RESET:
 10806                           	callstack 19
 10807  004B6E                     
 10808                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 10809  004B6E  0101               	movlb	1	; () banked
 10810  004B70  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
 10811  004B72                     
 10812                           ; BSR set to: 1
 10813                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 10814  004B72  0E00               	movlw	0
 10815  004B74  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 10816  004B76                     
 10817                           ; BSR set to: 1
 10818                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 10819  004B76  0E0E               	movlw	14
 10820  004B78                     
 10821                           ; BSR set to: 1
 10822  004B78  0012               	return		;funcret
 10823  004B7A                     __end_of_I2C_DO_RESET:
 10824                           	callstack 0
 10825                           
 10826 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 10827 ;; Defined at:
 10828 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;		None
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;		None
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      enum E3101
 10835 ;; Registers used:
 10836 ;;		wreg, cstack
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;Total ram usage:        0 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; Hardware stack levels required when called:    5
 10849 ;; This function calls:
 10850 ;;		_I2C_MasterSendNack
 10851 ;; This function is called by:
 10852 ;;		_I2C_DO_RX
 10853 ;;		_I2C_MasterFsm
 10854 ;; This function uses a non-reentrant model
 10855 ;;
 10856                           
 10857                           	psect	text61
 10858  004BE8                     __ptext61:
 10859                           	callstack 0
 10860  004BE8                     _I2C_DO_RX_NACK_RESTART:
 10861                           	callstack 18
 10862  004BE8                     
 10863                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 10864  004BE8  EC17  F026         	call	_I2C_MasterSendNack	;wreg free
 10865  004BEC                     
 10866                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 10867  004BEC  0E09               	movlw	9
 10868  004BEE  0012               	return		;funcret
 10869  004BF0                     __end_of_I2C_DO_RX_NACK_RESTART:
 10870                           	callstack 0
 10871                           
 10872 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 10873 ;; Defined at:
 10874 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 10875 ;; Parameters:    Size  Location     Type
 10876 ;;		None
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;		None
 10879 ;; Return value:  Size  Location     Type
 10880 ;;                  1    wreg      enum E3101
 10881 ;; Registers used:
 10882 ;;		wreg, cstack
 10883 ;; Tracked objects:
 10884 ;;		On entry : 0/0
 10885 ;;		On exit  : 0/0
 10886 ;;		Unchanged: 0/0
 10887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10892 ;;Total ram usage:        0 bytes
 10893 ;; Hardware stack levels used:    1
 10894 ;; Hardware stack levels required when called:    5
 10895 ;; This function calls:
 10896 ;;		_I2C_MasterSendNack
 10897 ;; This function is called by:
 10898 ;;		_I2C_DO_RX
 10899 ;;		_I2C_MasterFsm
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text62
 10904  004BF0                     __ptext62:
 10905                           	callstack 0
 10906  004BF0                     _I2C_DO_RX_NACK_STOP:
 10907                           	callstack 18
 10908  004BF0                     
 10909                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 10910  004BF0  EC17  F026         	call	_I2C_MasterSendNack	;wreg free
 10911  004BF4                     
 10912                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 10913  004BF4  0E0A               	movlw	10
 10914  004BF6  0012               	return		;funcret
 10915  004BF8                     __end_of_I2C_DO_RX_NACK_STOP:
 10916                           	callstack 0
 10917                           
 10918 ;; *************** function _I2C_DO_RX_ACK *****************
 10919 ;; Defined at:
 10920 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;		None
 10923 ;; Auto vars:     Size  Location     Type
 10924 ;;		None
 10925 ;; Return value:  Size  Location     Type
 10926 ;;                  1    wreg      enum E3101
 10927 ;; Registers used:
 10928 ;;		wreg, cstack
 10929 ;; Tracked objects:
 10930 ;;		On entry : 0/0
 10931 ;;		On exit  : 0/0
 10932 ;;		Unchanged: 0/0
 10933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10938 ;;Total ram usage:        0 bytes
 10939 ;; Hardware stack levels used:    1
 10940 ;; Hardware stack levels required when called:    5
 10941 ;; This function calls:
 10942 ;;		_I2C_MasterSendAck
 10943 ;; This function is called by:
 10944 ;;		_I2C_MasterFsm
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948                           	psect	text63
 10949  004BF8                     __ptext63:
 10950                           	callstack 0
 10951  004BF8                     _I2C_DO_RX_ACK:
 10952                           	callstack 18
 10953  004BF8                     
 10954                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 10955  004BF8  EC14  F026         	call	_I2C_MasterSendAck	;wreg free
 10956  004BFC                     
 10957                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 10958  004BFC  0E05               	movlw	5
 10959  004BFE  0012               	return		;funcret
 10960  004C00                     __end_of_I2C_DO_RX_ACK:
 10961                           	callstack 0
 10962                           
 10963 ;; *************** function _I2C_DO_SEND_STOP *****************
 10964 ;; Defined at:
 10965 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 10966 ;; Parameters:    Size  Location     Type
 10967 ;;		None
 10968 ;; Auto vars:     Size  Location     Type
 10969 ;;		None
 10970 ;; Return value:  Size  Location     Type
 10971 ;;                  1    wreg      enum E3101
 10972 ;; Registers used:
 10973 ;;		wreg, cstack
 10974 ;; Tracked objects:
 10975 ;;		On entry : 0/0
 10976 ;;		On exit  : 0/0
 10977 ;;		Unchanged: 0/0
 10978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10983 ;;Total ram usage:        0 bytes
 10984 ;; Hardware stack levels used:    1
 10985 ;; Hardware stack levels required when called:    5
 10986 ;; This function calls:
 10987 ;;		_I2C_MasterStop
 10988 ;; This function is called by:
 10989 ;;		_I2C_DO_TX
 10990 ;;		_I2C_DO_TX_EMPTY
 10991 ;;		_I2C_DO_ADDRESS_NACK
 10992 ;;		_I2C_MasterFsm
 10993 ;; This function uses a non-reentrant model
 10994 ;;
 10995                           
 10996                           	psect	text64
 10997  004C00                     __ptext64:
 10998                           	callstack 0
 10999  004C00                     _I2C_DO_SEND_STOP:
 11000                           	callstack 17
 11001  004C00                     
 11002                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 11003  004C00  EC2C  F026         	call	_I2C_MasterStop	;wreg free
 11004  004C04                     
 11005                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 11006  004C04  0E00               	movlw	0
 11007  004C06  0012               	return		;funcret
 11008  004C08                     __end_of_I2C_DO_SEND_STOP:
 11009                           	callstack 0
 11010                           
 11011 ;; *************** function _I2C_DO_SEND_RESTART *****************
 11012 ;; Defined at:
 11013 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 11014 ;; Parameters:    Size  Location     Type
 11015 ;;		None
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;		None
 11018 ;; Return value:  Size  Location     Type
 11019 ;;                  1    wreg      enum E3101
 11020 ;; Registers used:
 11021 ;;		wreg, cstack
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11031 ;;Total ram usage:        0 bytes
 11032 ;; Hardware stack levels used:    1
 11033 ;; Hardware stack levels required when called:    5
 11034 ;; This function calls:
 11035 ;;		_I2C_MasterEnableRestart
 11036 ;; This function is called by:
 11037 ;;		_I2C_DO_TX_EMPTY
 11038 ;;		_I2C_DO_ADDRESS_NACK
 11039 ;;		_I2C_MasterFsm
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text65
 11044  004C08                     __ptext65:
 11045                           	callstack 0
 11046  004C08                     _I2C_DO_SEND_RESTART:
 11047                           	callstack 17
 11048  004C08                     
 11049                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 11050  004C08  EC2E  F026         	call	_I2C_MasterEnableRestart	;wreg free
 11051  004C0C                     
 11052                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 11053  004C0C  0E01               	movlw	1
 11054  004C0E  0012               	return		;funcret
 11055  004C10                     __end_of_I2C_DO_SEND_RESTART:
 11056                           	callstack 0
 11057                           
 11058 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 11059 ;; Defined at:
 11060 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;		None
 11063 ;; Auto vars:     Size  Location     Type
 11064 ;;		None
 11065 ;; Return value:  Size  Location     Type
 11066 ;;                  1    wreg      enum E3101
 11067 ;; Registers used:
 11068 ;;		wreg, cstack
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;Total ram usage:        0 bytes
 11079 ;; Hardware stack levels used:    1
 11080 ;; Hardware stack levels required when called:    5
 11081 ;; This function calls:
 11082 ;;		_I2C_MasterEnableRestart
 11083 ;; This function is called by:
 11084 ;;		_I2C_DO_TX
 11085 ;;		_I2C_MasterFsm
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           	psect	text66
 11090  004C10                     __ptext66:
 11091                           	callstack 0
 11092  004C10                     _I2C_DO_SEND_RESTART_WRITE:
 11093                           	callstack 17
 11094  004C10                     
 11095                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 11096  004C10  EC2E  F026         	call	_I2C_MasterEnableRestart	;wreg free
 11097  004C14                     
 11098                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 11099  004C14  0E02               	movlw	2
 11100  004C16  0012               	return		;funcret
 11101  004C18                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 11102                           	callstack 0
 11103                           
 11104 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 11105 ;; Defined at:
 11106 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;		None
 11109 ;; Auto vars:     Size  Location     Type
 11110 ;;		None
 11111 ;; Return value:  Size  Location     Type
 11112 ;;                  1    wreg      enum E3101
 11113 ;; Registers used:
 11114 ;;		wreg, cstack
 11115 ;; Tracked objects:
 11116 ;;		On entry : 0/0
 11117 ;;		On exit  : 0/0
 11118 ;;		Unchanged: 0/0
 11119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11124 ;;Total ram usage:        0 bytes
 11125 ;; Hardware stack levels used:    1
 11126 ;; Hardware stack levels required when called:    5
 11127 ;; This function calls:
 11128 ;;		_I2C_MasterEnableRestart
 11129 ;; This function is called by:
 11130 ;;		_I2C_DO_TX
 11131 ;;		_I2C_MasterFsm
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           	psect	text67
 11136  004C18                     __ptext67:
 11137                           	callstack 0
 11138  004C18                     _I2C_DO_SEND_RESTART_READ:
 11139                           	callstack 17
 11140  004C18                     
 11141                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 11142  004C18  EC2E  F026         	call	_I2C_MasterEnableRestart	;wreg free
 11143  004C1C                     
 11144                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 11145  004C1C  0E01               	movlw	1
 11146  004C1E  0012               	return		;funcret
 11147  004C20                     __end_of_I2C_DO_SEND_RESTART_READ:
 11148                           	callstack 0
 11149                           
 11150 ;; *************** function _I2C_DO_RCEN *****************
 11151 ;; Defined at:
 11152 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;		None
 11155 ;; Auto vars:     Size  Location     Type
 11156 ;;		None
 11157 ;; Return value:  Size  Location     Type
 11158 ;;                  1    wreg      enum E3101
 11159 ;; Registers used:
 11160 ;;		wreg, cstack
 11161 ;; Tracked objects:
 11162 ;;		On entry : 0/0
 11163 ;;		On exit  : 0/0
 11164 ;;		Unchanged: 0/0
 11165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11170 ;;Total ram usage:        0 bytes
 11171 ;; Hardware stack levels used:    1
 11172 ;; Hardware stack levels required when called:    5
 11173 ;; This function calls:
 11174 ;;		_I2C_MasterStartRx
 11175 ;; This function is called by:
 11176 ;;		_I2C_MasterFsm
 11177 ;; This function uses a non-reentrant model
 11178 ;;
 11179                           
 11180                           	psect	text68
 11181  004B7A                     __ptext68:
 11182                           	callstack 0
 11183  004B7A                     _I2C_DO_RCEN:
 11184                           	callstack 18
 11185  004B7A                     
 11186                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 11187  004B7A  0101               	movlb	1	; () banked
 11188  004B7C  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 11189  004B7E                     
 11190                           ; BSR set to: 1
 11191                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 11192  004B7E  EC26  F026         	call	_I2C_MasterStartRx	;wreg free
 11193  004B82                     
 11194                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 11195  004B82  0E04               	movlw	4
 11196  004B84  0012               	return		;funcret
 11197  004B86                     __end_of_I2C_DO_RCEN:
 11198                           	callstack 0
 11199                           
 11200 ;; *************** function _I2C_DO_RX *****************
 11201 ;; Defined at:
 11202 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;		None
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;		None
 11207 ;; Return value:  Size  Location     Type
 11208 ;;                  1    wreg      enum E3101
 11209 ;; Registers used:
 11210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11218 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11220 ;;Total ram usage:        2 bytes
 11221 ;; Hardware stack levels used:    1
 11222 ;; Hardware stack levels required when called:    7
 11223 ;; This function calls:
 11224 ;;		Absolute function
 11225 ;;		_I2C_CallbackReturnReset
 11226 ;;		_I2C_CallbackReturnStop
 11227 ;;		_I2C_DO_RX_NACK_RESTART
 11228 ;;		_I2C_DO_RX_NACK_STOP
 11229 ;;		_I2C_MasterGetRxData
 11230 ;;		_I2C_MasterSendAck
 11231 ;;		_rd1RegCompleteHandler
 11232 ;;		_rd2RegCompleteHandler
 11233 ;;		_rdBlkRegCompleteHandler
 11234 ;;		_wr1RegCompleteHandler
 11235 ;;		_wr2RegCompleteHandler
 11236 ;; This function is called by:
 11237 ;;		_I2C_MasterFsm
 11238 ;; This function uses a non-reentrant model
 11239 ;;
 11240                           
 11241                           	psect	text69
 11242  003F30                     __ptext69:
 11243                           	callstack 0
 11244  003F30                     _I2C_DO_RX:
 11245                           	callstack 16
 11246  003F30                     
 11247                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 11248  003F30  EC24  F026         	call	_I2C_MasterGetRxData	;wreg free
 11249  003F34  C11D  FFD9         	movff	_I2C_Status+29,fsr2l
 11250  003F38  C11E  FFDA         	movff	_I2C_Status+30,fsr2h
 11251  003F3C  6EDF               	movwf	indf2,c
 11252  003F3E  0101               	movlb	1	; () banked
 11253  003F40  4B1D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11254  003F42  2B1E               	incf	(_I2C_Status+30)& (0+255),f,b
 11255  003F44                     
 11256                           ; BSR set to: 1
 11257                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 11258  003F44  071F               	decf	(_I2C_Status+31)& (0+255),f,b
 11259  003F46  A0D8               	btfss	status,0,c
 11260  003F48  0720               	decf	(_I2C_Status+32)& (0+255),f,b
 11261  003F4A  511F               	movf	(_I2C_Status+31)& (0+255),w,b
 11262  003F4C  1120               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11263  003F4E  B4D8               	btfsc	status,2,c
 11264  003F50  EFAC  F01F         	goto	u3101
 11265  003F54  EFAE  F01F         	goto	u3100
 11266  003F58                     u3101:
 11267  003F58  EFB3  F01F         	goto	l294
 11268  003F5C                     u3100:
 11269  003F5C                     
 11270                           ; BSR set to: 1
 11271                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 11272  003F5C  EC14  F026         	call	_I2C_MasterSendAck	;wreg free
 11273  003F60                     
 11274                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 11275  003F60  0E05               	movlw	5
 11276  003F62  EFEA  F01F         	goto	l295
 11277  003F66                     l294:
 11278                           
 11279                           ; BSR set to: 1
 11280                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 11281  003F66  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
 11282                           
 11283                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11284  003F68  EFBE  F01F         	goto	l4209
 11285  003F6C                     l4199:
 11286                           
 11287                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 11288  003F6C  ECF4  F025         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 11289  003F70  EFEA  F01F         	goto	l295
 11290  003F74                     l4203:
 11291                           
 11292                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 11293  003F74  ECF8  F025         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 11294  003F78  EFEA  F01F         	goto	l295
 11295  003F7C                     l4209:
 11296                           
 11297                           ; BSR set to: 1
 11298  003F7C  C10C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11299  003F80  C10D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11300  003F84  D802               	call	u3118
 11301  003F86  EFCE  F01F         	goto	u3119
 11302  003F8A                     u3118:
 11303  003F8A  0005               	push	
 11304  003F8C  6EFA               	movwf	pclath,c
 11305  003F8E  5100               	movf	_I2C_Status& (0+255),w,b
 11306  003F90  6EFD               	movwf	tosl,c
 11307  003F92  5101               	movf	(_I2C_Status+1)& (0+255),w,b
 11308  003F94  6EFE               	movwf	tosh,c
 11309  003F96  6AFF               	clrf	tosu,c
 11310  003F98  50FA               	movf	pclath,w,c
 11311  003F9A  0012               	return		;indir
 11312  003F9C                     u3119:
 11313  003F9C  6E10               	movwf	??_I2C_DO_RX^0,c
 11314  003F9E  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
 11315                           
 11316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11317                           ; Switch size 1, requested type "simple"
 11318                           ; Number of cases is 1, Range of values is 0 to 0
 11319                           ; switch strategies available:
 11320                           ; Name         Instructions Cycles
 11321                           ; simple_byte            4     3 (average)
 11322                           ;	Chosen strategy is simple_byte
 11323  003FA0  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
 11324  003FA2  0A00               	xorlw	0	; case 0
 11325  003FA4  B4D8               	btfsc	status,2,c
 11326  003FA6  EFD7  F01F         	goto	l7809
 11327  003FAA  EFBA  F01F         	goto	l4203
 11328  003FAE                     l7809:
 11329                           
 11330                           ; Switch size 1, requested type "simple"
 11331                           ; Number of cases is 4, Range of values is 1 to 4
 11332                           ; switch strategies available:
 11333                           ; Name         Instructions Cycles
 11334                           ; simple_byte           13     7 (average)
 11335                           ;	Chosen strategy is simple_byte
 11336  003FAE  5010               	movf	??_I2C_DO_RX^0,w,c
 11337  003FB0  0A01               	xorlw	1	; case 1
 11338  003FB2  B4D8               	btfsc	status,2,c
 11339  003FB4  EFBA  F01F         	goto	l4203
 11340  003FB8  0A03               	xorlw	3	; case 2
 11341  003FBA  B4D8               	btfsc	status,2,c
 11342  003FBC  EFB6  F01F         	goto	l4199
 11343  003FC0  0A01               	xorlw	1	; case 3
 11344  003FC2  B4D8               	btfsc	status,2,c
 11345  003FC4  EFB6  F01F         	goto	l4199
 11346  003FC8  0A07               	xorlw	7	; case 4
 11347  003FCA  B4D8               	btfsc	status,2,c
 11348  003FCC  EFBA  F01F         	goto	l4203
 11349  003FD0  EFBA  F01F         	goto	l4203
 11350  003FD4                     l295:
 11351  003FD4  0012               	return		;funcret
 11352  003FD6                     __end_of_I2C_DO_RX:
 11353                           	callstack 0
 11354                           
 11355 ;; *************** function _I2C_DO_TX *****************
 11356 ;; Defined at:
 11357 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;		None
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      enum E3101
 11364 ;; Registers used:
 11365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;Total ram usage:        2 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; Hardware stack levels required when called:    7
 11378 ;; This function calls:
 11379 ;;		Absolute function
 11380 ;;		_I2C_CallbackReturnReset
 11381 ;;		_I2C_CallbackReturnStop
 11382 ;;		_I2C_DO_SEND_RESTART_READ
 11383 ;;		_I2C_DO_SEND_RESTART_WRITE
 11384 ;;		_I2C_DO_SEND_STOP
 11385 ;;		_I2C_MasterIsNack
 11386 ;;		_I2C_MasterSendTxData
 11387 ;;		_rd1RegCompleteHandler
 11388 ;;		_rd2RegCompleteHandler
 11389 ;;		_rdBlkRegCompleteHandler
 11390 ;;		_wr1RegCompleteHandler
 11391 ;;		_wr2RegCompleteHandler
 11392 ;; This function is called by:
 11393 ;;		_I2C_MasterFsm
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           	psect	text70
 11398  003AF6                     __ptext70:
 11399                           	callstack 0
 11400  003AF6                     _I2C_DO_TX:
 11401                           	callstack 16
 11402  003AF6                     
 11403                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 11404  003AF6  EC95  F025         	call	_I2C_MasterIsNack	;wreg free
 11405  003AFA  0900               	iorlw	0
 11406  003AFC  B4D8               	btfsc	status,2,c
 11407  003AFE  EF83  F01D         	goto	u3071
 11408  003B02  EF85  F01D         	goto	u3070
 11409  003B06                     u3071:
 11410  003B06  EFC0  F01D         	goto	l278
 11411  003B0A                     u3070:
 11412  003B0A  EF93  F01D         	goto	l4169
 11413  003B0E                     l4155:
 11414                           
 11415                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 11416  003B0E  EC0C  F026         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 11417  003B12  EFDC  F01D         	goto	l281
 11418  003B16                     l4159:
 11419                           
 11420                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 11421  003B16  EC08  F026         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 11422  003B1A  EFDC  F01D         	goto	l281
 11423  003B1E                     l4163:
 11424                           
 11425                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 11426  003B1E  EC00  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 11427  003B22  EFDC  F01D         	goto	l281
 11428  003B26                     l4169:
 11429  003B26  C112  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 11430  003B2A  C113  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 11431  003B2E  D802               	call	u3088
 11432  003B30  EFA4  F01D         	goto	u3089
 11433  003B34                     u3088:
 11434  003B34  0005               	push	
 11435  003B36  6EFA               	movwf	pclath,c
 11436  003B38  0101               	movlb	1	; () banked
 11437  003B3A  5106               	movf	(_I2C_Status+6)& (0+255),w,b
 11438  003B3C  6EFD               	movwf	tosl,c
 11439  003B3E  5107               	movf	(_I2C_Status+7)& (0+255),w,b
 11440  003B40  6EFE               	movwf	tosh,c
 11441  003B42  6AFF               	clrf	tosu,c
 11442  003B44  50FA               	movf	pclath,w,c
 11443  003B46  0012               	return		;indir
 11444  003B48                     u3089:
 11445  003B48  6E10               	movwf	??_I2C_DO_TX^0,c
 11446  003B4A  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
 11447                           
 11448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11449                           ; Switch size 1, requested type "simple"
 11450                           ; Number of cases is 1, Range of values is 0 to 0
 11451                           ; switch strategies available:
 11452                           ; Name         Instructions Cycles
 11453                           ; simple_byte            4     3 (average)
 11454                           ;	Chosen strategy is simple_byte
 11455  003B4C  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
 11456  003B4E  0A00               	xorlw	0	; case 0
 11457  003B50  B4D8               	btfsc	status,2,c
 11458  003B52  EFAD  F01D         	goto	l7811
 11459  003B56  EF8F  F01D         	goto	l4163
 11460  003B5A                     l7811:
 11461                           
 11462                           ; Switch size 1, requested type "simple"
 11463                           ; Number of cases is 4, Range of values is 1 to 4
 11464                           ; switch strategies available:
 11465                           ; Name         Instructions Cycles
 11466                           ; simple_byte           13     7 (average)
 11467                           ;	Chosen strategy is simple_byte
 11468  003B5A  5010               	movf	??_I2C_DO_TX^0,w,c
 11469  003B5C  0A01               	xorlw	1	; case 1
 11470  003B5E  B4D8               	btfsc	status,2,c
 11471  003B60  EF8F  F01D         	goto	l4163
 11472  003B64  0A03               	xorlw	3	; case 2
 11473  003B66  B4D8               	btfsc	status,2,c
 11474  003B68  EF87  F01D         	goto	l4155
 11475  003B6C  0A01               	xorlw	1	; case 3
 11476  003B6E  B4D8               	btfsc	status,2,c
 11477  003B70  EF8B  F01D         	goto	l4159
 11478  003B74  0A07               	xorlw	7	; case 4
 11479  003B76  B4D8               	btfsc	status,2,c
 11480  003B78  EF8F  F01D         	goto	l4163
 11481  003B7C  EF8F  F01D         	goto	l4163
 11482  003B80                     l278:
 11483                           
 11484                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 11485  003B80  0101               	movlb	1	; () banked
 11486  003B82  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 11487  003B84                     
 11488                           ; BSR set to: 1
 11489                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 11490  003B84  C11D  FFD9         	movff	_I2C_Status+29,fsr2l
 11491  003B88  C11E  FFDA         	movff	_I2C_Status+30,fsr2h
 11492  003B8C  4B1D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11493  003B8E  2B1E               	incf	(_I2C_Status+30)& (0+255),f,b
 11494  003B90  50DF               	movf	indf2,w,c
 11495  003B92  EC10  F026         	call	_I2C_MasterSendTxData
 11496  003B96                     
 11497                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 11498  003B96  0101               	movlb	1	; () banked
 11499  003B98  071F               	decf	(_I2C_Status+31)& (0+255),f,b
 11500  003B9A  A0D8               	btfss	status,0,c
 11501  003B9C  0720               	decf	(_I2C_Status+32)& (0+255),f,b
 11502  003B9E  511F               	movf	(_I2C_Status+31)& (0+255),w,b
 11503  003BA0  1120               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11504  003BA2  A4D8               	btfss	status,2,c
 11505  003BA4  EFD6  F01D         	goto	u3091
 11506  003BA8  EFD8  F01D         	goto	u3090
 11507  003BAC                     u3091:
 11508  003BAC  EFDB  F01D         	goto	l4177
 11509  003BB0                     u3090:
 11510  003BB0                     
 11511                           ; BSR set to: 1
 11512  003BB0  0E06               	movlw	6
 11513  003BB2  EFDC  F01D         	goto	l281
 11514  003BB6                     l4177:
 11515                           
 11516                           ; BSR set to: 1
 11517  003BB6  0E03               	movlw	3
 11518  003BB8                     l281:
 11519  003BB8  0012               	return		;funcret
 11520  003BBA                     __end_of_I2C_DO_TX:
 11521                           	callstack 0
 11522                           
 11523 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 11524 ;; Defined at:
 11525 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;		None
 11528 ;; Auto vars:     Size  Location     Type
 11529 ;;		None
 11530 ;; Return value:  Size  Location     Type
 11531 ;;                  1    wreg      enum E3101
 11532 ;; Registers used:
 11533 ;;		wreg, status,2, status,0, cstack
 11534 ;; Tracked objects:
 11535 ;;		On entry : 0/0
 11536 ;;		On exit  : 0/0
 11537 ;;		Unchanged: 0/0
 11538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11543 ;;Total ram usage:        0 bytes
 11544 ;; Hardware stack levels used:    1
 11545 ;; Hardware stack levels required when called:    5
 11546 ;; This function calls:
 11547 ;;		_I2C_MasterSendTxData
 11548 ;; This function is called by:
 11549 ;;		_I2C_MasterFsm
 11550 ;; This function uses a non-reentrant model
 11551 ;;
 11552                           
 11553                           	psect	text71
 11554  004B4E                     __ptext71:
 11555                           	callstack 0
 11556  004B4E                     _I2C_DO_SEND_ADR_WRITE:
 11557                           	callstack 18
 11558  004B4E                     
 11559                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 11560  004B4E  0101               	movlb	1	; () banked
 11561  004B50  8123               	bsf	(_I2C_Status+35)& (0+255),0,b
 11562  004B52                     
 11563                           ; BSR set to: 1
 11564                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
 11565  004B52  511C               	movf	(_I2C_Status+28)& (0+255),w,b
 11566  004B54  251C               	addwf	(_I2C_Status+28)& (0+255),w,b
 11567  004B56  EC10  F026         	call	_I2C_MasterSendTxData
 11568  004B5A                     
 11569                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 11570  004B5A  0E03               	movlw	3
 11571  004B5C  0012               	return		;funcret
 11572  004B5E                     __end_of_I2C_DO_SEND_ADR_WRITE:
 11573                           	callstack 0
 11574                           
 11575 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 11576 ;; Defined at:
 11577 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 11578 ;; Parameters:    Size  Location     Type
 11579 ;;		None
 11580 ;; Auto vars:     Size  Location     Type
 11581 ;;		None
 11582 ;; Return value:  Size  Location     Type
 11583 ;;                  1    wreg      enum E3101
 11584 ;; Registers used:
 11585 ;;		wreg, status,0, cstack
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/0
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11595 ;;Total ram usage:        0 bytes
 11596 ;; Hardware stack levels used:    1
 11597 ;; Hardware stack levels required when called:    5
 11598 ;; This function calls:
 11599 ;;		_I2C_MasterSendTxData
 11600 ;; This function is called by:
 11601 ;;		_I2C_MasterFsm
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           	psect	text72
 11606  004B5E                     __ptext72:
 11607                           	callstack 0
 11608  004B5E                     _I2C_DO_SEND_ADR_READ:
 11609                           	callstack 18
 11610  004B5E                     
 11611                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 11612  004B5E  0101               	movlb	1	; () banked
 11613  004B60  8123               	bsf	(_I2C_Status+35)& (0+255),0,b
 11614  004B62                     
 11615                           ; BSR set to: 1
 11616                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
 11617  004B62  80D8               	bsf	status,0,c
 11618  004B64  351C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 11619  004B66  EC10  F026         	call	_I2C_MasterSendTxData
 11620  004B6A                     
 11621                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 11622  004B6A  0E05               	movlw	5
 11623  004B6C  0012               	return		;funcret
 11624  004B6E                     __end_of_I2C_DO_SEND_ADR_READ:
 11625                           	callstack 0
 11626                           
 11627 ;; *************** function _I2C_DO_IDLE *****************
 11628 ;; Defined at:
 11629 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 11630 ;; Parameters:    Size  Location     Type
 11631 ;;		None
 11632 ;; Auto vars:     Size  Location     Type
 11633 ;;		None
 11634 ;; Return value:  Size  Location     Type
 11635 ;;                  1    wreg      enum E3101
 11636 ;; Registers used:
 11637 ;;		wreg, status,2
 11638 ;; Tracked objects:
 11639 ;;		On entry : 0/0
 11640 ;;		On exit  : 0/0
 11641 ;;		Unchanged: 0/0
 11642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11647 ;;Total ram usage:        0 bytes
 11648 ;; Hardware stack levels used:    1
 11649 ;; Hardware stack levels required when called:    4
 11650 ;; This function calls:
 11651 ;;		Nothing
 11652 ;; This function is called by:
 11653 ;;		_I2C_MasterFsm
 11654 ;; This function uses a non-reentrant model
 11655 ;;
 11656                           
 11657                           	psect	text73
 11658  004B86                     __ptext73:
 11659                           	callstack 0
 11660  004B86                     _I2C_DO_IDLE:
 11661                           	callstack 19
 11662  004B86                     
 11663                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 11664  004B86  0101               	movlb	1	; () banked
 11665  004B88  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
 11666  004B8A                     
 11667                           ; BSR set to: 1
 11668                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 11669  004B8A  0E00               	movlw	0
 11670  004B8C  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 11671  004B8E                     
 11672                           ; BSR set to: 1
 11673                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 11674  004B8E  0E0E               	movlw	14
 11675  004B90                     
 11676                           ; BSR set to: 1
 11677  004B90  0012               	return		;funcret
 11678  004B92                     __end_of_I2C_DO_IDLE:
 11679                           	callstack 0
 11680                           
 11681 ;; *************** function _I2C_DO_TX_EMPTY *****************
 11682 ;; Defined at:
 11683 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;		None
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;		None
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  1    wreg      enum E3101
 11690 ;; Registers used:
 11691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11701 ;;Total ram usage:        2 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:    7
 11704 ;; This function calls:
 11705 ;;		Absolute function
 11706 ;;		_I2C_CallbackReturnReset
 11707 ;;		_I2C_CallbackReturnStop
 11708 ;;		_I2C_DO_SEND_RESTART
 11709 ;;		_I2C_DO_SEND_STOP
 11710 ;;		_I2C_MasterSetIrq
 11711 ;;		_rd1RegCompleteHandler
 11712 ;;		_rd2RegCompleteHandler
 11713 ;;		_rdBlkRegCompleteHandler
 11714 ;;		_wr1RegCompleteHandler
 11715 ;;		_wr2RegCompleteHandler
 11716 ;; This function is called by:
 11717 ;;		_I2C_MasterFsm
 11718 ;; This function uses a non-reentrant model
 11719 ;;
 11720                           
 11721                           	psect	text74
 11722  0040FA                     __ptext74:
 11723                           	callstack 0
 11724  0040FA                     _I2C_DO_TX_EMPTY:
 11725                           	callstack 16
 11726  0040FA                     
 11727                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 11728  0040FA  0101               	movlb	1	; () banked
 11729  0040FC  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
 11730                           
 11731                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11732  0040FE  EF8E  F020         	goto	l4243
 11733  004102                     l4227:
 11734                           
 11735                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 11736  004102  EC04  F026         	call	_I2C_DO_SEND_RESTART	;wreg free
 11737  004106  EFBA  F020         	goto	l312
 11738  00410A                     l4231:
 11739                           
 11740                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 11741  00410A  EC22  F026         	call	_I2C_MasterSetIrq	;wreg free
 11742  00410E                     
 11743                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 11744  00410E  0E03               	movlw	3
 11745  004110  EFBA  F020         	goto	l312
 11746  004114                     l4237:
 11747                           
 11748                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 11749  004114  EC00  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 11750  004118  EFBA  F020         	goto	l312
 11751  00411C                     l4243:
 11752                           
 11753                           ; BSR set to: 1
 11754  00411C  C10C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11755  004120  C10D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11756  004124  D802               	call	u3128
 11757  004126  EF9E  F020         	goto	u3129
 11758  00412A                     u3128:
 11759  00412A  0005               	push	
 11760  00412C  6EFA               	movwf	pclath,c
 11761  00412E  5100               	movf	_I2C_Status& (0+255),w,b
 11762  004130  6EFD               	movwf	tosl,c
 11763  004132  5101               	movf	(_I2C_Status+1)& (0+255),w,b
 11764  004134  6EFE               	movwf	tosh,c
 11765  004136  6AFF               	clrf	tosu,c
 11766  004138  50FA               	movf	pclath,w,c
 11767  00413A  0012               	return		;indir
 11768  00413C                     u3129:
 11769  00413C  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
 11770  00413E  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 11771                           
 11772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11773                           ; Switch size 1, requested type "simple"
 11774                           ; Number of cases is 1, Range of values is 0 to 0
 11775                           ; switch strategies available:
 11776                           ; Name         Instructions Cycles
 11777                           ; simple_byte            4     3 (average)
 11778                           ;	Chosen strategy is simple_byte
 11779  004140  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 11780  004142  0A00               	xorlw	0	; case 0
 11781  004144  B4D8               	btfsc	status,2,c
 11782  004146  EFA7  F020         	goto	l7813
 11783  00414A  EF8A  F020         	goto	l4237
 11784  00414E                     l7813:
 11785                           
 11786                           ; Switch size 1, requested type "simple"
 11787                           ; Number of cases is 4, Range of values is 1 to 4
 11788                           ; switch strategies available:
 11789                           ; Name         Instructions Cycles
 11790                           ; simple_byte           13     7 (average)
 11791                           ;	Chosen strategy is simple_byte
 11792  00414E  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 11793  004150  0A01               	xorlw	1	; case 1
 11794  004152  B4D8               	btfsc	status,2,c
 11795  004154  EF8A  F020         	goto	l4237
 11796  004158  0A03               	xorlw	3	; case 2
 11797  00415A  B4D8               	btfsc	status,2,c
 11798  00415C  EF81  F020         	goto	l4227
 11799  004160  0A01               	xorlw	1	; case 3
 11800  004162  B4D8               	btfsc	status,2,c
 11801  004164  EF81  F020         	goto	l4227
 11802  004168  0A07               	xorlw	7	; case 4
 11803  00416A  B4D8               	btfsc	status,2,c
 11804  00416C  EF85  F020         	goto	l4231
 11805  004170  EF8A  F020         	goto	l4237
 11806  004174                     l312:
 11807  004174  0012               	return		;funcret
 11808  004176                     __end_of_I2C_DO_TX_EMPTY:
 11809                           	callstack 0
 11810                           
 11811 ;; *************** function _I2C_MasterSetIrq *****************
 11812 ;; Defined at:
 11813 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 11814 ;; Parameters:    Size  Location     Type
 11815 ;;		None
 11816 ;; Auto vars:     Size  Location     Type
 11817 ;;		None
 11818 ;; Return value:  Size  Location     Type
 11819 ;;                  1    wreg      void 
 11820 ;; Registers used:
 11821 ;;		None
 11822 ;; Tracked objects:
 11823 ;;		On entry : 0/0
 11824 ;;		On exit  : 0/0
 11825 ;;		Unchanged: 0/0
 11826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11831 ;;Total ram usage:        0 bytes
 11832 ;; Hardware stack levels used:    1
 11833 ;; Hardware stack levels required when called:    4
 11834 ;; This function calls:
 11835 ;;		Nothing
 11836 ;; This function is called by:
 11837 ;;		_I2C_DO_TX_EMPTY
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841                           	psect	text75
 11842  004C44                     __ptext75:
 11843                           	callstack 0
 11844  004C44                     _I2C_MasterSetIrq:
 11845                           	callstack 18
 11846  004C44                     
 11847                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 11848  004C44  869E               	bsf	158,3,c	;volatile
 11849  004C46  0012               	return		;funcret
 11850  004C48                     __end_of_I2C_MasterSetIrq:
 11851                           	callstack 0
 11852                           
 11853 ;; *************** function _I2C_MasterIsNack *****************
 11854 ;; Defined at:
 11855 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;		None
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;		None
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  1    wreg      _Bool 
 11862 ;; Registers used:
 11863 ;;		wreg
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11873 ;;Total ram usage:        0 bytes
 11874 ;; Hardware stack levels used:    1
 11875 ;; Hardware stack levels required when called:    4
 11876 ;; This function calls:
 11877 ;;		Nothing
 11878 ;; This function is called by:
 11879 ;;		_I2C_MasterFsm
 11880 ;;		_I2C_DO_TX
 11881 ;; This function uses a non-reentrant model
 11882 ;;
 11883                           
 11884                           	psect	text76
 11885  004B2A                     __ptext76:
 11886                           	callstack 0
 11887  004B2A                     _I2C_MasterIsNack:
 11888                           	callstack 19
 11889  004B2A                     
 11890                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 11891  004B2A  BCC5               	btfsc	197,6,c	;volatile
 11892  004B2C  EF9A  F025         	goto	u3031
 11893  004B30  EF9D  F025         	goto	u3030
 11894  004B34                     u3031:
 11895  004B34  0E01               	movlw	1
 11896  004B36  EF9E  F025         	goto	u3036
 11897  004B3A                     u3030:
 11898  004B3A  0E00               	movlw	0
 11899  004B3C                     u3036:
 11900  004B3C  0012               	return		;funcret
 11901  004B3E                     __end_of_I2C_MasterIsNack:
 11902                           	callstack 0
 11903                           
 11904 ;; *************** function _I2C_MasterSendTxData *****************
 11905 ;; Defined at:
 11906 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 11907 ;; Parameters:    Size  Location     Type
 11908 ;;  data            1    wreg     unsigned char 
 11909 ;; Auto vars:     Size  Location     Type
 11910 ;;  data            1    4[COMRAM] unsigned char 
 11911 ;; Return value:  Size  Location     Type
 11912 ;;                  1    wreg      void 
 11913 ;; Registers used:
 11914 ;;		wreg
 11915 ;; Tracked objects:
 11916 ;;		On entry : 0/0
 11917 ;;		On exit  : 0/0
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11924 ;;Total ram usage:        1 bytes
 11925 ;; Hardware stack levels used:    1
 11926 ;; Hardware stack levels required when called:    4
 11927 ;; This function calls:
 11928 ;;		Nothing
 11929 ;; This function is called by:
 11930 ;;		_I2C_DO_SEND_ADR_READ
 11931 ;;		_I2C_DO_SEND_ADR_WRITE
 11932 ;;		_I2C_DO_TX
 11933 ;; This function uses a non-reentrant model
 11934 ;;
 11935                           
 11936                           	psect	text77
 11937  004C20                     __ptext77:
 11938                           	callstack 0
 11939  004C20                     _I2C_MasterSendTxData:
 11940                           	callstack 18
 11941                           
 11942                           ;incstack = 0
 11943                           ;I2C_MasterSendTxData@data stored from wreg
 11944  004C20  6E05               	movwf	I2C_MasterSendTxData@data^0,c
 11945  004C22                     
 11946                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 11947  004C22  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 11948  004C26  0012               	return		;funcret
 11949  004C28                     __end_of_I2C_MasterSendTxData:
 11950                           	callstack 0
 11951                           
 11952 ;; *************** function _I2C_MasterSendAck *****************
 11953 ;; Defined at:
 11954 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;		None
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;		None
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  1    wreg      void 
 11961 ;; Registers used:
 11962 ;;		None
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 0/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11972 ;;Total ram usage:        0 bytes
 11973 ;; Hardware stack levels used:    1
 11974 ;; Hardware stack levels required when called:    4
 11975 ;; This function calls:
 11976 ;;		Nothing
 11977 ;; This function is called by:
 11978 ;;		_I2C_DO_RX
 11979 ;;		_I2C_DO_RX_ACK
 11980 ;; This function uses a non-reentrant model
 11981 ;;
 11982                           
 11983                           	psect	text78
 11984  004C28                     __ptext78:
 11985                           	callstack 0
 11986  004C28                     _I2C_MasterSendAck:
 11987                           	callstack 18
 11988  004C28                     
 11989                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 11990  004C28  9AC5               	bcf	197,5,c	;volatile
 11991                           
 11992                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 11993  004C2A  88C5               	bsf	197,4,c	;volatile
 11994  004C2C  0012               	return		;funcret
 11995  004C2E                     __end_of_I2C_MasterSendAck:
 11996                           	callstack 0
 11997                           
 11998 ;; *************** function _I2C_MasterGetRxData *****************
 11999 ;; Defined at:
 12000 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;		None
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;		None
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      unsigned char 
 12007 ;; Registers used:
 12008 ;;		wreg, status,2
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12018 ;;Total ram usage:        0 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    4
 12021 ;; This function calls:
 12022 ;;		Nothing
 12023 ;; This function is called by:
 12024 ;;		_I2C_DO_RX
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           	psect	text79
 12029  004C48                     __ptext79:
 12030                           	callstack 0
 12031  004C48                     _I2C_MasterGetRxData:
 12032                           	callstack 18
 12033  004C48                     
 12034                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 12035  004C48  50C9               	movf	201,w,c	;volatile
 12036  004C4A  0012               	return		;funcret
 12037  004C4C                     __end_of_I2C_MasterGetRxData:
 12038                           	callstack 0
 12039                           
 12040 ;; *************** function _I2C_MasterSendNack *****************
 12041 ;; Defined at:
 12042 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 12043 ;; Parameters:    Size  Location     Type
 12044 ;;		None
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;		None
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  1    wreg      void 
 12049 ;; Registers used:
 12050 ;;		None
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/0
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12060 ;;Total ram usage:        0 bytes
 12061 ;; Hardware stack levels used:    1
 12062 ;; Hardware stack levels required when called:    4
 12063 ;; This function calls:
 12064 ;;		Nothing
 12065 ;; This function is called by:
 12066 ;;		_I2C_DO_RX_NACK_STOP
 12067 ;;		_I2C_DO_RX_NACK_RESTART
 12068 ;; This function uses a non-reentrant model
 12069 ;;
 12070                           
 12071                           	psect	text80
 12072  004C2E                     __ptext80:
 12073                           	callstack 0
 12074  004C2E                     _I2C_MasterSendNack:
 12075                           	callstack 18
 12076  004C2E                     
 12077                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 12078  004C2E  8AC5               	bsf	197,5,c	;volatile
 12079                           
 12080                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 12081  004C30  88C5               	bsf	197,4,c	;volatile
 12082  004C32  0012               	return		;funcret
 12083  004C34                     __end_of_I2C_MasterSendNack:
 12084                           	callstack 0
 12085                           
 12086 ;; *************** function _I2C_MasterStartRx *****************
 12087 ;; Defined at:
 12088 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 12089 ;; Parameters:    Size  Location     Type
 12090 ;;		None
 12091 ;; Auto vars:     Size  Location     Type
 12092 ;;		None
 12093 ;; Return value:  Size  Location     Type
 12094 ;;                  1    wreg      void 
 12095 ;; Registers used:
 12096 ;;		None
 12097 ;; Tracked objects:
 12098 ;;		On entry : 0/0
 12099 ;;		On exit  : 0/0
 12100 ;;		Unchanged: 0/0
 12101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12106 ;;Total ram usage:        0 bytes
 12107 ;; Hardware stack levels used:    1
 12108 ;; Hardware stack levels required when called:    4
 12109 ;; This function calls:
 12110 ;;		Nothing
 12111 ;; This function is called by:
 12112 ;;		_I2C_DO_RCEN
 12113 ;; This function uses a non-reentrant model
 12114 ;;
 12115                           
 12116                           	psect	text81
 12117  004C4C                     __ptext81:
 12118                           	callstack 0
 12119  004C4C                     _I2C_MasterStartRx:
 12120                           	callstack 18
 12121  004C4C                     
 12122                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 12123  004C4C  86C5               	bsf	197,3,c	;volatile
 12124  004C4E  0012               	return		;funcret
 12125  004C50                     __end_of_I2C_MasterStartRx:
 12126                           	callstack 0
 12127                           
 12128 ;; *************** function _I2C_CallbackReturnReset *****************
 12129 ;; Defined at:
 12130 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 12131 ;; Parameters:    Size  Location     Type
 12132 ;;  funPtr          2   13[COMRAM] PTR void 
 12133 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12134 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12135 ;; Auto vars:     Size  Location     Type
 12136 ;;		None
 12137 ;; Return value:  Size  Location     Type
 12138 ;;                  1    wreg      enum E358
 12139 ;; Registers used:
 12140 ;;		wreg
 12141 ;; Tracked objects:
 12142 ;;		On entry : 0/0
 12143 ;;		On exit  : 0/0
 12144 ;;		Unchanged: 0/0
 12145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12150 ;;Total ram usage:        2 bytes
 12151 ;; Hardware stack levels used:    1
 12152 ;; Hardware stack levels required when called:    4
 12153 ;; This function calls:
 12154 ;;		Nothing
 12155 ;; This function is called by:
 12156 ;;		_I2C_Open
 12157 ;;		_I2C_DO_TX
 12158 ;;		_I2C_DO_RX
 12159 ;;		_I2C_DO_TX_EMPTY
 12160 ;;		_I2C_DO_ADDRESS_NACK
 12161 ;;		_I2C_DO_RX_EMPTY
 12162 ;; This function uses a non-reentrant model
 12163 ;;
 12164                           
 12165                           	psect	text82
 12166  004C50                     __ptext82:
 12167                           	callstack 0
 12168  004C50                     _I2C_CallbackReturnReset:
 12169                           	callstack 18
 12170  004C50                     
 12171                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 12172  004C50  0E05               	movlw	5
 12173  004C52  0012               	return		;funcret
 12174  004C54                     __end_of_I2C_CallbackReturnReset:
 12175                           	callstack 0
 12176                           
 12177 ;; *************** function _I2C_CallbackReturnStop *****************
 12178 ;; Defined at:
 12179 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 12180 ;; Parameters:    Size  Location     Type
 12181 ;;  funPtr          2   13[COMRAM] PTR void 
 12182 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12183 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12184 ;; Auto vars:     Size  Location     Type
 12185 ;;		None
 12186 ;; Return value:  Size  Location     Type
 12187 ;;                  1    wreg      enum E358
 12188 ;; Registers used:
 12189 ;;		wreg
 12190 ;; Tracked objects:
 12191 ;;		On entry : 0/0
 12192 ;;		On exit  : 0/0
 12193 ;;		Unchanged: 0/0
 12194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12199 ;;Total ram usage:        2 bytes
 12200 ;; Hardware stack levels used:    1
 12201 ;; Hardware stack levels required when called:    4
 12202 ;; This function calls:
 12203 ;;		Nothing
 12204 ;; This function is called by:
 12205 ;;		_I2C_Open
 12206 ;;		_I2C_SetCallback
 12207 ;;		_I2C_DO_TX
 12208 ;;		_I2C_DO_RX
 12209 ;;		_I2C_DO_TX_EMPTY
 12210 ;;		_I2C_DO_ADDRESS_NACK
 12211 ;;		_I2C_DO_RX_EMPTY
 12212 ;; This function uses a non-reentrant model
 12213 ;;
 12214                           
 12215                           	psect	text83
 12216  004C54                     __ptext83:
 12217                           	callstack 0
 12218  004C54                     _I2C_CallbackReturnStop:
 12219                           	callstack 18
 12220  004C54                     
 12221                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 12222  004C54  0E01               	movlw	1
 12223  004C56  0012               	return		;funcret
 12224  004C58                     __end_of_I2C_CallbackReturnStop:
 12225                           	callstack 0
 12226                           
 12227 ;; *************** function _rdBlkRegCompleteHandler *****************
 12228 ;; Defined at:
 12229 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 12230 ;; Parameters:    Size  Location     Type
 12231 ;;  ptr             2   13[COMRAM] PTR void 
 12232 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12233 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12234 ;; Auto vars:     Size  Location     Type
 12235 ;;		None
 12236 ;; Return value:  Size  Location     Type
 12237 ;;                  1    wreg      enum E358
 12238 ;; Registers used:
 12239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12240 ;; Tracked objects:
 12241 ;;		On entry : 0/0
 12242 ;;		On exit  : 0/0
 12243 ;;		Unchanged: 0/0
 12244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12249 ;;Total ram usage:        2 bytes
 12250 ;; Hardware stack levels used:    1
 12251 ;; Hardware stack levels required when called:    6
 12252 ;; This function calls:
 12253 ;;		_I2C_SetBuffer
 12254 ;;		_I2C_SetDataCompleteCallback
 12255 ;; This function is called by:
 12256 ;;		_I2C_ReadDataBlock
 12257 ;;		_I2C_DO_TX
 12258 ;;		_I2C_DO_RX
 12259 ;;		_I2C_DO_TX_EMPTY
 12260 ;;		_I2C_DO_ADDRESS_NACK
 12261 ;;		_I2C_DO_RX_EMPTY
 12262 ;; This function uses a non-reentrant model
 12263 ;;
 12264                           
 12265                           	psect	text84
 12266  004772                     __ptext84:
 12267                           	callstack 0
 12268  004772                     _rdBlkRegCompleteHandler:
 12269                           	callstack 16
 12270  004772                     
 12271                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 12272  004772  EE20 F002          	lfsr	2,2
 12273  004776  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 12274  004778  26D9               	addwf	fsr2l,f,c
 12275  00477A  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 12276  00477C  22DA               	addwfc	fsr2h,f,c
 12277  00477E  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
 12278  004782  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
 12279  004786  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 12280  00478A  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 12281  00478E  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
 12282  004792  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 12283  004796  EC36  F025         	call	_I2C_SetBuffer	;wreg free
 12284  00479A                     
 12285                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12286  00479A  0E00               	movlw	0
 12287  00479C  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12288  00479E  0E00               	movlw	0
 12289  0047A0  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12290  0047A2  0E00               	movlw	0
 12291  0047A4  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12292  0047A6  0E00               	movlw	0
 12293  0047A8  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12294  0047AA  EC74  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12295  0047AE                     
 12296                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 12297  0047AE  0E02               	movlw	2
 12298  0047B0  0012               	return		;funcret
 12299  0047B2                     __end_of_rdBlkRegCompleteHandler:
 12300                           	callstack 0
 12301                           
 12302 ;; *************** function _wr1RegCompleteHandler *****************
 12303 ;; Defined at:
 12304 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 12305 ;; Parameters:    Size  Location     Type
 12306 ;;  ptr             2   13[COMRAM] PTR void 
 12307 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12308 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;		None
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  1    wreg      enum E358
 12313 ;; Registers used:
 12314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 0/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12324 ;;Total ram usage:        2 bytes
 12325 ;; Hardware stack levels used:    1
 12326 ;; Hardware stack levels required when called:    6
 12327 ;; This function calls:
 12328 ;;		_I2C_SetBuffer
 12329 ;;		_I2C_SetDataCompleteCallback
 12330 ;; This function is called by:
 12331 ;;		_I2C_Write1ByteRegister
 12332 ;;		_I2C_DO_TX
 12333 ;;		_I2C_DO_RX
 12334 ;;		_I2C_DO_TX_EMPTY
 12335 ;;		_I2C_DO_ADDRESS_NACK
 12336 ;;		_I2C_DO_RX_EMPTY
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340                           	psect	text85
 12341  0048C0                     __ptext85:
 12342                           	callstack 0
 12343  0048C0                     _wr1RegCompleteHandler:
 12344                           	callstack 16
 12345  0048C0                     
 12346                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 12347  0048C0  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12348  0048C4  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12349  0048C8  0E00               	movlw	0
 12350  0048CA  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12351  0048CC  0E01               	movlw	1
 12352  0048CE  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12353  0048D0  EC36  F025         	call	_I2C_SetBuffer	;wreg free
 12354  0048D4                     
 12355                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12356  0048D4  0E00               	movlw	0
 12357  0048D6  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12358  0048D8  0E00               	movlw	0
 12359  0048DA  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12360  0048DC  0E00               	movlw	0
 12361  0048DE  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12362  0048E0  0E00               	movlw	0
 12363  0048E2  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12364  0048E4  EC74  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12365  0048E8                     
 12366                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 12367  0048E8  0E04               	movlw	4
 12368  0048EA  0012               	return		;funcret
 12369  0048EC                     __end_of_wr1RegCompleteHandler:
 12370                           	callstack 0
 12371                           
 12372 ;; *************** function _rd2RegCompleteHandler *****************
 12373 ;; Defined at:
 12374 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;  ptr             2   13[COMRAM] PTR void 
 12377 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12378 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12379 ;; Auto vars:     Size  Location     Type
 12380 ;;		None
 12381 ;; Return value:  Size  Location     Type
 12382 ;;                  1    wreg      enum E358
 12383 ;; Registers used:
 12384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12385 ;; Tracked objects:
 12386 ;;		On entry : 0/0
 12387 ;;		On exit  : 0/0
 12388 ;;		Unchanged: 0/0
 12389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12394 ;;Total ram usage:        2 bytes
 12395 ;; Hardware stack levels used:    1
 12396 ;; Hardware stack levels required when called:    6
 12397 ;; This function calls:
 12398 ;;		_I2C_SetBuffer
 12399 ;;		_I2C_SetDataCompleteCallback
 12400 ;; This function is called by:
 12401 ;;		_I2C_Read2ByteRegister
 12402 ;;		_I2C_DO_TX
 12403 ;;		_I2C_DO_RX
 12404 ;;		_I2C_DO_TX_EMPTY
 12405 ;;		_I2C_DO_ADDRESS_NACK
 12406 ;;		_I2C_DO_RX_EMPTY
 12407 ;; This function uses a non-reentrant model
 12408 ;;
 12409                           
 12410                           	psect	text86
 12411  0048EC                     __ptext86:
 12412                           	callstack 0
 12413  0048EC                     _rd2RegCompleteHandler:
 12414                           	callstack 16
 12415  0048EC                     
 12416                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 12417  0048EC  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12418  0048F0  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12419  0048F4  0E00               	movlw	0
 12420  0048F6  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12421  0048F8  0E02               	movlw	2
 12422  0048FA  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12423  0048FC  EC36  F025         	call	_I2C_SetBuffer	;wreg free
 12424  004900                     
 12425                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12426  004900  0E00               	movlw	0
 12427  004902  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12428  004904  0E00               	movlw	0
 12429  004906  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12430  004908  0E00               	movlw	0
 12431  00490A  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12432  00490C  0E00               	movlw	0
 12433  00490E  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12434  004910  EC74  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12435  004914                     
 12436                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 12437  004914  0E02               	movlw	2
 12438  004916  0012               	return		;funcret
 12439  004918                     __end_of_rd2RegCompleteHandler:
 12440                           	callstack 0
 12441                           
 12442 ;; *************** function _rd1RegCompleteHandler *****************
 12443 ;; Defined at:
 12444 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 12445 ;; Parameters:    Size  Location     Type
 12446 ;;  ptr             2   13[COMRAM] PTR void 
 12447 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12448 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12449 ;; Auto vars:     Size  Location     Type
 12450 ;;		None
 12451 ;; Return value:  Size  Location     Type
 12452 ;;                  1    wreg      enum E358
 12453 ;; Registers used:
 12454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12455 ;; Tracked objects:
 12456 ;;		On entry : 0/0
 12457 ;;		On exit  : 0/0
 12458 ;;		Unchanged: 0/0
 12459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12464 ;;Total ram usage:        2 bytes
 12465 ;; Hardware stack levels used:    1
 12466 ;; Hardware stack levels required when called:    6
 12467 ;; This function calls:
 12468 ;;		_I2C_SetBuffer
 12469 ;;		_I2C_SetDataCompleteCallback
 12470 ;; This function is called by:
 12471 ;;		_I2C_Read1ByteRegister
 12472 ;;		_I2C_DO_TX
 12473 ;;		_I2C_DO_RX
 12474 ;;		_I2C_DO_TX_EMPTY
 12475 ;;		_I2C_DO_ADDRESS_NACK
 12476 ;;		_I2C_DO_RX_EMPTY
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480                           	psect	text87
 12481  004918                     __ptext87:
 12482                           	callstack 0
 12483  004918                     _rd1RegCompleteHandler:
 12484                           	callstack 16
 12485  004918                     
 12486                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 12487  004918  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12488  00491C  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12489  004920  0E00               	movlw	0
 12490  004922  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12491  004924  0E01               	movlw	1
 12492  004926  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12493  004928  EC36  F025         	call	_I2C_SetBuffer	;wreg free
 12494  00492C                     
 12495                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12496  00492C  0E00               	movlw	0
 12497  00492E  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12498  004930  0E00               	movlw	0
 12499  004932  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12500  004934  0E00               	movlw	0
 12501  004936  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12502  004938  0E00               	movlw	0
 12503  00493A  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12504  00493C  EC74  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12505  004940                     
 12506                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 12507  004940  0E02               	movlw	2
 12508  004942  0012               	return		;funcret
 12509  004944                     __end_of_rd1RegCompleteHandler:
 12510                           	callstack 0
 12511                           
 12512 ;; *************** function _wr2RegCompleteHandler *****************
 12513 ;; Defined at:
 12514 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 12515 ;; Parameters:    Size  Location     Type
 12516 ;;  ptr             2   13[COMRAM] PTR void 
 12517 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12518 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12519 ;; Auto vars:     Size  Location     Type
 12520 ;;		None
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  1    wreg      enum E358
 12523 ;; Registers used:
 12524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12525 ;; Tracked objects:
 12526 ;;		On entry : 0/0
 12527 ;;		On exit  : 0/0
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12530 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12533 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12534 ;;Total ram usage:        2 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; Hardware stack levels required when called:    6
 12537 ;; This function calls:
 12538 ;;		_I2C_SetBuffer
 12539 ;;		_I2C_SetDataCompleteCallback
 12540 ;; This function is called by:
 12541 ;;		_I2C_Write2ByteRegister
 12542 ;;		_I2C_DO_TX
 12543 ;;		_I2C_DO_RX
 12544 ;;		_I2C_DO_TX_EMPTY
 12545 ;;		_I2C_DO_ADDRESS_NACK
 12546 ;;		_I2C_DO_RX_EMPTY
 12547 ;; This function uses a non-reentrant model
 12548 ;;
 12549                           
 12550                           	psect	text88
 12551  004944                     __ptext88:
 12552                           	callstack 0
 12553  004944                     _wr2RegCompleteHandler:
 12554                           	callstack 16
 12555  004944                     
 12556                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 12557  004944  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12558  004948  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12559  00494C  0E00               	movlw	0
 12560  00494E  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12561  004950  0E02               	movlw	2
 12562  004952  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12563  004954  EC36  F025         	call	_I2C_SetBuffer	;wreg free
 12564  004958                     
 12565                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12566  004958  0E00               	movlw	0
 12567  00495A  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12568  00495C  0E00               	movlw	0
 12569  00495E  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12570  004960  0E00               	movlw	0
 12571  004962  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12572  004964  0E00               	movlw	0
 12573  004966  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12574  004968  EC74  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12575  00496C                     
 12576                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 12577  00496C  0E04               	movlw	4
 12578  00496E  0012               	return		;funcret
 12579  004970                     __end_of_wr2RegCompleteHandler:
 12580                           	callstack 0
 12581                           
 12582 ;; *************** function _I2C_SetDataCompleteCallback *****************
 12583 ;; Defined at:
 12584 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 12585 ;; Parameters:    Size  Location     Type
 12586 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
 12587 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12588 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12589 ;;  ptr             2   11[COMRAM] PTR void 
 12590 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12591 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;		None
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  1    wreg      void 
 12596 ;; Registers used:
 12597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12598 ;; Tracked objects:
 12599 ;;		On entry : 0/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12606 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12607 ;;Total ram usage:        4 bytes
 12608 ;; Hardware stack levels used:    1
 12609 ;; Hardware stack levels required when called:    5
 12610 ;; This function calls:
 12611 ;;		_I2C_SetCallback
 12612 ;; This function is called by:
 12613 ;;		_I2C_Write1ByteRegister
 12614 ;;		_rd1RegCompleteHandler
 12615 ;;		_rd2RegCompleteHandler
 12616 ;;		_wr1RegCompleteHandler
 12617 ;;		_wr2RegCompleteHandler
 12618 ;;		_rdBlkRegCompleteHandler
 12619 ;;		_I2C_Read1ByteRegister
 12620 ;;		_I2C_Read2ByteRegister
 12621 ;;		_I2C_Write2ByteRegister
 12622 ;;		_I2C_ReadDataBlock
 12623 ;; This function uses a non-reentrant model
 12624 ;;
 12625                           
 12626                           	psect	text89
 12627  004AE8                     __ptext89:
 12628                           	callstack 0
 12629  004AE8                     _I2C_SetDataCompleteCallback:
 12630                           	callstack 16
 12631  004AE8                     
 12632                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 12633  004AE8  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 12634  004AEC  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 12635  004AF0  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 12636  004AF4  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 12637  004AF8  0E00               	movlw	0
 12638  004AFA  ECBB  F020         	call	_I2C_SetCallback
 12639  004AFE  0012               	return		;funcret
 12640  004B00                     __end_of_I2C_SetDataCompleteCallback:
 12641                           	callstack 0
 12642                           
 12643 ;; *************** function _I2C_SetCallback *****************
 12644 ;; Defined at:
 12645 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;  idx             1    wreg     enum E3119
 12648 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
 12649 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12650 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12651 ;;  ptr             2    6[COMRAM] PTR void 
 12652 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12653 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12654 ;; Auto vars:     Size  Location     Type
 12655 ;;  idx             1    8[COMRAM] enum E3119
 12656 ;; Return value:  Size  Location     Type
 12657 ;;                  1    wreg      void 
 12658 ;; Registers used:
 12659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12660 ;; Tracked objects:
 12661 ;;		On entry : 0/0
 12662 ;;		On exit  : 0/0
 12663 ;;		Unchanged: 0/0
 12664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12668 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12669 ;;Total ram usage:        5 bytes
 12670 ;; Hardware stack levels used:    1
 12671 ;; Hardware stack levels required when called:    4
 12672 ;; This function calls:
 12673 ;;		Nothing
 12674 ;; This function is called by:
 12675 ;;		_I2C_SetDataCompleteCallback
 12676 ;;		_I2C_SetAddressNackCallback
 12677 ;;		_I2C_SetWriteCollisionCallback
 12678 ;;		_I2C_SetDataNackCallback
 12679 ;;		_I2C_SetTimeoutCallback
 12680 ;; This function uses a non-reentrant model
 12681 ;;
 12682                           
 12683                           	psect	text90
 12684  004176                     __ptext90:
 12685                           	callstack 0
 12686  004176                     _I2C_SetCallback:
 12687                           	callstack 22
 12688                           
 12689                           ;incstack = 0
 12690                           ;I2C_SetCallback@idx stored from wreg
 12691  004176  6E09               	movwf	I2C_SetCallback@idx^0,c
 12692  004178                     
 12693                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 12694  004178  5005               	movf	I2C_SetCallback@cb^0,w,c
 12695  00417A  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 12696  00417C  B4D8               	btfsc	status,2,c
 12697  00417E  EFC3  F020         	goto	u3011
 12698  004182  EFC5  F020         	goto	u3010
 12699  004186                     u3011:
 12700  004186  EFDF  F020         	goto	l3989
 12701  00418A                     u3010:
 12702  00418A                     
 12703                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 12704  00418A  5009               	movf	I2C_SetCallback@idx^0,w,c
 12705  00418C  0D02               	mullw	2
 12706  00418E  0E00               	movlw	low _I2C_Status
 12707  004190  24F3               	addwf	243,w,c
 12708  004192  6ED9               	movwf	fsr2l,c
 12709  004194  0E01               	movlw	high _I2C_Status
 12710  004196  20F4               	addwfc	prodh,w,c
 12711  004198  6EDA               	movwf	fsr2h,c
 12712  00419A  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
 12713  00419E  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 12714                           
 12715                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 12716  0041A2  5009               	movf	I2C_SetCallback@idx^0,w,c
 12717  0041A4  0D02               	mullw	2
 12718  0041A6  0E0C               	movlw	low (_I2C_Status+12)
 12719  0041A8  24F3               	addwf	243,w,c
 12720  0041AA  6ED9               	movwf	fsr2l,c
 12721  0041AC  0E01               	movlw	high (_I2C_Status+12)
 12722  0041AE  20F4               	addwfc	prodh,w,c
 12723  0041B0  6EDA               	movwf	fsr2h,c
 12724  0041B2  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 12725  0041B6  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 12726                           
 12727                           ;mcc_generated_files/i2c_master.c: 304:     }
 12728  0041BA  EFF7  F020         	goto	l256
 12729  0041BE                     l3989:
 12730                           
 12731                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 12732  0041BE  5009               	movf	I2C_SetCallback@idx^0,w,c
 12733  0041C0  0D02               	mullw	2
 12734  0041C2  0E00               	movlw	low _I2C_Status
 12735  0041C4  24F3               	addwf	243,w,c
 12736  0041C6  6ED9               	movwf	fsr2l,c
 12737  0041C8  0E01               	movlw	high _I2C_Status
 12738  0041CA  20F4               	addwfc	prodh,w,c
 12739  0041CC  6EDA               	movwf	fsr2h,c
 12740  0041CE  0E54               	movlw	low _I2C_CallbackReturnStop
 12741  0041D0  6EDE               	movwf	postinc2,c
 12742  0041D2  0E4C               	movlw	high _I2C_CallbackReturnStop
 12743  0041D4  6EDD               	movwf	postdec2,c
 12744                           
 12745                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 12746  0041D6  5009               	movf	I2C_SetCallback@idx^0,w,c
 12747  0041D8  0D02               	mullw	2
 12748  0041DA  0E0C               	movlw	low (_I2C_Status+12)
 12749  0041DC  24F3               	addwf	243,w,c
 12750  0041DE  6ED9               	movwf	fsr2l,c
 12751  0041E0  0E01               	movlw	high (_I2C_Status+12)
 12752  0041E2  20F4               	addwfc	prodh,w,c
 12753  0041E4  6EDA               	movwf	fsr2h,c
 12754  0041E6  0E00               	movlw	0
 12755  0041E8  6EDE               	movwf	postinc2,c
 12756  0041EA  0E00               	movlw	0
 12757  0041EC  6EDD               	movwf	postdec2,c
 12758  0041EE                     l256:
 12759  0041EE  0012               	return		;funcret
 12760  0041F0                     __end_of_I2C_SetCallback:
 12761                           	callstack 0
 12762                           
 12763 ;; *************** function _I2C_SetBuffer *****************
 12764 ;; Defined at:
 12765 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 12766 ;; Parameters:    Size  Location     Type
 12767 ;;  buffer          2    4[COMRAM] PTR void 
 12768 ;;		 -> readBuffer(10), HDC1080_Read@regist(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 12769 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
 12770 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
 12771 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
 12772 ;;  bufferSize      2    6[COMRAM] unsigned int 
 12773 ;; Auto vars:     Size  Location     Type
 12774 ;;		None
 12775 ;; Return value:  Size  Location     Type
 12776 ;;                  1    wreg      void 
 12777 ;; Registers used:
 12778 ;;		wreg, status,2, status,0
 12779 ;; Tracked objects:
 12780 ;;		On entry : 0/0
 12781 ;;		On exit  : 0/0
 12782 ;;		Unchanged: 0/0
 12783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12787 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12788 ;;Total ram usage:        4 bytes
 12789 ;; Hardware stack levels used:    1
 12790 ;; Hardware stack levels required when called:    4
 12791 ;; This function calls:
 12792 ;;		Nothing
 12793 ;; This function is called by:
 12794 ;;		_I2C_Write1ByteRegister
 12795 ;;		_I2C_WriteNBytes
 12796 ;;		_I2C_ReadNBytes
 12797 ;;		_rd1RegCompleteHandler
 12798 ;;		_rd2RegCompleteHandler
 12799 ;;		_wr1RegCompleteHandler
 12800 ;;		_wr2RegCompleteHandler
 12801 ;;		_rdBlkRegCompleteHandler
 12802 ;;		_I2C_Read1ByteRegister
 12803 ;;		_I2C_Read2ByteRegister
 12804 ;;		_I2C_Write2ByteRegister
 12805 ;;		_I2C_ReadDataBlock
 12806 ;; This function uses a non-reentrant model
 12807 ;;
 12808                           
 12809                           	psect	text91
 12810  004A6C                     __ptext91:
 12811                           	callstack 0
 12812  004A6C                     _I2C_SetBuffer:
 12813                           	callstack 23
 12814  004A6C                     
 12815                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 12816  004A6C  0101               	movlb	1	; () banked
 12817  004A6E  A723               	btfss	(_I2C_Status+35)& (0+255),3,b
 12818  004A70  EF3C  F025         	goto	u3021
 12819  004A74  EF3E  F025         	goto	u3020
 12820  004A78                     u3021:
 12821  004A78  EF47  F025         	goto	l236
 12822  004A7C                     u3020:
 12823  004A7C                     
 12824                           ; BSR set to: 1
 12825                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 12826  004A7C  C005  F11D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 12827  004A80  C006  F11E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 12828  004A84                     
 12829                           ; BSR set to: 1
 12830                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 12831  004A84  C007  F11F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 12832  004A88  C008  F120         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 12833  004A8C                     
 12834                           ; BSR set to: 1
 12835                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 12836  004A8C  9723               	bcf	(_I2C_Status+35)& (0+255),3,b
 12837  004A8E                     l236:
 12838                           
 12839                           ; BSR set to: 1
 12840  004A8E  0012               	return		;funcret
 12841  004A90                     __end_of_I2C_SetBuffer:
 12842                           	callstack 0
 12843                           
 12844 ;; *************** function _I2C_MasterStop *****************
 12845 ;; Defined at:
 12846 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 12847 ;; Parameters:    Size  Location     Type
 12848 ;;		None
 12849 ;; Auto vars:     Size  Location     Type
 12850 ;;		None
 12851 ;; Return value:  Size  Location     Type
 12852 ;;                  1    wreg      void 
 12853 ;; Registers used:
 12854 ;;		None
 12855 ;; Tracked objects:
 12856 ;;		On entry : 0/0
 12857 ;;		On exit  : 0/0
 12858 ;;		Unchanged: 0/0
 12859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12864 ;;Total ram usage:        0 bytes
 12865 ;; Hardware stack levels used:    1
 12866 ;; Hardware stack levels required when called:    4
 12867 ;; This function calls:
 12868 ;;		Nothing
 12869 ;; This function is called by:
 12870 ;;		_I2C_DO_SEND_STOP
 12871 ;; This function uses a non-reentrant model
 12872 ;;
 12873                           
 12874                           	psect	text92
 12875  004C58                     __ptext92:
 12876                           	callstack 0
 12877  004C58                     _I2C_MasterStop:
 12878                           	callstack 17
 12879  004C58                     
 12880                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 12881  004C58  84C5               	bsf	197,2,c	;volatile
 12882  004C5A  0012               	return		;funcret
 12883  004C5C                     __end_of_I2C_MasterStop:
 12884                           	callstack 0
 12885                           
 12886 ;; *************** function _I2C_MasterEnableRestart *****************
 12887 ;; Defined at:
 12888 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 12889 ;; Parameters:    Size  Location     Type
 12890 ;;		None
 12891 ;; Auto vars:     Size  Location     Type
 12892 ;;		None
 12893 ;; Return value:  Size  Location     Type
 12894 ;;                  1    wreg      void 
 12895 ;; Registers used:
 12896 ;;		None
 12897 ;; Tracked objects:
 12898 ;;		On entry : 0/0
 12899 ;;		On exit  : 0/0
 12900 ;;		Unchanged: 0/0
 12901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12906 ;;Total ram usage:        0 bytes
 12907 ;; Hardware stack levels used:    1
 12908 ;; Hardware stack levels required when called:    4
 12909 ;; This function calls:
 12910 ;;		Nothing
 12911 ;; This function is called by:
 12912 ;;		_I2C_DO_SEND_RESTART_READ
 12913 ;;		_I2C_DO_SEND_RESTART_WRITE
 12914 ;;		_I2C_DO_SEND_RESTART
 12915 ;;		_I2C_DO_RX_EMPTY
 12916 ;; This function uses a non-reentrant model
 12917 ;;
 12918                           
 12919                           	psect	text93
 12920  004C5C                     __ptext93:
 12921                           	callstack 0
 12922  004C5C                     _I2C_MasterEnableRestart:
 12923                           	callstack 17
 12924  004C5C                     
 12925                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 12926  004C5C  82C5               	bsf	197,1,c	;volatile
 12927  004C5E  0012               	return		;funcret
 12928  004C60                     __end_of_I2C_MasterEnableRestart:
 12929                           	callstack 0
 12930                           
 12931 ;; *************** function _I2C_MasterStart *****************
 12932 ;; Defined at:
 12933 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;		None
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;                  1    wreg      void 
 12940 ;; Registers used:
 12941 ;;		None
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12951 ;;Total ram usage:        0 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:    4
 12954 ;; This function calls:
 12955 ;;		Nothing
 12956 ;; This function is called by:
 12957 ;;		_I2C_MasterOperation
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           	psect	text94
 12962  004C60                     __ptext94:
 12963                           	callstack 0
 12964  004C60                     _I2C_MasterStart:
 12965                           	callstack 21
 12966  004C60                     
 12967                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 12968  004C60  80C5               	bsf	197,0,c	;volatile
 12969  004C62  0012               	return		;funcret
 12970  004C64                     __end_of_I2C_MasterStart:
 12971                           	callstack 0
 12972                           
 12973 ;; *************** function _I2C_Close *****************
 12974 ;; Defined at:
 12975 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 12976 ;; Parameters:    Size  Location     Type
 12977 ;;		None
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;  returnValue     1    4[COMRAM] enum E353
 12980 ;; Return value:  Size  Location     Type
 12981 ;;                  1    wreg      enum E353
 12982 ;; Registers used:
 12983 ;;		wreg, status,2, cstack
 12984 ;; Tracked objects:
 12985 ;;		On entry : 0/0
 12986 ;;		On exit  : 0/0
 12987 ;;		Unchanged: 0/0
 12988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12993 ;;Total ram usage:        1 bytes
 12994 ;; Hardware stack levels used:    1
 12995 ;; Hardware stack levels required when called:    5
 12996 ;; This function calls:
 12997 ;;		_I2C_MasterClearIrq
 12998 ;;		_I2C_MasterClose
 12999 ;;		_I2C_MasterDisableIrq
 13000 ;; This function is called by:
 13001 ;;		_I2C_Write1ByteRegister
 13002 ;;		_I2C_WriteNBytes
 13003 ;;		_I2C_ReadNBytes
 13004 ;;		_I2C_Read1ByteRegister
 13005 ;;		_I2C_Read2ByteRegister
 13006 ;;		_I2C_Write2ByteRegister
 13007 ;;		_I2C_ReadDataBlock
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011                           	psect	text95
 13012  004970                     __ptext95:
 13013                           	callstack 0
 13014  004970                     _I2C_Close:
 13015                           	callstack 22
 13016  004970                     
 13017                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 13018  004970  0E01               	movlw	1
 13019  004972  6E05               	movwf	I2C_Close@returnValue^0,c
 13020  004974                     
 13021                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 13022  004974  0101               	movlb	1	; () banked
 13023  004976  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 13024  004978  EFC0  F024         	goto	u4701
 13025  00497C  EFC2  F024         	goto	u4700
 13026  004980                     u4701:
 13027  004980  EFCC  F024         	goto	l5199
 13028  004984                     u4700:
 13029  004984                     
 13030                           ; BSR set to: 1
 13031                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 13032  004984  9523               	bcf	(_I2C_Status+35)& (0+255),2,b
 13033                           
 13034                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 13035  004986  691C               	setf	(_I2C_Status+28)& (0+255),b
 13036  004988                     
 13037                           ; BSR set to: 1
 13038                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 13039  004988  EC36  F026         	call	_I2C_MasterClearIrq	;wreg free
 13040                           
 13041                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 13042  00498C  EC32  F026         	call	_I2C_MasterDisableIrq	;wreg free
 13043                           
 13044                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 13045  004990  EC34  F026         	call	_I2C_MasterClose	;wreg free
 13046  004994                     
 13047                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 13048  004994  C122  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
 13049  004998                     l5199:
 13050                           
 13051                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 13052  004998  5005               	movf	I2C_Close@returnValue^0,w,c
 13053  00499A  0012               	return		;funcret
 13054  00499C                     __end_of_I2C_Close:
 13055                           	callstack 0
 13056                           
 13057 ;; *************** function _I2C_MasterDisableIrq *****************
 13058 ;; Defined at:
 13059 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 13060 ;; Parameters:    Size  Location     Type
 13061 ;;		None
 13062 ;; Auto vars:     Size  Location     Type
 13063 ;;		None
 13064 ;; Return value:  Size  Location     Type
 13065 ;;                  1    wreg      void 
 13066 ;; Registers used:
 13067 ;;		None
 13068 ;; Tracked objects:
 13069 ;;		On entry : 0/0
 13070 ;;		On exit  : 0/0
 13071 ;;		Unchanged: 0/0
 13072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13077 ;;Total ram usage:        0 bytes
 13078 ;; Hardware stack levels used:    1
 13079 ;; Hardware stack levels required when called:    4
 13080 ;; This function calls:
 13081 ;;		Nothing
 13082 ;; This function is called by:
 13083 ;;		_I2C_Close
 13084 ;;		_I2C_SetTimeOut
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088                           	psect	text96
 13089  004C64                     __ptext96:
 13090                           	callstack 0
 13091  004C64                     _I2C_MasterDisableIrq:
 13092                           	callstack 22
 13093  004C64                     
 13094                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 13095  004C64  969D               	bcf	157,3,c	;volatile
 13096  004C66  0012               	return		;funcret
 13097  004C68                     __end_of_I2C_MasterDisableIrq:
 13098                           	callstack 0
 13099                           
 13100 ;; *************** function _I2C_MasterClose *****************
 13101 ;; Defined at:
 13102 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 13103 ;; Parameters:    Size  Location     Type
 13104 ;;		None
 13105 ;; Auto vars:     Size  Location     Type
 13106 ;;		None
 13107 ;; Return value:  Size  Location     Type
 13108 ;;                  1    wreg      void 
 13109 ;; Registers used:
 13110 ;;		None
 13111 ;; Tracked objects:
 13112 ;;		On entry : 0/0
 13113 ;;		On exit  : 0/0
 13114 ;;		Unchanged: 0/0
 13115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13120 ;;Total ram usage:        0 bytes
 13121 ;; Hardware stack levels used:    1
 13122 ;; Hardware stack levels required when called:    4
 13123 ;; This function calls:
 13124 ;;		Nothing
 13125 ;; This function is called by:
 13126 ;;		_I2C_Close
 13127 ;; This function uses a non-reentrant model
 13128 ;;
 13129                           
 13130                           	psect	text97
 13131  004C68                     __ptext97:
 13132                           	callstack 0
 13133  004C68                     _I2C_MasterClose:
 13134                           	callstack 22
 13135  004C68                     
 13136                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 13137  004C68  9AC6               	bcf	198,5,c	;volatile
 13138  004C6A  0012               	return		;funcret
 13139  004C6C                     __end_of_I2C_MasterClose:
 13140                           	callstack 0
 13141                           
 13142 ;; *************** function _I2C_MasterClearIrq *****************
 13143 ;; Defined at:
 13144 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;		None
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;		None
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  1    wreg      void 
 13151 ;; Registers used:
 13152 ;;		None
 13153 ;; Tracked objects:
 13154 ;;		On entry : 0/0
 13155 ;;		On exit  : 0/0
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13162 ;;Total ram usage:        0 bytes
 13163 ;; Hardware stack levels used:    1
 13164 ;; Hardware stack levels required when called:    4
 13165 ;; This function calls:
 13166 ;;		Nothing
 13167 ;; This function is called by:
 13168 ;;		_I2C_Open
 13169 ;;		_I2C_Close
 13170 ;;		_I2C_MasterFsm
 13171 ;; This function uses a non-reentrant model
 13172 ;;
 13173                           
 13174                           	psect	text98
 13175  004C6C                     __ptext98:
 13176                           	callstack 0
 13177  004C6C                     _I2C_MasterClearIrq:
 13178                           	callstack 22
 13179  004C6C                     
 13180                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 13181  004C6C  969E               	bcf	158,3,c	;volatile
 13182  004C6E  0012               	return		;funcret
 13183  004C70                     __end_of_I2C_MasterClearIrq:
 13184                           	callstack 0
 13185                           
 13186 ;; *************** function _INTERRUPT_InterruptManager *****************
 13187 ;; Defined at:
 13188 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;		None
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;		None
 13193 ;; Return value:  Size  Location     Type
 13194 ;;                  1    wreg      void 
 13195 ;; Registers used:
 13196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13197 ;; Tracked objects:
 13198 ;;		On entry : 0/0
 13199 ;;		On exit  : 0/0
 13200 ;;		Unchanged: 0/0
 13201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13205 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13206 ;;Total ram usage:        4 bytes
 13207 ;; Hardware stack levels used:    1
 13208 ;; Hardware stack levels required when called:    3
 13209 ;; This function calls:
 13210 ;;		Absolute function
 13211 ;;		_EUSART_Receive_ISR
 13212 ;;		_EUSART_Transmit_ISR
 13213 ;; This function is called by:
 13214 ;;		Interrupt level 2
 13215 ;; This function uses a non-reentrant model
 13216 ;;
 13217                           
 13218                           	psect	intcode
 13219  000008                     __pintcode:
 13220                           	callstack 0
 13221  000008                     _INTERRUPT_InterruptManager:
 13222                           	callstack 16
 13223                           
 13224                           ;incstack = 0
 13225  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13226  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 13227  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13228  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 13229  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 13230  00001A                     
 13231                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 13232  00001A  ACF2               	btfss	242,6,c	;volatile
 13233  00001C  EF12  F000         	goto	i2u594_41
 13234  000020  EF14  F000         	goto	i2u594_40
 13235  000024                     i2u594_41:
 13236  000024  EF4E  F000         	goto	i2l671
 13237  000028                     i2u594_40:
 13238  000028                     
 13239                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 13240  000028  A89D               	btfss	157,4,c	;volatile
 13241  00002A  EF19  F000         	goto	i2u595_41
 13242  00002E  EF1B  F000         	goto	i2u595_40
 13243  000032                     i2u595_41:
 13244  000032  EF31  F000         	goto	i2l666
 13245  000036                     i2u595_40:
 13246  000036  A89E               	btfss	158,4,c	;volatile
 13247  000038  EF20  F000         	goto	i2u596_41
 13248  00003C  EF22  F000         	goto	i2u596_40
 13249  000040                     i2u596_41:
 13250  000040  EF31  F000         	goto	i2l666
 13251  000044                     i2u596_40:
 13252  000044                     
 13253                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
 13254  000044  D802               	call	i2u597_48
 13255  000046  EF2F  F000         	goto	i2u597_49
 13256  00004A                     i2u597_48:
 13257  00004A  0005               	push	
 13258  00004C  6EFA               	movwf	pclath,c
 13259  00004E  0100               	movlb	0	; () banked
 13260  000050  51FC               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
 13261  000052  6EFD               	movwf	tosl,c
 13262  000054  51FD               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
 13263  000056  6EFE               	movwf	tosh,c
 13264  000058  6AFF               	clrf	tosu,c
 13265  00005A  50FA               	movf	pclath,w,c
 13266  00005C  0012               	return		;indir
 13267  00005E                     i2u597_49:
 13268                           
 13269                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 13270  00005E  EF4E  F000         	goto	i2l671
 13271  000062                     i2l666:
 13272  000062  AA9D               	btfss	157,5,c	;volatile
 13273  000064  EF36  F000         	goto	i2u598_41
 13274  000068  EF38  F000         	goto	i2u598_40
 13275  00006C                     i2u598_41:
 13276  00006C  EF4E  F000         	goto	i2l667
 13277  000070                     i2u598_40:
 13278  000070  AA9E               	btfss	158,5,c	;volatile
 13279  000072  EF3D  F000         	goto	i2u599_41
 13280  000076  EF3F  F000         	goto	i2u599_40
 13281  00007A                     i2u599_41:
 13282  00007A  EF4E  F000         	goto	i2l667
 13283  00007E                     i2u599_40:
 13284  00007E                     
 13285                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
 13286  00007E  D802               	call	i2u600_48
 13287  000080  EF4C  F000         	goto	i2u600_49
 13288  000084                     i2u600_48:
 13289  000084  0005               	push	
 13290  000086  6EFA               	movwf	pclath,c
 13291  000088  0100               	movlb	0	; () banked
 13292  00008A  51FA               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
 13293  00008C  6EFD               	movwf	tosl,c
 13294  00008E  51FB               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
 13295  000090  6EFE               	movwf	tosh,c
 13296  000092  6AFF               	clrf	tosu,c
 13297  000094  50FA               	movf	pclath,w,c
 13298  000096  0012               	return		;indir
 13299  000098                     i2u600_49:
 13300                           
 13301                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 13302  000098  EF4E  F000         	goto	i2l671
 13303  00009C                     i2l667:
 13304  00009C                     i2l671:
 13305  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 13306  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 13307  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13308  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13309  0000AC  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13310  0000AE  0011               	retfie		f
 13311  0000B0                     __end_of_INTERRUPT_InterruptManager:
 13312                           	callstack 0
 13313                           
 13314 ;; *************** function _EUSART_Transmit_ISR *****************
 13315 ;; Defined at:
 13316 ;;		line 206 in file "mcc_generated_files/eusart.c"
 13317 ;; Parameters:    Size  Location     Type
 13318 ;;		None
 13319 ;; Auto vars:     Size  Location     Type
 13320 ;;		None
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  1    wreg      void 
 13323 ;; Registers used:
 13324 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13325 ;; Tracked objects:
 13326 ;;		On entry : 0/0
 13327 ;;		On exit  : 0/0
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13334 ;;Total ram usage:        0 bytes
 13335 ;; Hardware stack levels used:    1
 13336 ;; This function calls:
 13337 ;;		Nothing
 13338 ;; This function is called by:
 13339 ;;		_EUSART_Initialize
 13340 ;;		_INTERRUPT_InterruptManager
 13341 ;; This function uses a non-reentrant model
 13342 ;;
 13343                           
 13344                           	psect	text100
 13345  004730                     __ptext100:
 13346                           	callstack 0
 13347  004730                     _EUSART_Transmit_ISR:
 13348                           	callstack 18
 13349  004730                     
 13350                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 13351  004730  0E08               	movlw	8
 13352  004732  0100               	movlb	0	; () banked
 13353  004734  61FE               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 13354  004736  EF9F  F023         	goto	i2u576_41
 13355  00473A  EFA1  F023         	goto	i2u576_40
 13356  00473E                     i2u576_41:
 13357  00473E  EFB7  F023         	goto	i2l607
 13358  004742                     i2u576_40:
 13359  004742                     
 13360                           ; BSR set to: 0
 13361                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 13362  004742  0ED5               	movlw	low _eusartTxBuffer
 13363  004744  2458               	addwf	_eusartTxTail^0,w,c	;volatile
 13364  004746  6ED9               	movwf	fsr2l,c
 13365  004748  6ADA               	clrf	fsr2h,c
 13366  00474A  0E00               	movlw	high _eusartTxBuffer
 13367  00474C  22DA               	addwfc	fsr2h,f,c
 13368  00474E  50DF               	movf	indf2,w,c
 13369  004750  6EAD               	movwf	173,c	;volatile
 13370  004752                     
 13371                           ; BSR set to: 0
 13372  004752  2A58               	incf	_eusartTxTail^0,f,c	;volatile
 13373  004754                     
 13374                           ; BSR set to: 0
 13375                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 13376  004754  0E07               	movlw	7
 13377  004756  6458               	cpfsgt	_eusartTxTail^0,c	;volatile
 13378  004758  EFB0  F023         	goto	i2u577_41
 13379  00475C  EFB2  F023         	goto	i2u577_40
 13380  004760                     i2u577_41:
 13381  004760  EFB4  F023         	goto	i2l5921
 13382  004764                     i2u577_40:
 13383  004764                     
 13384                           ; BSR set to: 0
 13385                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 13386  004764  0E00               	movlw	0
 13387  004766  6E58               	movwf	_eusartTxTail^0,c	;volatile
 13388  004768                     i2l5921:
 13389                           
 13390                           ; BSR set to: 0
 13391                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 13392  004768  2BFE               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 13393                           
 13394                           ;mcc_generated_files/eusart.c: 218:     }
 13395  00476A  EFB8  F023         	goto	i2l610
 13396  00476E                     i2l607:
 13397                           
 13398                           ; BSR set to: 0
 13399                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
 13400  00476E  989D               	bcf	157,4,c	;volatile
 13401  004770                     i2l610:
 13402                           
 13403                           ; BSR set to: 0
 13404  004770  0012               	return		;funcret
 13405  004772                     __end_of_EUSART_Transmit_ISR:
 13406                           	callstack 0
 13407                           
 13408 ;; *************** function _EUSART_Receive_ISR *****************
 13409 ;; Defined at:
 13410 ;;		line 225 in file "mcc_generated_files/eusart.c"
 13411 ;; Parameters:    Size  Location     Type
 13412 ;;		None
 13413 ;; Auto vars:     Size  Location     Type
 13414 ;;		None
 13415 ;; Return value:  Size  Location     Type
 13416 ;;                  1    wreg      void 
 13417 ;; Registers used:
 13418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13419 ;; Tracked objects:
 13420 ;;		On entry : 0/0
 13421 ;;		On exit  : 0/0
 13422 ;;		Unchanged: 0/0
 13423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13428 ;;Total ram usage:        0 bytes
 13429 ;; Hardware stack levels used:    1
 13430 ;; Hardware stack levels required when called:    2
 13431 ;; This function calls:
 13432 ;;		Absolute function
 13433 ;;		_EUSART_DefaultErrorHandler
 13434 ;;		_EUSART_DefaultFramingErrorHandler
 13435 ;;		_EUSART_DefaultOverrunErrorHandler
 13436 ;;		_EUSART_RxDataHandler
 13437 ;; This function is called by:
 13438 ;;		_EUSART_Initialize
 13439 ;;		_INTERRUPT_InterruptManager
 13440 ;; This function uses a non-reentrant model
 13441 ;;
 13442                           
 13443                           	psect	text101
 13444  003BBA                     __ptext101:
 13445                           	callstack 0
 13446  003BBA                     _EUSART_Receive_ISR:
 13447                           	callstack 16
 13448  003BBA                     
 13449                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 13450  003BBA  0EC5               	movlw	low _eusartRxStatusBuffer
 13451  003BBC  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13452  003BBE  6ED9               	movwf	fsr2l,c
 13453  003BC0  6ADA               	clrf	fsr2h,c
 13454  003BC2  0E00               	movlw	high _eusartRxStatusBuffer
 13455  003BC4  22DA               	addwfc	fsr2h,f,c
 13456  003BC6  0E00               	movlw	0
 13457  003BC8  6EDF               	movwf	indf2,c
 13458  003BCA                     
 13459                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 13460  003BCA  A4AB               	btfss	171,2,c	;volatile
 13461  003BCC  EFEA  F01D         	goto	i2u578_41
 13462  003BD0  EFEC  F01D         	goto	i2u578_40
 13463  003BD4                     i2u578_41:
 13464  003BD4  EF01  F01E         	goto	i2l5931
 13465  003BD8                     i2u578_40:
 13466  003BD8                     
 13467                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 13468  003BD8  0EC5               	movlw	low _eusartRxStatusBuffer
 13469  003BDA  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13470  003BDC  6ED9               	movwf	fsr2l,c
 13471  003BDE  6ADA               	clrf	fsr2h,c
 13472  003BE0  0E00               	movlw	high _eusartRxStatusBuffer
 13473  003BE2  22DA               	addwfc	fsr2h,f,c
 13474  003BE4  0100               	movlb	0	; () banked
 13475  003BE6  82DF               	bsf	indf2,1,c
 13476  003BE8                     
 13477                           ; BSR set to: 0
 13478                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 13479  003BE8  D802               	call	i2u579_48
 13480  003BEA  EF01  F01E         	goto	i2u579_49
 13481  003BEE                     i2u579_48:
 13482  003BEE  0005               	push	
 13483  003BF0  6EFA               	movwf	pclath,c
 13484  003BF2  0101               	movlb	1	; () banked
 13485  003BF4  5182               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 13486  003BF6  6EFD               	movwf	tosl,c
 13487  003BF8  5183               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 13488  003BFA  6EFE               	movwf	tosh,c
 13489  003BFC  6AFF               	clrf	tosu,c
 13490  003BFE  50FA               	movf	pclath,w,c
 13491  003C00  0012               	return		;indir
 13492  003C02                     i2u579_49:
 13493  003C02                     i2l5931:
 13494                           
 13495                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 13496  003C02  A2AB               	btfss	171,1,c	;volatile
 13497  003C04  EF06  F01E         	goto	i2u580_41
 13498  003C08  EF08  F01E         	goto	i2u580_40
 13499  003C0C                     i2u580_41:
 13500  003C0C  EF1D  F01E         	goto	i2l5937
 13501  003C10                     i2u580_40:
 13502  003C10                     
 13503                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 13504  003C10  0EC5               	movlw	low _eusartRxStatusBuffer
 13505  003C12  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13506  003C14  6ED9               	movwf	fsr2l,c
 13507  003C16  6ADA               	clrf	fsr2h,c
 13508  003C18  0E00               	movlw	high _eusartRxStatusBuffer
 13509  003C1A  22DA               	addwfc	fsr2h,f,c
 13510  003C1C  0100               	movlb	0	; () banked
 13511  003C1E  84DF               	bsf	indf2,2,c
 13512  003C20                     
 13513                           ; BSR set to: 0
 13514                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 13515  003C20  D802               	call	i2u581_48
 13516  003C22  EF1D  F01E         	goto	i2u581_49
 13517  003C26                     i2u581_48:
 13518  003C26  0005               	push	
 13519  003C28  6EFA               	movwf	pclath,c
 13520  003C2A  0101               	movlb	1	; () banked
 13521  003C2C  5180               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 13522  003C2E  6EFD               	movwf	tosl,c
 13523  003C30  5181               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 13524  003C32  6EFE               	movwf	tosh,c
 13525  003C34  6AFF               	clrf	tosu,c
 13526  003C36  50FA               	movf	pclath,w,c
 13527  003C38  0012               	return		;indir
 13528  003C3A                     i2u581_49:
 13529  003C3A                     i2l5937:
 13530                           
 13531                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 13532  003C3A  0EC5               	movlw	low _eusartRxStatusBuffer
 13533  003C3C  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13534  003C3E  6ED9               	movwf	fsr2l,c
 13535  003C40  6ADA               	clrf	fsr2h,c
 13536  003C42  0E00               	movlw	high _eusartRxStatusBuffer
 13537  003C44  22DA               	addwfc	fsr2h,f,c
 13538  003C46  50DF               	movf	indf2,w,c
 13539  003C48  B4D8               	btfsc	status,2,c
 13540  003C4A  EF29  F01E         	goto	i2u582_41
 13541  003C4E  EF2B  F01E         	goto	i2u582_40
 13542  003C52                     i2u582_41:
 13543  003C52  EF3A  F01E         	goto	i2l5941
 13544  003C56                     i2u582_40:
 13545  003C56                     
 13546                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 13547  003C56  D802               	call	i2u583_48
 13548  003C58  EF38  F01E         	goto	i2u583_49
 13549  003C5C                     i2u583_48:
 13550  003C5C  0005               	push	
 13551  003C5E  6EFA               	movwf	pclath,c
 13552  003C60  0101               	movlb	1	; () banked
 13553  003C62  517E               	movf	_EUSART_ErrorHandler& (0+255),w,b
 13554  003C64  6EFD               	movwf	tosl,c
 13555  003C66  517F               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 13556  003C68  6EFE               	movwf	tosh,c
 13557  003C6A  6AFF               	clrf	tosu,c
 13558  003C6C  50FA               	movf	pclath,w,c
 13559  003C6E  0012               	return		;indir
 13560  003C70                     i2u583_49:
 13561                           
 13562                           ;mcc_generated_files/eusart.c: 242:     } else {
 13563  003C70  EF3C  F01E         	goto	i2l617
 13564  003C74                     i2l5941:
 13565                           
 13566                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 13567  003C74  ECCE  F024         	call	_EUSART_RxDataHandler	;wreg free
 13568  003C78                     i2l617:
 13569  003C78  0012               	return		;funcret
 13570  003C7A                     __end_of_EUSART_Receive_ISR:
 13571                           	callstack 0
 13572                           
 13573 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 13574 ;; Defined at:
 13575 ;;		line 261 in file "mcc_generated_files/eusart.c"
 13576 ;; Parameters:    Size  Location     Type
 13577 ;;		None
 13578 ;; Auto vars:     Size  Location     Type
 13579 ;;		None
 13580 ;; Return value:  Size  Location     Type
 13581 ;;                  1    wreg      void 
 13582 ;; Registers used:
 13583 ;;		None
 13584 ;; Tracked objects:
 13585 ;;		On entry : 0/0
 13586 ;;		On exit  : 0/0
 13587 ;;		Unchanged: 0/0
 13588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13593 ;;Total ram usage:        0 bytes
 13594 ;; Hardware stack levels used:    1
 13595 ;; This function calls:
 13596 ;;		Nothing
 13597 ;; This function is called by:
 13598 ;;		_EUSART_Initialize
 13599 ;;		_EUSART_Receive_ISR
 13600 ;; This function uses a non-reentrant model
 13601 ;;
 13602                           
 13603                           	psect	text102
 13604  004C34                     __ptext102:
 13605                           	callstack 0
 13606  004C34                     _EUSART_DefaultOverrunErrorHandler:
 13607                           	callstack 17
 13608  004C34                     
 13609                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 13610  004C34  98AB               	bcf	171,4,c	;volatile
 13611                           
 13612                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 13613  004C36  88AB               	bsf	171,4,c	;volatile
 13614  004C38  0012               	return		;funcret
 13615  004C3A                     __end_of_EUSART_DefaultOverrunErrorHandler:
 13616                           	callstack 0
 13617                           
 13618 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 13619 ;; Defined at:
 13620 ;;		line 259 in file "mcc_generated_files/eusart.c"
 13621 ;; Parameters:    Size  Location     Type
 13622 ;;		None
 13623 ;; Auto vars:     Size  Location     Type
 13624 ;;		None
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  1    wreg      void 
 13627 ;; Registers used:
 13628 ;;		None
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13638 ;;Total ram usage:        0 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; This function calls:
 13641 ;;		Nothing
 13642 ;; This function is called by:
 13643 ;;		_EUSART_Initialize
 13644 ;;		_EUSART_Receive_ISR
 13645 ;; This function uses a non-reentrant model
 13646 ;;
 13647                           
 13648                           	psect	text103
 13649  004C70                     __ptext103:
 13650                           	callstack 0
 13651  004C70                     _EUSART_DefaultFramingErrorHandler:
 13652                           	callstack 17
 13653  004C70  0012               	return		;funcret
 13654  004C72                     __end_of_EUSART_DefaultFramingErrorHandler:
 13655                           	callstack 0
 13656                           
 13657 ;; *************** function _EUSART_DefaultErrorHandler *****************
 13658 ;; Defined at:
 13659 ;;		line 269 in file "mcc_generated_files/eusart.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;		None
 13662 ;; Auto vars:     Size  Location     Type
 13663 ;;		None
 13664 ;; Return value:  Size  Location     Type
 13665 ;;                  1    wreg      void 
 13666 ;; Registers used:
 13667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13668 ;; Tracked objects:
 13669 ;;		On entry : 0/0
 13670 ;;		On exit  : 0/0
 13671 ;;		Unchanged: 0/0
 13672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13677 ;;Total ram usage:        0 bytes
 13678 ;; Hardware stack levels used:    1
 13679 ;; Hardware stack levels required when called:    1
 13680 ;; This function calls:
 13681 ;;		_EUSART_RxDataHandler
 13682 ;; This function is called by:
 13683 ;;		_EUSART_Initialize
 13684 ;;		_EUSART_Receive_ISR
 13685 ;; This function uses a non-reentrant model
 13686 ;;
 13687                           
 13688                           	psect	text104
 13689  004C3A                     __ptext104:
 13690                           	callstack 0
 13691  004C3A                     _EUSART_DefaultErrorHandler:
 13692                           	callstack 16
 13693  004C3A                     
 13694                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 13695  004C3A  ECCE  F024         	call	_EUSART_RxDataHandler	;wreg free
 13696  004C3E  0012               	return		;funcret
 13697  004C40                     __end_of_EUSART_DefaultErrorHandler:
 13698                           	callstack 0
 13699                           
 13700 ;; *************** function _EUSART_RxDataHandler *****************
 13701 ;; Defined at:
 13702 ;;		line 249 in file "mcc_generated_files/eusart.c"
 13703 ;; Parameters:    Size  Location     Type
 13704 ;;		None
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;		None
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  1    wreg      void 
 13709 ;; Registers used:
 13710 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13711 ;; Tracked objects:
 13712 ;;		On entry : 0/0
 13713 ;;		On exit  : 0/0
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13720 ;;Total ram usage:        0 bytes
 13721 ;; Hardware stack levels used:    1
 13722 ;; This function calls:
 13723 ;;		Nothing
 13724 ;; This function is called by:
 13725 ;;		_EUSART_Receive_ISR
 13726 ;;		_EUSART_DefaultErrorHandler
 13727 ;; This function uses a non-reentrant model
 13728 ;;
 13729                           
 13730                           	psect	text105
 13731  00499C                     __ptext105:
 13732                           	callstack 0
 13733  00499C                     _EUSART_RxDataHandler:
 13734                           	callstack 17
 13735  00499C                     
 13736                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 13737  00499C  0ECD               	movlw	low _eusartRxBuffer
 13738  00499E  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13739  0049A0  6ED9               	movwf	fsr2l,c
 13740  0049A2  6ADA               	clrf	fsr2h,c
 13741  0049A4  0E00               	movlw	high _eusartRxBuffer
 13742  0049A6  22DA               	addwfc	fsr2h,f,c
 13743  0049A8  CFAE FFDF          	movff	4014,indf2	;volatile
 13744  0049AC  2A57               	incf	_eusartRxHead^0,f,c	;volatile
 13745  0049AE                     
 13746                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 13747  0049AE  0E07               	movlw	7
 13748  0049B0  6457               	cpfsgt	_eusartRxHead^0,c	;volatile
 13749  0049B2  EFDD  F024         	goto	i2u539_41
 13750  0049B6  EFDF  F024         	goto	i2u539_40
 13751  0049BA                     i2u539_41:
 13752  0049BA  EFE1  F024         	goto	i2l5607
 13753  0049BE                     i2u539_40:
 13754  0049BE                     
 13755                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 13756  0049BE  0E00               	movlw	0
 13757  0049C0  6E57               	movwf	_eusartRxHead^0,c	;volatile
 13758  0049C2                     i2l5607:
 13759                           
 13760                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 13761  0049C2  0100               	movlb	0	; () banked
 13762  0049C4  2BF9               	incf	_eusartRxCount& (0+255),f,b	;volatile
 13763  0049C6                     
 13764                           ; BSR set to: 0
 13765  0049C6  0012               	return		;funcret
 13766  0049C8                     __end_of_EUSART_RxDataHandler:
 13767                           	callstack 0
 13768                           
 13769                           	psect	text106
 13770  000000                     __ptext106:
 13771                           	callstack 0
 13772  000000                     
 13773                           	psect	rparam
 13774  0000                     
 13775                           	psect	temp
 13776  00005A                     btemp:
 13777                           	callstack 0
 13778  00005A                     	ds	1
 13779  0000                     int$flags	set	btemp
 13780  0000                     wtemp8	set	btemp+1
 13781  0000                     ttemp5	set	btemp+1
 13782  0000                     ttemp6	set	btemp+4
 13783  0000                     ttemp7	set	btemp+8
 13784                           
 13785                           	psect	idloc
 13786                           
 13787                           ;Config register IDLOC0 @ 0x200000
 13788                           ;	unspecified, using default values
 13789  200000                     	org	2097152
 13790  200000  FF                 	db	255
 13791                           
 13792                           ;Config register IDLOC1 @ 0x200001
 13793                           ;	unspecified, using default values
 13794  200001                     	org	2097153
 13795  200001  FF                 	db	255
 13796                           
 13797                           ;Config register IDLOC2 @ 0x200002
 13798                           ;	unspecified, using default values
 13799  200002                     	org	2097154
 13800  200002  FF                 	db	255
 13801                           
 13802                           ;Config register IDLOC3 @ 0x200003
 13803                           ;	unspecified, using default values
 13804  200003                     	org	2097155
 13805  200003  FF                 	db	255
 13806                           
 13807                           ;Config register IDLOC4 @ 0x200004
 13808                           ;	unspecified, using default values
 13809  200004                     	org	2097156
 13810  200004  FF                 	db	255
 13811                           
 13812                           ;Config register IDLOC5 @ 0x200005
 13813                           ;	unspecified, using default values
 13814  200005                     	org	2097157
 13815  200005  FF                 	db	255
 13816                           
 13817                           ;Config register IDLOC6 @ 0x200006
 13818                           ;	unspecified, using default values
 13819  200006                     	org	2097158
 13820  200006  FF                 	db	255
 13821                           
 13822                           ;Config register IDLOC7 @ 0x200007
 13823                           ;	unspecified, using default values
 13824  200007                     	org	2097159
 13825  200007  FF                 	db	255
 13826                           
 13827                           	psect	config
 13828                           
 13829                           ; Padding undefined space
 13830  300000                     	org	3145728
 13831  300000  FF                 	db	255
 13832                           
 13833                           ;Config register CONFIG1H @ 0x300001
 13834                           ;	Oscillator Selection bits
 13835                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
 13836                           ;	Fail-Safe Clock Monitor Enable bit
 13837                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13838                           ;	Internal/External Oscillator Switchover bit
 13839                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13840  300001                     	org	3145729
 13841  300001  08                 	db	8
 13842                           
 13843                           ;Config register CONFIG2L @ 0x300002
 13844                           ;	Power-up Timer Enable bit
 13845                           ;	PWRT = OFF, PWRT disabled
 13846                           ;	Brown-out Reset Enable bits
 13847                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 13848                           ;	Brown Out Reset Voltage bits
 13849                           ;	BORV = 18, VBOR set to 1.8 V nominal
 13850  300002                     	org	3145730
 13851  300002  1F                 	db	31
 13852                           
 13853                           ;Config register CONFIG2H @ 0x300003
 13854                           ;	Watchdog Timer Enable bit
 13855                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 13856                           ;	Watchdog Timer Postscale Select bits
 13857                           ;	WDTPS = 32768, 1:32768
 13858  300003                     	org	3145731
 13859  300003  1E                 	db	30
 13860                           
 13861                           ; Padding undefined space
 13862  300004                     	org	3145732
 13863  300004  FF                 	db	255
 13864                           
 13865                           ;Config register CONFIG3H @ 0x300005
 13866                           ;	CCP2 MUX bit
 13867                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 13868                           ;	PORTB A/D Enable bit
 13869                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 13870                           ;	Low-Power Timer1 Oscillator Enable bit
 13871                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13872                           ;	HFINTOSC Fast Start-up
 13873                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 13874                           ;	MCLR Pin Enable bit
 13875                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
 13876  300005                     	org	3145733
 13877  300005  0B                 	db	11
 13878                           
 13879                           ;Config register CONFIG4L @ 0x300006
 13880                           ;	Stack Full/Underflow Reset Enable bit
 13881                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13882                           ;	Single-Supply ICSP Enable bit
 13883                           ;	LVP = OFF, Single-Supply ICSP disabled
 13884                           ;	Extended Instruction Set Enable bit
 13885                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13886                           ;	Background Debugger Enable bit
 13887                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 13888  300006                     	org	3145734
 13889  300006  81                 	db	129
 13890                           
 13891                           ; Padding undefined space
 13892  300007                     	org	3145735
 13893  300007  FF                 	db	255
 13894                           
 13895                           ;Config register CONFIG5L @ 0x300008
 13896                           ;	Code Protection Block 0
 13897                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13898                           ;	Code Protection Block 1
 13899                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13900                           ;	Code Protection Block 2
 13901                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13902                           ;	Code Protection Block 3
 13903                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13904  300008                     	org	3145736
 13905  300008  0F                 	db	15
 13906                           
 13907                           ;Config register CONFIG5H @ 0x300009
 13908                           ;	Boot Block Code Protection bit
 13909                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13910                           ;	Data EEPROM Code Protection bit
 13911                           ;	CPD = OFF, Data EEPROM not code-protected
 13912  300009                     	org	3145737
 13913  300009  C0                 	db	192
 13914                           
 13915                           ;Config register CONFIG6L @ 0x30000A
 13916                           ;	Write Protection Block 0
 13917                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13918                           ;	Write Protection Block 1
 13919                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13920                           ;	Write Protection Block 2
 13921                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13922                           ;	Write Protection Block 3
 13923                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 13924  30000A                     	org	3145738
 13925  30000A  0F                 	db	15
 13926                           
 13927                           ;Config register CONFIG6H @ 0x30000B
 13928                           ;	Configuration Register Write Protection bit
 13929                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13930                           ;	Boot Block Write Protection bit
 13931                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13932                           ;	Data EEPROM Write Protection bit
 13933                           ;	WRTD = OFF, Data EEPROM not write-protected
 13934  30000B                     	org	3145739
 13935  30000B  E0                 	db	224
 13936                           
 13937                           ;Config register CONFIG7L @ 0x30000C
 13938                           ;	Table Read Protection Block 0
 13939                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13940                           ;	Table Read Protection Block 1
 13941                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13942                           ;	Table Read Protection Block 2
 13943                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13944                           ;	Table Read Protection Block 3
 13945                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13946  30000C                     	org	3145740
 13947  30000C  0F                 	db	15
 13948                           
 13949                           ;Config register CONFIG7H @ 0x30000D
 13950                           ;	Boot Block Table Read Protection bit
 13951                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13952  30000D                     	org	3145741
 13953  30000D  40                 	db	64
 13954                           tosu	equ	0xFFF
 13955                           tosh	equ	0xFFE
 13956                           tosl	equ	0xFFD
 13957                           stkptr	equ	0xFFC
 13958                           pclatu	equ	0xFFB
 13959                           pclath	equ	0xFFA
 13960                           pcl	equ	0xFF9
 13961                           tblptru	equ	0xFF8
 13962                           tblptrh	equ	0xFF7
 13963                           tblptrl	equ	0xFF6
 13964                           tablat	equ	0xFF5
 13965                           prodh	equ	0xFF4
 13966                           prodl	equ	0xFF3
 13967                           indf0	equ	0xFEF
 13968                           postinc0	equ	0xFEE
 13969                           postdec0	equ	0xFED
 13970                           preinc0	equ	0xFEC
 13971                           plusw0	equ	0xFEB
 13972                           fsr0h	equ	0xFEA
 13973                           fsr0l	equ	0xFE9
 13974                           wreg	equ	0xFE8
 13975                           indf1	equ	0xFE7
 13976                           postinc1	equ	0xFE6
 13977                           postdec1	equ	0xFE5
 13978                           preinc1	equ	0xFE4
 13979                           plusw1	equ	0xFE3
 13980                           fsr1h	equ	0xFE2
 13981                           fsr1l	equ	0xFE1
 13982                           bsr	equ	0xFE0
 13983                           indf2	equ	0xFDF
 13984                           postinc2	equ	0xFDE
 13985                           postdec2	equ	0xFDD
 13986                           preinc2	equ	0xFDC
 13987                           plusw2	equ	0xFDB
 13988                           fsr2h	equ	0xFDA
 13989                           fsr2l	equ	0xFD9
 13990                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    32
    Data        0
    BSS         183
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160    101     159
    BANK1           256      6     138
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2531$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2537$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2543$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2549$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2548	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2543	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2542	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2537	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2536	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2531	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2530	const PTR FTN()enum E3101 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1987_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), HDC1080_Read@regist(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), HDC1080_Read@regist(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), HDC1080_Read@regist(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3101[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 1
		 -> HDC1080_Read@regist(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _atoi->_isspace
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _HDC1080_temp_GetValue->___fladd
    ___fladd->___fldiv
    _HDC1080_humy_GetValue->___fldiv
    ___fldiv->___flmul
    _HDC1080_Read->_I2C_ReadNBytes
    _HDC1080_Read->_I2C_WriteNBytes
    _I2C_MasterRead->_I2C_MasterOperation
    _HDC1080_Init->_I2C_Write1ByteRegister
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  520818
                                              4 BANK1      2     2      0
                       _HDC1080_Init
              _HDC1080_humy_GetValue
              _HDC1080_temp_GetValue
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   40242
                                             95 BANK0      6     0      6
                                              0 BANK1      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   39957
                                             87 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   39373
                                             61 BANK0     26    20      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   29947
                                             78 COMRAM     7     0      7
                                              0 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             54 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4187
                                             70 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3565
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2282
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _HDC1080_temp_GetValue                               10     6      4  194288
                                             70 COMRAM    10     6      4
                       _HDC1080_Read
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3622
                                             54 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _HDC1080_humy_GetValue                               10     6      4  190666
                                             54 COMRAM    10     6      4
                       _HDC1080_Read
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3083
                                             29 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _HDC1080_Read                                         3     3      0  183448
                                             26 COMRAM     3     3      0
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteNBytes                                      5     1      4   92646
                                             21 COMRAM     5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (3) _I2C_ReadNBytes                                       5     1      4   90776
                                             21 COMRAM     5     1      4
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterRead                                       0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (1) _HDC1080_Init                                         2     2      0   95132
                                             24 COMRAM     2     2      0
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Write1ByteRegister                               3     1      2   95132
                                             21 COMRAM     3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetDataCompleteCallback                         4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HDC1080_Init
     _I2C_Write1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   _HDC1080_humy_GetValue
     _HDC1080_Read
       _I2C_ReadNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterRead
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetBuffer
       _I2C_WriteNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
     ___fldiv
       ___flmul (ARG)
     ___flmul
     ___xxtofl
   _HDC1080_temp_GetValue
     _HDC1080_Read
       _I2C_ReadNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterRead
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetBuffer
       _I2C_WriteNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
     ___fldiv
       ___flmul (ARG)
     ___flmul
     ___xxtofl
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
           ___fldiv
             ___flmul (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _EUSART_Write
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      8A       7       53.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      9F       5       99.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     182      32        0.0%
DATA                 0      0     182       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri May 28 16:31:36 2021

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
                                 ___fldiv@aexp 0036                                   ___fldiv@bexp 0035  
                                 ___fldiv@sign 002E                        ??_I2C_DO_SEND_ADR_WRITE 0006  
                                  _SSPSTATbits 000FC7                                             l51 4342  
                                           l90 4942                                             l93 4916  
                                           l69 4524                                             l78 46A6  
                                           l96 48EA                                             l99 496E  
                                 ___awdiv@sign 000A                            ___wmul@multiplicand 0007  
                          __size_of_I2C_Poller 001E                          ??_I2C_DO_SEND_RESTART 0005  
                 __size_of_I2C_MasterOperation 0044                                            l102 47B0  
                                          l213 40F8                                            l223 472E  
                                          l312 4174                                            l217 499A  
                __size_of_I2C_MasterSendTxData 0008                                            l209 4B28  
                                          l402 4C5A                                            l306 4B84  
                                          l330 4C1E                                            l226 4BDE  
                                          l411 4C32                                            l236 4A8E  
                                          l405 4B3C                                            l333 4C16  
                                          l229 4BE6                                            l245 4AE6  
                                          l342 4BFE                                            l262 4ACE  
                                          l239 4AFE                                            l351 4B78  
                                          l256 41EE                                            l408 4C2C  
                                          l432 4C46                                            l272 4B6C  
                                          l336 4C0E                                            l281 3BB8  
                                          l345 4BF6                                            l426 4C66  
                                          l266 42D4                                            l275 4B5C  
                                          l339 4C06                                            l435 4B3E  
                                          l348 4BEE                                            l604 4B9A  
                                          l429 4C6E                                            l381 4C6A  
                                          l365 4C56                                            l269 4B90  
                                          l357 43A8                                            l390 4C5E  
                                          l278 3B80                                            l294 3F66  
                                          l295 3FD4                                            l439 4B4C  
                                          l368 4C52                                            l384 4C4A  
                                          l712 4A44                                            l456 4B14  
                                          l721 3E84                                            l633 4BCC  
                                          l378 4AB0                                            l642 4BAE  
                                          l570 4264                                            l387 4C26  
                                          l715 461A                                            l459 4BA4  
                                          l396 4C4E                                            l636 4BC2  
                                          l660 4C42                                            l492 48BE  
                                          l724 4A6A                                            l645 4BB8  
                                          l718 396A                                            l399 4C62  
                                          l639 4BD6                                            l594 453A  
                                          l595 4550                                            l598 457C  
                                          l955 3AF4                                            l983 3F2E  
                                          l968 3DD8                                            l994 36C0  
                                          l989 367A                                            l998 4820  
               __size_of_HDC1080_temp_GetValue 00D0                  __end_of_HDC1080_temp_GetValue 396C  
                       ??_EUSART_RxDataHandler 0001                                            _pad 396C  
                       fp__I2C_DO_RX_NACK_STOP 0000                         _I2C_MasterWaitForEvent 4B3E  
               ?_EUSART_SetFramingErrorHandler 0005                                   ___awmod@sign 000A  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                   _HDC1080_Init 4A1C  
                                 _HDC1080_Read 45D0                                   ___flmul@aexp 0012  
                                 ___flmul@bexp 0017                   ??_I2C_SetAddressNackCallback 000E  
                                 ___flmul@sign 0011                                   ___flmul@temp 001C  
                                 ___flmul@prod 0018                         _I2C_Write1ByteRegister 42D6  
                     ??_I2C_CallbackReturnStop 0010                                   _I2C_DO_RESET 4B6E  
                                 ___fltol@exp1 000E                                           l1021 35BC  
                      ??_rd2RegCompleteHandler 0010                                           l1311 2D7A  
                                         l1320 2E62                                           l1306 2F56  
                                         l1402 4A1A                                           l1308 2DB6  
                                         l1252 24C2                                           l1317 2DFC  
                                         l1261 2792                                           l1253 24B0  
                                         l1342 2BBC                                           l1254 2476  
                                         l1510 181C                                           l1319 2E74  
                                         l4001 4C5C                                           l1345 2A4E  
                                         l1338 2858                                           l1602 37BE  
                                         l4003 4C58                                           l4011 4940  
                                         l1355 2B7E                                           l1347 2AC6  
                                         l1443 39B2                                           l1348 2AB4  
                                         l4005 4C2E                                           l1269 25DC  
                                         l1382 331C                                           l1278 26AC  
                                         l1294 4660                                           l1446 39F4  
                                         l4031 4944                                           l4007 4918  
                                         l4015 48EC                                           l4023 48C0  
                                         l4103 4C50                                           l1279 269A  
                                         l1631 34AE                                           l1703 389A  
                                         l1640 3168                                           l1448 3A30  
                                         l4033 4958                                           l4009 492C  
                                         l4017 4900                                           l4025 48D4  
                                         l4041 479A                                           l1393 32B4  
                                         l1713 4464                                           l1553 1D5E  
                                         l1386 3258                                           l1650 4858  
                                         l1634 34B6                                           l1466 1C66  
                                         l4035 496C                                           l4019 4914  
                                         l4027 48E8                                           l4043 47AE  
                                         l4051 4C22                                           l4131 4B8E  
                                         l4203 3F74                                           l1379 31C0  
                                         l1643 30AC                                           l1484 1484  
                                         l4125 4C6C                                           l4221 4B82  
                                         l4053 4C18                                           l4061 4C14  
                                         l1718 446C                                           l4039 4772  
                                         l4071 4C48                                           l4047 4B2A  
                                         l4231 410A                                           l4127 4B86  
                                         l4135 4B5E                                           l4143 4B4E  
                                         l4151 3AF6                                           l4055 4C1C  
                                         l1591 4404                                           l1664 47E8  
                                         l1592 440C                                           l4233 410E  
                                         l4225 40FA                                           l4129 4B8A  
                                         l4137 4B62                                           l4145 4B52  
                                         l4209 3F7C                                           l4217 4B7A  
                                         l4065 4C00                                           l4321 4ABA  
                                         l1585 21EC                                           l1658 45CE  
                                         l1578 22D2                                           l4315 4C60  
                                         l4075 4C28                                           l4227 4102  
                                         l4243 411C                                           l4139 4B6A  
                                         l4147 4B5A                                           l4171 3B84  
                                         l4163 3B1E                                           l4155 3B0E  
                                         l4219 4B7E                                           l4059 4C10  
                                         l4091 4C08                                           l4067 4C04  
                                         l4251 4BF8                                           l4083 4BF0  
                                         l4323 4ABE                                           l5203 4BD8  
                                         l4237 4114                                           l4173 3B96  
                                         l4093 4C0C                                           l4253 4BFC  
                                         l4085 4BF4                                           l4077 4BE8  
                                         l4261 4B76                                           l4317 4AB2  
                                         l5141 4086                                           l1693 44CA  
                                         l4175 3BB0                                           l4159 3B16  
                                         l4191 3F5C                                           l4079 4BEC  
                                         l4319 4AB6                                           l5151 4098  
                                         l5143 4088                                           l5135 406E  
                                         l1679 406A                                           l1687 46EA  
                                         l4089 4C4C                                           l4097 4C44  
                                         l4177 3BB6                                           l4169 3B26  
                                         l4193 3F60                                           l4185 3F30  
                                         l4257 4B6E                                           l4273 4358  
                                         l4265 4344                                           l5161 40BA  
                                         l5153 409A                                           l5145 408A  
                                         l5137 4072                                           l4099 4C54  
                                         l4187 3F3E                                           l4259 4B72  
                                         l4267 4348                                           l4291 4266  
                                         l5171 40E2                                           l5163 40C2  
                                         l5155 40A2                                           l5147 408C  
                                         l5139 4082                                           l7011 3754  
                                         l7003 36C2                                           l1699 488E  
                                         l4189 3F44                                           l4269 4350  
                                         l4293 426A                                           l5173 40EA  
                                         l5165 40CA                                           l5157 40AA  
                                         l5149 4090                                           l7021 37B6  
                                         l7005 36E2                                           l6301 4022  
                                         l7101 10F0                                           ?_pad 0017  
                                         l5191 4974                                           l4199 3F6C  
                                         l4279 4360                                           l4295 427A  
                                         l4551 4A9E                                           l5175 40EE  
                                         l5167 40D2                                           l5159 40B2  
                                         l5183 4AD0                                           l6311 22EE  
                                         l7007 3720                                           l7015 3760  
                                         l6303 4058                                           l7111 111E  
                                         l7103 1102                                           l5193 4984  
                                         l4297 428E                                           l4561 46EE  
                                         l5185 4BE0                                           l4553 4AAE  
                                         l5177 40F2                                           l5169 40DA  
                                         l6401 24A2                                           l6321 2322  
                                         l6313 22F0                                           l7017 3772  
                                         l7009 3748                                           l7041 2F78  
                                         l7025 446E                                           l7033 4444  
                                         l7201 152C                                           l7121 1192  
                                         l7105 110E                                           l7113 1124  
                                         l5195 4988                                           l4299 4294  
                                         l4571 4718                                           l4563 46F2  
                                         l5179 40F6                                           l6403 24A4  
                                         l6331 2354                                           l6315 2300  
                                         l6323 232A                                           l6307 22D4  
                                         l7051 3060                                           l7043 2FCE  
                                         l7027 447E                                           l7035 4456  
                                         l7211 1570                                           l7203 153E  
                                         l7123 11AE                                           l7115 114A  
                                         l7131 11F8                                           l7107 1116  
                                         l4557 4C64                                           l5197 4994  
                                         l5189 4970                                           l4573 4720  
                                         l4565 4702                                           l4549 4A90  
                                         l6501 2772                                           l6421 252C  
                                         l6413 24F4                                           l6405 24AE  
                                         l6341 238A                                           l6333 235A  
                                         l6325 233A                                           l6317 2310  
                                         l6309 22E0                                           l7061 3148  
                                         l7053 309C                                           l7045 2FE2  
                                         l7029 440E                                           l7301 1A0E  
                                         l7221 15BA                                           l7213 1588  
                                         l7205 154C                                           l7141 1282  
                                         l7133 121E                                           l7125 11C6  
                                         l7109 111A                                           l4559 4C68  
                                         l5199 4998                                           l4575 4724  
                                         l4567 4704                                           l6503 2780  
                                         l6423 2530                                           l6415 2504  
                                         l6407 24D0                                           l6431 2550  
                                         l6351 23C6                                           l6343 239A  
                                         l6335 2368                                           l6327 2340  
                                         l6319 2320                                           l7071 457E  
                                         l7063 3158                                           l7047 2FF0  
                                         l7055 30D0                                           l7039 2F58  
                                         l6511 46B4                                           l7311 1A6C  
                                         l7303 1A12                                           l7223 15CE  
                                         l7231 16C4                                           l7215 159A  
                                         l7207 1550                                           l7151 12E6  
                                         l7143 129A                                           l7127 11D0  
                                         l7119 1180                                           l4577 4728  
                                         l4569 4708                                           l6601 2D2E  
                                         l6505 2782                                           l6433 2576  
                                         l6441 25CC                                           l6425 253E  
                                         l6417 2512                                           l6409 24E0  
                                         l6361 23E4                                           l6353 23D4  
                                         l6345 239C                                           l6337 236A  
                                         l6329 2352                                           l5801 4218  
                                         l7073 4582                                           l7401 33B8  
                                         l7057 310C                                           l6281 4562  
                                         l6273 4528                                           l6513 46C6  
                                         l6521 486A                                           l7321 1AAA  
                                         l7313 1A7C                                           l7305 1A30  
                                         l7241 1790                                           l7233 16E2  
                                         l7225 1632                                           l7209 1562  
                                         l7217 15A2                                           l7161 13B0  
                                         l7145 12A4                                           l7137 1254  
                                         l4579 472C                                           l5571 44E4  
                                         l6611 2D78                                           l6603 2D3E  
                                         l6451 2620                                           l6443 25F2  
                                         l6435 25AA                                           l6427 2540  
                                         l6419 2520                                           l6371 23F8  
                                         l6363 23E8                                           l6355 23D8  
                                         l6339 237A                                           l6347 23A4  
                                         l5811 4262                                           l5803 421C  
                                         l6531 4A46                                           l7067 4822  
                                         l7075 4596                                           l7403 33C0  
                                         l7059 3120                                           l6283 4564  
                                         l6275 4528                                           l6291 4B94  
                                         l6515 46CA                                           l6523 4882  
                                         l7331 1AE0                                           l7323 1ABA  
                                         l7315 1A80                                           l7307 1A4C  
                                         l7251 1808                                           l7243 17A0  
                                         l7235 1716                                           l7227 168A  
                                         l7219 15AA                                           l7171 1432  
                                         l7163 13E4                                           l7155 131C  
                                         l7139 1266                                           l7091 109A  
                                         l7083 106A                                           l5581 4664  
                                         l5573 44F8                                           l5821 45EA  
                                         l6621 2DC6                                           l6613 2D84  
                                         l6605 2D46                                           l6541 2BD8  
                                         l6701 2822                                           l6461 264A  
                                         l6453 262E                                           l6445 2602  
                                         l6437 25AC                                           l6429 254A  
                                         l6381 240C                                           l6373 23FC  
                                         l6365 23EC                                           l6357 23DC  
                                         l6349 23B4                                           l5805 4220  
                                         l6533 4A62                                           l7077 45C4  
                                         l7413 346E                                           l7405 33F6  
                                         l6285 4574                                           l6277 4548  
                                         l6293 3FD6                                           l6509 46A8  
                                         l6517 485A                                           l7341 1B3C  
                                         l7333 1AEC                                           l7325 1AC2  
                                         l7317 1A90                                           l7309 1A5E  
                                         l7261 18BE                                           l7253 1814  
                                         l7245 17B0                                           l7237 1748  
                                         l7229 16BE                                           l7173 1444  
                                         l7181 1490                                           l7165 13EC  
                                         l7157 1350                                           l7149 12CC  
                                         l7093 10BE                                           l7085 1074  
                                         l7501 1E70                                           l3991 4AE8  
                                         l5583 467A                                           l5575 450C  
                                         l5567 44CE                                           l5823 4604  
                                         l6623 2DDC                                           l6631 2E0C  
                                         l6615 2DA2                                           l6607 2D56  
                                         l6551 2C0C                                           l6543 2BDA  
                                         l6711 2878                                           l6703 2832  
                                         l5831 31D0                                           l6471 267C  
                                         l6463 265A                                           l6455 2630  
                                         l6439 25BC                                           l6391 245E  
                                         l6383 2410                                           l6375 2400  
                                         l6367 23F0                                           l6359 23E0  
                                         l5591 4BA6                                           l5807 422C  
                                         l7079 45C8                                           l7415 3480  
                                         l6287 4578                                           l6279 4552  
                                         l6295 3FE8                                           l6519 4866  
                                         l6527 47B2                                           l7351 1B86  
                                         l7335 1AF2                                           l7343 1B42  
                                         l7327 1AD0                                           l7319 1AA2  
                                         l7271 1906                                           l7263 18D0  
                                         l7255 1838                                           l7247 17E4  
                                         l7239 175E                                           l7191 14D0  
                                         l7175 1456                                           l7159 1356  
                                         l7167 141E                                           l7095 10C8  
                                         l7087 1084                                           l7431 3804  
                                         l7423 37C0                                           l7511 1F0C  
                                         l7503 1E96                                           l3993 4A6C  
                                         l3985 4178                                           l5761 4302  
                                         l5585 468E                                           l5577 4510  
                                         l5569 44CE                                           l5817 45D0  
                                         l6633 2E1A                                           l6625 2DE2  
                                         l6617 2DA4                                           l6609 2D6A  
                                         l6561 2C3E                                           l6545 2BEA  
                                         l6553 2C14                                           l6537 2BBE  
                                         l6801 2BAC                                           l6721 28B8  
                                         l6705 2842                                           l5841 320E  
                                         l5833 31E6                                           l5825 316C  
                                         l6481 26D6                                           l6473 2692  
                                         l6457 263E                                           l6449 2616  
                                         l6465 265C                                           l6393 246E  
                                         l6377 2404                                           l6369 23F4  
                                         l6385 2414                                           l7601 38DE  
                                         l5593 4BC4                                           l5809 4238  
                                         l7417 3492                                           l7409 342E  
                                         l6289 457A                                           l6297 3FFA  
                                         l7361 1BB6                                           l7353 1B92  
                                         l7345 1B54                                           l7337 1B18  
                                         l7329 1AD8                                           l7281 193C  
                                         l7273 1916                                           l7265 18DE  
                                         l7257 189C                                           l7249 17F4  
                                         l7193 1506                                           l7177 145E  
                                         l7169 142E                                           l7097 10D0  
                                         l7089 1092                                           l7433 381C  
                                         l7425 37EA                                           l7513 1F2C  
                                         l7505 1E9E                                           l7521 1F96  
                                         l3995 4A7C                                           l3987 418A  
                                         l5763 4316                                           l5755 42D8  
                                         l5587 4692                                           l5579 4664  
                                         l5819 45D4                                           l6643 2E84  
                                         l6651 2ECC                                           l6635 2E1E  
                                         l6627 2DEC                                           l6619 2DB4  
                                         l6571 2C72                                           l6563 2C40  
                                         l6555 2C24                                           l6547 2BFA  
                                         l6539 2BCA                                           l6731 2902  
                                         l6723 28C4                                           l6715 288C  
                                         l6707 2848                                           l5851 3296  
                                         l5843 3240                                           l5827 317C  
                                         l7611 3E1C                                           l6491 2752  
                                         l6483 2710                                           l6459 2646  
                                         l6467 266A                                           l6395 2484  
                                         l6387 2418                                           l6379 2408  
                                         l7603 395A                                           l5595 4BBA  
                                         l5771 4B26                                           l6811 3A32  
                                         l6299 4004                                           l7371 1C10  
                                         l7355 1B9A                                           l7347 1B6E  
                                         l7339 1B34                                           l7291 1970  
                                         l7283 1940                                           l7275 191A  
                                         l7259 18AC                                           l7267 18E6  
                                         l7195 150E                                           l7187 14A2  
                                         l7179 1478                                           l7099 10E2  
                                         l7435 383A                                           l7531 2042  
                                         l7523 1FBA                                           l7515 1F3A  
                                         l7507 1EAC                                           l7451 1CB2  
                                         l7443 1C68                                           l3997 4A84  
                                         l3989 41BE                                           l5765 432A  
                                         l5757 42D8                                           l6661 2F36  
                                         l6653 2EE6                                           l6645 2E90  
                                         l6637 2E2C                                           l6629 2DFA  
                                         l6581 2CB8                                           l6565 2C50  
                                         l6573 2C7A                                           l6557 2C2A  
                                         l6549 2C0A                                           l6741 2954  
                                         l6733 290E                                           l6725 28DC  
                                         l6717 2898                                           l6709 2868  
                                         l5861 32EC                                           l5853 32A4  
                                         l5845 3242                                           l5837 31FA  
                                         l5829 318A                                           l7613 3E74  
                                         l6493 2756                                           l6477 26BC  
                                         l6485 2712                                           l6469 266E  
                                         l6397 2490                                           l6389 2442  
                                         l5597 4BCE                                           l5589 4BB0  
                                         l5773 4C40                                           l5781 48B0  
                                         l7381 331E                                           l6821 3A5E  
                                         l6813 3A36                                           l6901 3F26  
                                         l6805 461C                                           l7373 1C20  
                                         l7365 1BEA                                           l7357 1BAA  
                                         l7349 1B74                                           l7293 1974  
                                         l7285 1946                                           l7277 1920  
                                         l7269 18F8                                           l7189 14B4  
                                         l7197 1512                                           l7437 384C  
                                         l7429 37F6                                           l7533 2054  
                                         l7525 1FCA                                           l7509 1ED2  
                                         l7461 1CD8                                           l7453 1CBE  
                                         l7445 1C8E                                           l3999 4A8C  
                                         l5767 432E                                           l5759 42EE  
                                         l5943 4A1C                                           l6663 2F44  
                                         l6655 2EFC                                           l6647 2E9E  
                                         l6639 2E5A                                           l6591 2CE0  
                                         l6583 2CBC                                           l6575 2C8A  
                                         l6567 2C60                                           l6559 2C30  
                                         l6751 29D2                                           l6743 2964  
                                         l6735 291E                                           l6727 28E8  
                                         l6719 28A2                                           l5863 32FC  
                                         l5855 32C2                                           l5847 324E  
                                         l5839 3202                                           l7607 3DDA  
                                         l6495 2764                                           l6487 2722  
                                         l6479 26C8                                           l6399 2494  
                                         l5791 41F2                                           l5783 48B2  
                                         l5775 4890                                           l7391 3390  
                                         l7383 3332                                           l6831 3A8C  
                                         l6823 3A66                                           l6815 3A44  
                                         l6903 3F2C                                           l6911 35FC  
                                         l6807 462C                                           l7375 1C26  
                                         l7367 1BFC                                           l7359 1BB0  
                                         l7279 192C                                           l7287 194C  
                                         l7295 197A                                           l7199 151A  
                                         l7439 3876                                           l7551 2188  
                                         l7535 206C                                           l7543 20D6  
                                         l7527 1FFE                                           l7519 1F84  
                                         l7455 1CC0                                           l7447 1C9C  
                                         l7631 3CA0                                           l7623 3C7A  
                                         l5945 4A2A                                           l6665 2F4A  
                                         l6657 2F16                                           l6649 2EC8  
                                         l6577 2CA0                                           l6569 2C70  
                                         l6761 2A4C                                           l6753 2A08  
                                         l6745 2980                                           l6737 292A  
                                         l6729 28F4                                           l6681 27B0  
                                         l5865 330A                                           l5857 32C4  
                                         l5849 328A                                           l7609 3DDE  
                                         l6497 276A                                           l6489 2732  
                                         l5793 41FE                                           l5769 4B16  
                                         l5785 48BC                                           l5777 48A8  
                                         l5881 4B04                                           l7393 3394  
                                         l7385 3336                                           l6841 3AC6  
                                         l6833 3A94                                           l6825 3A6A  
                                         l6817 3A4C                                           l6921 3668  
                                         l6913 362A                                           l7369 1C08  
                                         l7377 1C42                                           l7297 19D2  
                                         l7289 195E                                           l7561 224E  
                                         l7553 21BC                                           l7545 2104  
                                         l7537 207A                                           l7529 200E  
                                         l7481 1D6C                                           l7473 1CEA  
                                         l7465 1CDE                                           l7457 1CD2  
                                         l7449 1CAE                                           l7617 49F2  
                                         l7641 3D06                                           l7633 3CA2  
                                         l7625 3C7E                                           l7811 3B5A  
                                         l6667 2F4C                                           l6659 2F32  
                                         l6595 2CF4                                           l6579 2CB0  
                                         l6587 2CD0                                           l6771 2AAC  
                                         l6763 2A5E                                           l6755 2A16  
                                         l6747 298C                                           l6739 293A  
                                         l6691 27F6                                           l6683 27C0  
                                         l6675 2794                                           l5867 330C  
                                         l5859 32C8                                           l6499 276C  
                                         l5795 420C                                           l5787 4B9C  
                                         l5779 48AA                                           l5883 4B08  
                                         l7387 333A                                           l6851 3AEC  
                                         l6843 3AC8                                           l6835 3AA2  
                                         l6827 3A72                                           l6819 3A50  
                                         l6923 36B8                                           l6915 363A  
                                         l6907 35BE                                           l6931 4800  
                                         l7299 1A06                                           l7571 228C  
                                         l7563 225C                                           l7555 21FC  
                                         l7539 20AA                                           l7491 1DE6  
                                         l7483 1D6E                                           l7803 1D1E  
                                         l7619 49FC                                           l7635 3CB6  
                                         l7627 3C82                                           l7813 414E  
                                         l6597 2D0E                                           l6589 2CE0  
                                         l6781 2B1A                                           l6765 2A6C  
                                         l6757 2A34                                           l6749 29A8  
                                         l6693 27FC                                           l6685 27D0  
                                         l6677 27A0                                           l5797 4210  
                                         l5789 41F0                                           l5885 4B0C  
                                         l7805 33E0                                           l7397 339A  
                                         l7389 3358                                           l6845 3ACE  
                                         l6837 3AA8                                           l6829 3A84  
                                         l6861 3D44                                           l6925 36BE  
                                         l6917 3648                                           l6909 35EC  
                                         l6933 4810                                           l7565 2270  
                                         l7549 2176                                           l7493 1E06  
                                         l7485 1D94                                           l7477 1CF6  
                                         l7469 1CE4                                           l7637 3CCA  
                                         l7629 3C9E                                           l7807 4392  
                                         l6599 2D1E                                           l6791 2B82  
                                         l6775 2AD6                                           l6783 2B1E  
                                         l6767 2A70                                           l6759 2A3E  
                                         l6695 2802                                           l6687 27E0  
                                         l6679 27AE                                           l5799 4214  
                                         l5887 4B10                                           l5879 4B00  
                                         l7399 33B0                                           l6839 3ABE  
                                         l6847 3AD4                                           l6871 3D78  
                                         l6863 3D48                                           l6855 3D2A  
                                         l6919 365A                                           l6951 3522  
                                         l6943 34E2                                           l7559 2228  
                                         l7495 1E14                                           l7487 1DCA  
                                         l7479 1D4C                                           l7575 229A  
                                         l7591 43B2                                           l7639 3CE8  
                                         l7809 3FAE                                           l6793 2B92  
                                         l6785 2B38                                           l6777 2AE2  
                                         l6769 2A7E                                           l6697 2810  
                                         l6689 27E6                                           l6849 3AE4  
                                         l6881 3DB2                                           l6873 3D80  
                                         l6865 3D56                                           l6857 3D2E  
                                         l6929 47EA                                           l6961 3552  
                                         l6953 3530                                           l6945 350C  
                                         l6937 34B8                                           l7577 22C0  
                                         l7569 227E                                           l7489 1DD8  
                                         l7593 43C0                                           l6795 2BA0  
                                         l6787 2B4C                                           l6779 2AF0  
                                         l6699 2812                                           l6875 3D8E  
                                         l6883 3DB8                                           l6867 3D5E  
                                         l6859 3D3C                                           l6891 3E86  
                                         l6971 357C                                           l6963 355C  
                                         l6947 350E                                           l6939 34CE  
                                         l7499 1E5E                                           l7595 43E6  
                                         l6797 2BA2                                           l6789 2B66  
                                         l7597 389C                                           l6885 3DC8  
                                         l6877 3DA4                                           l6869 3D70  
                                         l6893 3EB4                                           l6973 358C  
                                         l6949 351E                                           l6981 396C  
                                         l7589 43AA                                           l6799 2BA8  
                                         l7599 38A0                                           l6887 3DD0  
                                         l6879 3DAC                                           l6895 3EC4  
                                         l6975 359C                                           l6959 3548  
                                         l6991 39BE                                           l6983 397C  
                                         l6897 3EF2                                           l6977 35AC  
                                         l6969 3570                                           l6993 39D2  
                                         l6985 3990                                           l6899 3F02  
                                         l6995 39D6                                           l6987 399E  
                                         l6997 3A04                                           l6989 39AA  
                                         l6999 3A18                                           STR_1 103E  
                                         STR_2 1021                                           STR_3 1055  
                                         STR_4 105D                                           STR_7 1059  
                                         STR_8 1061                                           u3010 418A  
                                         u3011 4186                                           u3020 4A7C  
                                         u3100 3F5C                                           u3021 4A78  
                                         u3101 3F58                                           _LATA 000F89  
                                         u3030 4B3A                                           _LATB 000F8A  
                                         u3031 4B34                                           _LATC 000F8B  
                                         _LATD 000F8C                                           _LATE 000F8D  
                                         u3036 4B3C                                           u3140 4B4C  
                                         u3220 4ACE                                           u3141 4B48  
                                         u3221 4ACA                                           u3070 3B0A  
                                         u3118 3F8A                                           u3150 427A  
                                         u3071 3B06                                           u3119 3F9C  
                                         u3151 4276                                           u3128 412A  
                                         u3160 428E                                           u3129 413C  
                                         u3161 428A                                           u3090 3BB0  
                                         u3138 436E                                           u3091 3BAC  
                                         u3139 4380                                           u3088 3B34  
                                         u3089 3B48                                           u3178 42BE  
                                         u6010 453A                                           u3179 42D0  
                                         u6011 4536                                           u6100 2310  
                                         u6020 4548                                           u6101 230C  
                                         u6021 4544                                           u6110 2352  
                                         u6030 4574                                           u6111 234E  
                                         u6031 4570                                           u6200 2484  
                                         u6120 2368                                           u7000 3D56  
                                         u6040 3FE8                                           u6201 2480  
                                         u6121 2364                                           u7001 3D52  
                                         u6041 3FE4                                           u6210 24A2  
                                         u6130 237A                                           u7010 3D70  
                                         u6050 3FFA                                           u6211 249E  
                                         u6131 2376                                           u7011 3D6C  
                                         u6051 3FF6                                           u4700 4984  
                                         u3660 4A9E                                           u6300 25F2  
                                         u6220 24C2                                           u6140 238A  
                                         u7020 3D8E                                           u7100 3648  
                                         u6060 4022                                           u4701 4980  
                                         u3661 4A9A                                           u6301 25EE  
                                         u6221 24BE                                           u6141 2386  
                                         u7021 3D8A                                           u7101 3644  
                                         u6061 401E                                           u3670 4702  
                                         u5350 44E4                                           u6310 2602  
                                         u6230 24D0                                           u6150 23C6  
                                         u7030 3DA4                                           u7110 3668  
                                         u6070 4058                                           u3671 46FE  
                                         u5351 44E0                                           u6311 25FE  
                                         u6231 24CC                                           u6151 23C2  
                                         u7031 3DA0                                           u7111 3664  
                                         u6071 4054                                           u3680 4718  
                                         u5360 4524                                           u6400 26D6  
                                         u6320 262E                                           u6240 24E0  
                                         u6160 23D4                                           u6080 22EE  
                                         u7040 3DC8                                           u7120 36B8  
                                         u7200 359C                                           u8000 1BE4  
                                         u3681 4714                                           u5361 4520  
                                         u6401 26D2                                           u6321 262A  
                                         u6241 24DC                                           u6161 23D0  
                                         u6081 22EA                                           u7041 3DC4  
                                         u7121 36B4                                           u7201 3598  
                                         u8001 1BDE                                           u5610 42EE  
                                         u5370 467A                                           u6410 2710  
                                         u6330 263E                                           u6250 2512  
                                         u6170 2442                                           u6090 2300  
                                         u7050 3EB4                                           u7130 4800  
                                         u7210 397C                                           u8010 1BE6  
                                         u5611 42EA                                           u5371 4676  
                                         u6411 270C                                           u6331 263A  
                                         u6251 250E                                           u6171 243E  
                                         u6091 22FC                                           u7051 3EB0  
                                         u7131 47FC                                           u7211 3978  
                                         u5620 4342                                           u5380 46A6  
                                         u5700 32C2                                           u6420 2722  
                                         u6340 265A                                           u6260 2520  
                                         u6180 245A                                           u7060 3EF2  
                                         u7140 34CE                                           u7300 37AC  
                                         u7220 399E                                           u6500 47E4  
                                         u8020 1BFC                                           u8100 37EA  
                                         u5621 433E                                           u5381 46A2  
                                         u5701 32BE                                           u6421 271E  
                                         u6341 2656                                           u6261 251C  
                                         u6181 2454                                           u7061 3EEE  
                                         u7141 34CA                                           u7301 37A6  
                                         u7221 399A                                           u8021 1BF8  
                                         u8101 37E6                                           u6510 2BD8  
                                         u5710 32FC                                           u5630 317C  
                                         u6430 2732                                           u6350 266A  
                                         u6270 253E                                           u6190 245C  
                                         u8030 3358                                           u7070 3F26  
                                         u7150 3502                                           u7310 37AE  
                                         u7230 39F4                                           u8110 381C  
                                         u6511 2BD4                                           u5711 32F8  
                                         u5631 3178                                           u6431 272E  
                                         u6351 2666                                           u6271 253A  
                                         u8031 3354                                           u7071 3F22  
                                         u7231 39F0                                           u8111 3818  
                                         u6600 2D78                                           u6520 2BEA  
                                         u5720 330A                                           u5640 318A  
                                         u6440 2752                                           u6360 267C  
                                         u6280 2576                                           u8040 3390  
                                         u7080 35EC                                           u7160 3530  
                                         u7240 3A04                                           u7320 44B8  
                                         u8120 383A                                           u8200 1E58  
                                         u6601 2D74                                           u6521 2BE6  
                                         u5721 3306                                           u5641 3186  
                                         u6441 274E                                           u6361 2678  
                                         u6281 2572                                           u8041 338C  
                                         u7081 35E8                                           u7161 352C  
                                         u7241 3A00                                           u8121 3836  
                                         u8201 1E52                                           u4690 4082  
                                         u6610 2DA2                                           u6530 2BFA  
                                         u5650 31E6                                           u6450 2764  
                                         u6370 2692                                           u6290 25BC  
                                         u8050 33AC                                           u7090 362A  
                                         u7170 3544                                           u7250 3702  
                                         u7410 305C                                           u7330 44CA  
                                         u8130 384C                                           u8210 1E5A  
                                         u4691 407E                                           u6611 2D9E  
                                         u6531 2BF6                                           u5651 31E2  
                                         u6451 2760                                           u6371 268E  
                                         u6291 25B8                                           u8051 33A8  
                                         u7091 3626                                           u7171 3540  
                                         u7155 34F8                                           u7411 3058  
                                         u7331 44C6                                           u8131 3848  
                                         u6700 2E9E                                           u6620 2DC6  
                                         u6540 2C3E                                           u5660 323C  
                                         u6460 2780                                           u6380 26A8  
                                         u7500 45C4                                           u8060 3468  
                                         u7180 356C                                           u7260 3720  
                                         u7420 3080                                           u7340 443E  
                                         u8140 3876                                           u8300 2054  
                                         u8220 1E70                                           u6701 2E9A  
                                         u6621 2DC2                                           u6541 2C3A  
                                         u5661 3238                                           u6461 277C  
                                         u6381 26A4                                           u7501 45C0  
                                         u8061 3462                                           u7181 3568  
                                         u7261 371C                                           u7405 3004  
                                         u7341 4438                                           u8141 3872  
                                         u8301 2050                                           u8221 1E6C  
                                         u6710 2EE6                                           u6630 2DDC  
                                         u6550 2C50                                           u5670 3286  
                                         u6390 26BC                                           u8070 346A  
                                         u7190 358C                                           u7270 3748  
                                         u7430 309C                                           u7406 300E  
                                         u6470 46EA                                           u7350 4440  
                                         u7510 1092                                           u8310 2104  
                                         u8230 1E96                                           u8150 1C8E  
                                         u6711 2EE2                                           u6631 2DD8  
                                         u6551 2C4C                                           u5671 3282  
                                         u6391 26B8                                           u7191 3588  
                                         u7271 3744                                           u7255 36F8  
                                         u7431 3098                                           u7407 301E  
                                         u6471 46E6                                           u7327 44AE  
                                         u7511 108E                                           u8311 2100  
                                         u8231 1E92                                           u8151 1C8A  
                                         u6720 2F16                                           u6640 2DFA  
                                         u6560 2C60                                           u6800 2868  
                                         u5680 32A4                                           u8080 3480  
                                         u7280 3772                                           u7440 30F0  
                                         u6480 4882                                           u7360 4456  
                                         u7600 124E                                           u7520 10E2  
                                         u8320 2170                                           u8240 1ED2  
                                         u8160 1D5E                                           u6721 2F12  
                                         u6641 2DF6                                           u6561 2C5C  
                                         u6801 2864                                           u5681 32A0  
                                         u8081 347C                                           u7281 376E  
                                         u7425 3076                                           u6481 487E  
                                         u7361 4452                                           u7601 1248  
                                         u7521 10DE                                           u8321 216A  
                                         u8241 1ECE                                           u8161 1D5A  
                                         u6730 2F44                                           u6650 2E1A  
                                         u6570 2CA0                                           u6810 2878  
                                         u5690 32B4                                           u8090 3492  
                                         u7450 310C                                           u7370 2FA0  
                                         u6490 47E2                                           u7610 1250  
                                         u7530 10F0                                           u8330 2172  
                                         u8250 1F7E                                           u8170 1D6C  
                                         u6731 2F40                                           u6651 2E16  
                                         u6571 2C9C                                           u6811 2874  
                                         u5691 32B0                                           u8091 348E  
                                         u7451 3108                                           u6491 47DC  
                                         u7531 10EC                                           u8251 1F78  
                                         u8171 1D68                                           u6660 2E2C  
                                         u6580 2CE0                                           u6900 2B38  
                                         u6820 29F2                                           u6740 27AE  
                                         u7460 3148                                           u7380 2FCE  
                                         u7700 14B4                                           u7620 1266  
                                         u7540 1102                                           u8340 2188  
                                         u8260 1F80                                           u8180 1D94  
                                         u6661 2E28                                           u6581 2CDC  
                                         u6901 2B34                                           u6741 27AA  
                                         u7461 3144                                           u7445 30E6  
                                         u7381 2FCA                                           u7701 14B0  
                                         u7621 1262                                           u7541 10FE  
                                         u8341 2184                                           u8181 1D90  
                                         u6670 2E5A                                           u6590 2D56  
                                         u6910 2B66                                           u6830 2A4C  
                                         u6750 27C0                                           u7470 4852  
                                         u7390 2FF0                                           u7710 14D0  
                                         u7630 1318                                           u7550 114A  
                                         u8350 224E                                           u8270 1F96  
                                         u8190 1DD8                                           u8407 4A34  
                                         u6671 2E56                                           u6591 2D52  
                                         u6911 2B62                                           u6831 2A48  
                                         u6751 27BC                                           u7471 484C  
                                         u7295 3784                                           u7391 2FEC  
                                         u7375 2F96                                           u7711 14CC  
                                         u7631 1314                                           u7551 1146  
                                         u8351 224A                                           u8271 1F92  
                                         u8191 1DD4                                           u6680 2E70  
                                         u6920 2BA0                                           u6840 2A6C  
                                         u6760 27D0                                           u7480 4854  
                                         u7800 1748                                           u7720 1506  
                                         u7640 13AC                                           u7560 117A  
                                         u8280 1FCA                                           u8360 4404  
                                         u6681 2E6C                                           u6921 2B9C  
                                         u6841 2A68                                           u6825 29E8  
                                         u6761 27CC                                           u7801 1744  
                                         u7721 1502                                           u7641 13A8  
                                         u7561 1174                                           u8281 1FC6  
                                         u8361 4400                                           u6690 2E84  
                                         u6850 2A7E                                           u6770 2810  
                                         u7490 4596                                           u6930 3A44  
                                         u7810 1790                                           u7730 152C  
                                         u7650 141E                                           u7570 117C  
                                         u8290 200E                                           u6691 2E80  
                                         u6851 2A7A                                           u6771 280C  
                                         u7491 4592                                           u6931 3A40  
                                         u7811 178C                                           u7731 1528  
                                         u7651 141A                                           u8291 200A  
                                         u6860 2AAC                                           u6780 2822  
                                         u6940 3A5E                                           u7900 195E  
                                         u7820 17A0                                           u7740 153E  
                                         u7660 1444                                           u7580 1192  
                                         u6861 2AA8                                           u6781 281E  
                                         u6941 3A5A                                           u7901 195A  
                                         u7821 179C                                           u7741 153A  
                                         u7661 1440                                           u7581 118E  
                                         u6870 2AC2                                           u6790 2832  
                                         u6950 3A84                                           u7910 1A30  
                                         u7830 1808                                           u7750 154C  
                                         u7670 1456                                           u7590 121E  
                                         u6871 2ABE                                           u6791 282E  
                                         u6951 3A80                                           u7911 1A2C  
                                         u7831 1804                                           u7751 1548  
                                         u7671 1452                                           u7591 121A  
                                         u6880 2AD6                                           u6960 3AA2  
                                         u7920 1A4C                                           u7840 18AC  
                                         u7760 1562                                           u7680 1478  
                                         u6881 2AD2                                           u6961 3A9E  
                                         u7921 1A48                                           u7841 18A8  
                                         u7761 155E                                           u7681 1474  
                                         u8377 3C8E                                           u6890 2AF0  
                                         u6970 3ABE                                           u7930 1A5E  
                                         u7850 18BE                                           u7770 1570  
                                         u7690 149E                                           u6891 2AEC  
                                         u6971 3ABA                                           u7931 1A5A  
                                         u7851 18BA                                           u7771 156C  
                                         u7691 149A                                           u8387 3D12  
                                         u6980 3AE4                                           u7940 1A6C  
                                         u7860 18D0                                           u7780 159A  
                                         u8397 45F4                                           u6981 3AE0  
                                         u7941 1A68                                           u7861 18CC  
                                         u7781 1596                                           u6990 3D3C  
                                         u7950 1AA2                                           u7870 18DE  
                                         u7790 16E2                                           u6991 3D38  
                                         u7951 1A9E                                           u7871 18DA  
                                         u7791 16DE                                           u7960 1AD0  
                                         u7880 18F8                                           u7961 1ACC  
                                         u7881 18F4                                           u7970 1B54  
                                         u7890 1906                                           u7971 1B50  
                                         u7891 1902                                           u7980 1B6E  
                                         u7981 1B6A                                           u7990 1B86  
                                         u7991 1B82                                           _WPUB 000F7C  
                      ??_wr2RegCompleteHandler 0010                                           _dbuf 0124  
                                         _atoi 331E                                           _main 3C7A  
                     ?_I2C_CallbackReturnReset 000E                                           _prec 00F4  
                                         _nout 00F0                                           pad@i 001E  
                                         pad@p 001B                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         pad@w 0020                                           fsr2l 000FD9  
                             __end_of_I2C_Open 40FA                                           btemp 005A  
                                ___fpclassifyf 36C2                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00B0  
                              ___fldiv@new_exp 002F                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 _tolower$2256 0011                                   ___param_bank 000000  
             __size_of_rdBlkRegCompleteHandler 0040                                          ??_pad 001D  
                             ?_I2C_MasterClose 0001                                _I2C_WriteNBytes 44CC  
                                ?_EUSART_Write 0001            __size_of_I2C_SetAddressNackCallback 0018  
               __size_of_OSCILLATOR_Initialize 000A                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 4BF8                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 4BA6                                    _writeBuffer 00ED  
                                ___fltol@sign1 000D                                          ?_atoi 000C  
                              __end_of___fladd 2794                                          ?_main 0001  
                              __end_of___fldiv 2F58                                __end_of___awdiv 3AF6  
                              __end_of___flneg 4822                                          STR_11 1065  
                                        STR_13 1065                                __end_of___awmod 3DDA  
                              __end_of___flmul 2BBE                                __end_of___flsub 4662  
                              __end_of___fltol 35BE                                          _ANSEL 000F7E  
                              ___awdiv@divisor 0007                                          i2l610 4770  
                                        i2l621 49C6                                          i2l630 4C3E  
                                        i2l607 476E                                          i2l624 4C70  
                                        i2l617 3C78                                          i2l627 4C38  
                                        i2l671 009C                                          i2l666 0062  
                                        i2l667 009C                                ___awdiv@counter 0009  
                                        _RCREG 000FAE                   __size_of_I2C_DO_RX_NACK_STOP 0008  
                                        _RCSTA 000FAB                                   vfpfcnvrt@fmt 009F  
                                        _SPBRG 000FAF                              ??_I2C_DO_TX_EMPTY 0010  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                              __end_of_I2C_DO_RX 3FD6  
                            __end_of_I2C_DO_TX 3BBA                                          _flags 00F6  
                                        _fputc 3FD6                              __end_of_I2C_Close 499C  
                                        _fputs 46A8                                __end_of_isdigit 485A  
                       __size_of_I2C_MasterFsm 0070                 I2C_MasterOperation@returnValue 0015  
                                        atoi@n 0019                                          pad@fp 0017  
                                        atoi@s 000C                                          _width 00F2  
                                        _putch 4B92                        _I2C_MasterEnableRestart 4C5C  
                              __end_of_isspace 45D0                                __end_of_isupper 47EA  
                                        pclath 000FFA                                          tablat 000FF5  
                             ?_I2C_SetCallback 0005                   I2C_SetAddressNackCallback@cb 000A  
             HDC1080_humy_GetValue@humyDataAnz 003D                                          ttemp5 005B  
                                        ttemp6 005E                                          ttemp7 0062  
                                        status 000FD8                                          wtemp8 005B  
                               ?___fpclassifyf 0005                                __end_of_tolower 446E  
                            ?_I2C_DO_SEND_STOP 0001                         __size_of_I2C_SetBuffer 0024  
                              __end_of_strncmp 389C                             ??_I2C_DO_SEND_STOP 0005  
                                _fsmStateTable 1001                       fp__rd1RegCompleteHandler 0000  
                              __initialization 49C8                                   __end_of_atoi 34B8  
                                 __end_of_main 3D2A                       fp__wr1RegCompleteHandler 0000  
            __size_of_I2C_DO_SEND_RESTART_READ 0008                      ?_I2C_DO_SEND_RESTART_READ 0001  
                               ??_EUSART_Write 0005                                 ?_I2C_DO_RX_ACK 0001  
                  ?_INTERRUPT_InterruptManager 0001                 ??_EUSART_SetRxInterruptHandler 0007  
                                       ??_atoi 000E                                         ??_main 0188  
                            ?_I2C_MasterIsNack 0001                                  __activetblptr 000003  
                            ?_I2C_MasterSetIrq 0001                             ??_I2C_MasterIsNack 0005  
                           ??_I2C_MasterSetIrq 0005           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 4C72     __size_of_EUSART_DefaultFramingErrorHandler 0002  
          ??_EUSART_DefaultFramingErrorHandler 0001             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 4C70                          _HDC1080_humy_GetValue 3DDA  
                   _EUSART_OverrunErrorHandler 0180                __end_of_I2C_CallbackReturnReset 4C54  
                                       ?_fputc 0007                                         ?_fputs 0010  
              __size_of_I2C_CallbackReturnStop 0004                               ___awdiv@dividend 0005  
                I2C_SetDataCompleteCallback@cb 000A                                         ?_putch 0001  
                                       _ANSELH 000F7F                                   ??_I2C_Poller 0014  
                                       i2l5601 49AC                                         i2l6081 001A  
                                       i2l5603 49AE                                         i2l6091 007E  
                                       i2l6083 0028                                         i2l5605 49BE  
                                       i2l6085 0036                                         i2l5607 49C2  
                                       i2l6087 0044                                         i2l6089 0070  
                                       i2l5813 4C34                                         i2l5815 4C3A  
                                       i2l5911 4730                                         i2l5921 4768  
                                       i2l5913 4742                                         i2l5931 3C02  
                                       i2l5923 3BBA                                         i2l5915 4752  
                                       i2l5941 3C74                                         i2l5933 3C10  
                                       i2l5925 3BCA                                         i2l5917 4754  
                                       i2l5599 499C                                         i2l5935 3C20  
                                       i2l5927 3BD8                                         i2l5919 4764  
                                       i2l5937 3C3A                                         i2l5929 3BE8  
                                       i2l5939 3C56                                         _OSCCON 000FD3  
                                vfpfcnvrt@done 00A7                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                             __end_of___xxtofl 331E                            _I2C_MasterGetRxData 4C48  
                      __end_of_I2C_WriteNBytes 4526                                   vfprintf@cfmt 00BD  
                      __size_of_I2C_ReadNBytes 0046                                         ___flge 35BE  
                                       ___fleq 3E86                                      ??___fladd 003F  
                                       ___wmul 4A46                                      ??___fldiv 0026  
                                _I2C_MasterFsm 4266                                      ??___awdiv 0009  
                                    ??___flneg 0009                                      ??___awmod 0009  
                                    ??___flmul 000D                                      ??___flsub 004F  
                                    ??___fltol 0009                                         _efgtoa 106A  
                          _EUSART_Transmit_ISR 4730                                         _floorf 2F58  
                                       clear_0 49CE                                         clear_1 49DA  
                            I2C_SetCallback@cb 0005                               ___awdiv@quotient 000B  
                      fp__I2C_DO_SEND_ADR_READ 0000                                ___awmod@divisor 0007  
                      __size_of_I2C_MasterRead 0008                        __size_of_I2C_MasterOpen 0022  
                      __size_of_I2C_MasterStop 0004                                ___awmod@counter 0009  
                      __size_of_I2C_Initialize 0014                                         _printf 49F2  
                                       pad@buf 0019                                  _I2C_SetBuffer 4A6C  
                           __end_of_I2C_Poller 4AD0                                         _strcpy 446E  
                                       _strlen 485A                   __end_of_I2C_MasterDisableIrq 4C68  
                                       fputc@c 0007                                         fputs@c 0014  
                          _I2C_DO_ADDRESS_NACK 4344                                         fputs@i 0015  
                                       fputs@s 0010                                      ??_isdigit 0007  
                         ?_I2C_MasterGetRxData 0001                                      ?_I2C_Open 0001  
           __end_of_I2C_SetAddressNackCallback 4AE8                     _I2C_SetAddressNackCallback 4AD0  
                              ___fpclassifyf@e 000D                                ___fpclassifyf@u 000F  
                              ___fpclassifyf@x 0005                                   __mediumconst 0000  
                                    ??_isspace 0007                                         tblptrh 000FF7  
                                    ??_isupper 0007                                         tblptrl 000FF6  
                                       tblptru 000FF8                      ??_I2C_MasterEnableRestart 0005  
                             __end_of_vfprintf 440E                                      ??_tolower 000D  
                                    ??_strncmp 000B                           ?_EUSART_Transmit_ISR 0001  
                __size_of_INTERRUPT_Initialize 0004                                     ___flge@ff1 001E  
                                   ___flge@ff2 0022                                ??___fpclassifyf 0009  
                                 ___xxtofl@arg 000F                                   ___xxtofl@exp 000E  
                            _SYSTEM_Initialize 4B00                                   ___xxtofl@val 0005  
                                   ___fleq@ff1 0005                                     ___fleq@ff2 0009  
                                   __accesstop 0060                        __end_of__initialization 49E8  
                                   ___flneg@f1 0005                            _I2C_MasterOperation 46EC  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001                                     ___fltol@f1 0005  
         __end_of_EUSART_SetTxInterruptHandler 4BB0          __size_of_EUSART_SetTxInterruptHandler 000A  
                 _EUSART_SetTxInterruptHandler 4BA6                        _rdBlkRegCompleteHandler 4772  
                   fp__rdBlkRegCompleteHandler 0000                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                ??_I2C_DO_RX_ACK 0005  
                       _I2C_CallbackReturnStop 4C54                            ??_SYSTEM_Initialize 0007  
                                __end_of_fputc 406C                                  __end_of_fputs 46EC  
                                __end_of_putch 4B9C                                 ?_I2C_SetBuffer 0005  
                      ?_I2C_MasterWaitForEvent 0001                 __size_of_I2C_DO_SEND_ADR_WRITE 0010  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0008                  __end_of_I2C_DO_SEND_ADR_WRITE 4B5E  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                        ??_I2C_MasterGetRxData 0005                        ?_I2C_Write1ByteRegister 0016  
                        I2C_ReadNBytes@address 001A                                     ??_I2C_Open 0005  
                         _eusartRxStatusBuffer 00C5                         ?_HDC1080_humy_GetValue 0037  
                   __end_of_I2C_MasterClearIrq 4C70                ??_EUSART_SetOverrunErrorHandler 0007  
                                      ??_fputc 000B                      __end_of_SYSTEM_Initialize 4B16  
                                      ??_fputs 0014                          ??_EUSART_Transmit_ISR 0001  
                                      ??_putch 0006                              _I2C_MasterSendAck 4C28  
                                   __pbssBANK0 00C5                                     __pbssBANK1 0100  
                         __end_of_EUSART_Write 457E                                  ??_I2C_DO_IDLE 0005  
               __size_of_rd2RegCompleteHandler 002C                                  ??_I2C_DO_RCEN 0005  
                __end_of_rd2RegCompleteHandler 4918                   __end_of_I2C_MasterSendTxData 4C28  
                           ?_I2C_MasterSendAck 0001                              _I2C_MasterStartRx 4C4C  
               __size_of_wr2RegCompleteHandler 002C                          ??_I2C_DO_ADDRESS_NACK 0010  
                __end_of_wr2RegCompleteHandler 4970                    __size_of_EUSART_Receive_ISR 00C0  
                          _I2C_DO_RX_NACK_STOP 4BF0                          _rd1RegCompleteHandler 4918  
                           ?_I2C_MasterStartRx 0001                     __end_of_I2C_MasterSendNack 4C34  
                             ?_I2C_WriteNBytes 0016                         I2C_WriteNBytes@address 001A  
                        _wr1RegCompleteHandler 48C0                            ??_I2C_MasterSendAck 0005  
                     rd1RegCompleteHandler@ptr 000E                                        ?___flge 001E  
                ?_EUSART_SetTxInterruptHandler 0005                                        ?___fleq 0005  
             _EUSART_TxDefaultInterruptHandler 00FC                    __end_of_I2C_DO_SEND_RESTART 4C10  
                              _I2C_DO_TX_EMPTY 40FA                            I2C_SetBuffer@buffer 0005  
                                      ?___wmul 0005                                        ?_efgtoa 004F  
               __end_of_I2C_MasterWaitForEvent 4B4E                            ??_I2C_MasterStartRx 0005  
                __size_of_I2C_DO_SEND_ADR_READ 0010                                        ?_floorf 0037  
                                      _BAUDCON 000FB8               __size_of_I2C_CallbackReturnReset 0004  
                 ??_EUSART_DefaultErrorHandler 0001                          ??_I2C_MasterOperation 0014  
                                      ?_printf 00BF                 I2C_SetDataCompleteCallback@ptr 000C  
               __end_of_I2C_Write1ByteRegister 4344                                        ?_strcpy 0005  
                                      ?_strlen 0005                       ??_I2C_DO_RX_NACK_RESTART 0005  
            __end_of_I2C_DO_SEND_RESTART_WRITE 4C18                           ?_I2C_DO_RX_NACK_STOP 0001  
                                _eusartRxCount 00F9                                      ?___xxtofl 0005  
                           __size_of_vfpfcnvrt 066C                          _HDC1080_temp_GetValue 389C  
                __size_of_EUSART_RxDataHandler 002C                      __end_of_I2C_MasterSendAck 4C2E  
                                      _OSCTUNE 000F9B                       ??_EUSART_SetErrorHandler 0007  
                                      _SSPCON1 000FC6                                        _SSPCON2 000FC5  
                                      _SSPSTAT 000FC7                      __end_of_I2C_MasterStartRx 4C50  
                         I2C_Close@returnValue 0005                   ?_I2C_SetDataCompleteCallback 000A  
                                    _I2C_DO_RX 3F30                                      _I2C_DO_TX 3AF6  
             __end_of_I2C_DO_SEND_RESTART_READ 4C20                                      _I2C_Close 4970  
                    ??_rdBlkRegCompleteHandler 0010                           _I2C_MasterDisableIrq 4C64  
                              ??_I2C_MasterFsm 0012                                        __Hparam 0000  
          __size_of_EUSART_DefaultErrorHandler 0006                                        __Lparam 0000  
                               _I2C_ReadNBytes 4662                            __end_of_I2C_DO_IDLE 4B92  
                          __end_of_I2C_DO_RCEN 4B86                                     _readBuffer 0174  
                              __size_of___flge 0104                                __size_of___fleq 00AA  
                                      ___fladd 22D4                                        ___fldiv 2BBE  
                                      ___awdiv 3A32                                        ___flneg 47EA  
                                      ___awmod 3D2A                                        ___flmul 2794  
                                      ___flsub 461C                                        ___fltol 34B8  
                              ??_I2C_SetBuffer 0009                                __size_of___wmul 0026  
                                    ?_vfprintf 00B7                        I2C_SetBuffer@bufferSize 0007  
                                 __psmallconst 1000                                __size_of_efgtoa 0BFE  
                           I2C_ReadNBytes@data 0016                                 _I2C_MasterRead 4BD8  
                               _I2C_MasterOpen 4A90                                __size_of_floorf 0212  
                                      __pcinit 49C8                                 _I2C_MasterStop 4C58  
                               _I2C_Initialize 4B16                                        __ramtop 1000  
                    __size_of_I2C_DO_SEND_STOP 0008                                        __ptext0 3C7A  
                                      __ptext1 49F2                                        __ptext2 43AA  
                                      __ptext3 1C68                                        __ptext4 37C0  
                                      __ptext5 106A                                        __ptext6 440E  
                                      __ptext7 47B2                                        __ptext8 446E  
                                      __ptext9 396C                                __size_of_printf 002A  
                        ??_I2C_DO_RX_NACK_STOP 0005                                __size_of_strcpy 005E  
                              __size_of_strlen 0036                          _OSCILLATOR_Initialize 4B9C  
                                 __size_of_pad 00C6                                        _isdigit 4822  
                                   ??___xxtofl 0009                               ___awmod@dividend 0005  
                           I2C_SetCallback@idx 0009                       __size_of_I2C_MasterClose 0004  
                     ??_PIN_MANAGER_Initialize 0005                  I2C_CallbackReturnReset@funPtr 000E  
                                      _isspace 457E                             I2C_SetCallback@ptr 0007  
                     wr1RegCompleteHandler@ptr 000E                                        _isupper 47B2  
                                      efgtoa@c 0055                                        efgtoa@d 007D  
                                      efgtoa@e 0095                                        efgtoa@f 0051  
                                      efgtoa@g 0091                                        efgtoa@h 0087  
                                      efgtoa@i 008F                                        efgtoa@l 008B  
                                      efgtoa@m 0079                                        efgtoa@n 0097  
                                      efgtoa@p 0081                                        efgtoa@t 0075  
                                      efgtoa@u 0099                                        efgtoa@w 0084  
                    I2C_Write1ByteRegister@reg 0016                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                     __size_of_I2C_MasterStart 0004                       __size_of_I2C_MasterWrite 0008  
                                      atoi@neg 0012                     __size_of_SYSTEM_Initialize 0016  
                                      _tolower 440E                                        _strncmp 37C0  
                         end_of_initialization 49E8                                        floorf@e 0045  
                                      floorf@m 0041                                        floorf@u 0047  
                                      floorf@x 0037                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001          __end_of_EUSART_SetOverrunErrorHandler 4BC4  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 4BBA  
                    __size_of_I2C_MasterIsNack 0014                                        fputc@fp 0009  
                                   ?_I2C_Close 0001                                        fputs@fp 0012  
                       ?_rd1RegCompleteHandler 000E                        __end_of_I2C_DO_TX_EMPTY 4176  
                    __size_of_I2C_MasterSetIrq 0004                          ?_I2C_MasterDisableIrq 0001  
                       __end_of_I2C_ReadNBytes 46A8                              _EUSART_Initialize 41F0  
                       ?_wr1RegCompleteHandler 000E                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                       __size_of_I2C_SetCallback 007A  
                            __end_of_vfpfcnvrt 22D4                                     efgtoa@mode 0086  
                                   efgtoa@sign 007F                                      _RCSTAbits 000FAB  
                                      postdec2 000FDD                         __end_of_I2C_MasterRead 4BE0  
                       __end_of_I2C_MasterOpen 4AB2                       fp__wr2RegCompleteHandler 0000  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                         __end_of_I2C_MasterStop 4C5C  
                       __end_of_I2C_Initialize 4B2A                                     ??_vfprintf 0056  
                    fp__I2C_CallbackReturnStop 0000                                     _temperatur 00E9  
                                      strcpy@d 000D                                        strlen@a 0007  
                                      strcpy@s 000B                                        strlen@s 0005  
                          ??_EUSART_Initialize 0007                 ??_EUSART_SetTxInterruptHandler 0007  
              __end_of_rdBlkRegCompleteHandler 47B2                           _I2C_MasterSendTxData 4C20  
                              fp__I2C_DO_RESET 0000                __size_of_I2C_DO_RX_NACK_RESTART 0008  
                                  ___fladd@grs 0046                         ?_HDC1080_temp_GetValue 0047  
                                ___xxtofl@sign 000D                    ?_I2C_SetAddressNackCallback 000A  
                        __size_of_EUSART_Write 0058                     __size_of_I2C_MasterSendAck 0006  
                                  ___fldiv@grs 0031                                    ___fldiv@rem 002A  
                            __size_of_I2C_Open 008E                __size_of_EUSART_SetErrorHandler 000A  
                   __size_of_I2C_MasterStartRx 0004                                    ___flmul@grs 0013  
                    __end_of_EUSART_Initialize 4266                                    _I2C_DO_IDLE 4B86  
                                  _I2C_DO_RCEN 4B7A                     rdBlkRegCompleteHandler@ptr 000E  
                I2C_Write1ByteRegister@address 0018                                      _TXSTAbits 000FAC  
             HDC1080_temp_GetValue@tempDataAnz 004D                                ?_I2C_ReadNBytes 0016  
                      ?_I2C_CallbackReturnStop 000E                       _I2C_DO_SEND_RESTART_READ 4C18  
                  fp__I2C_DO_SEND_RESTART_READ 0000                   I2C_CallbackReturnStop@funPtr 000E  
                              ?_I2C_MasterRead 0001                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 4C44                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 4C50  
                   fp__I2C_CallbackReturnReset 0000                                 __end_of___flge 36C2  
                               __end_of___fleq 3F30             __end_of_EUSART_DefaultErrorHandler 4C40  
                   _EUSART_DefaultErrorHandler 4C3A                                    vfpfcnvrt@ap 00A1  
                                  vfpfcnvrt@ct 00B3                                    vfpfcnvrt@fp 009D  
                               __end_of___wmul 4A6C           __size_of_I2C_SetDataCompleteCallback 0018  
                               __end_of_efgtoa 1C68                                   _EUSART_Write 4526  
                               __end_of_floorf 316A                          ?_I2C_MasterSendTxData 0001  
                       ?_OSCILLATOR_Initialize 0001                                     floorf@F524 00DD  
                  ??_I2C_DO_SEND_RESTART_WRITE 0005                        ??_HDC1080_humy_GetValue 003B  
                               __end_of_printf 4A1C                                 __end_of_strcpy 44CC  
                               __end_of_strlen 4890                                  ?_HDC1080_Init 0001  
                                ?_HDC1080_Read 0001                            start_initialization 49C8  
              __size_of_PIN_MANAGER_Initialize 0030                                    __end_of_pad 3A32  
                                ?_I2C_DO_RESET 0001                             HDC1080_Read@regist 001D  
 EUSART_SetRxInterruptHandler@interruptHandler 0005   EUSART_SetTxInterruptHandler@interruptHandler 0005  
                                  putch@txData 0006                                    ??_I2C_DO_RX 0010  
                                  ??_I2C_DO_TX 0010                              ??_I2C_MasterClose 0005  
                       ??_I2C_MasterDisableIrq 0005                                    ??_I2C_Close 0005  
                            ??_I2C_MasterStart 0005                          __end_of___fpclassifyf 37C0  
                            ??_I2C_MasterWrite 0016                 __end_of_I2C_CallbackReturnStop 4C58  
                       _I2C_DO_RX_NACK_RESTART 4BE8                               ?_I2C_DO_TX_EMPTY 0001  
                           _I2C_MasterClearIrq 4C6C                 ?_EUSART_SetOverrunErrorHandler 0005  
                                  vfprintf@fmt 00B9                     _EUSART_FramingErrorHandler 0182  
                                     ??___flge 0026                                       ??___fleq 000D  
                                     ??___wmul 0009                         _EUSART_SetErrorHandler 4BCE  
                          ?_I2C_MasterClearIrq 0001                                       ??_efgtoa 0060  
                  __end_of_I2C_MasterGetRxData 4C4C                                       ??_floorf 003B  
                        __end_of_I2C_DO_RX_ACK 4C00                               _I2C_DO_SEND_STOP 4C00  
                            ??_I2C_SetCallback 0009                                       ??_printf 0056  
                          I2C_Open@returnValue 0006                                       ??_strcpy 0009  
                           _I2C_MasterSendNack 4C2E                                       ??_strlen 0007  
                     ?_I2C_MasterEnableRestart 0001                                      ___fladd@a 003B  
                                    ___fladd@b 0037                         fp__I2C_DO_SEND_RESTART 0000  
                               ??_HDC1080_Init 0019                                 ??_HDC1080_Read 001B  
                                    ___fldiv@a 0022                                      ___fldiv@b 001E  
                  __end_of_EUSART_Transmit_ISR 4772                          _I2C_DO_SEND_ADR_WRITE 4B4E  
                                    ___flmul@a 0009                                      ___flmul@b 0005  
                                  __pbssCOMRAM 0056                                      ___flsub@a 004B  
                                    ___flsub@b 0047                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0184                                 ??_I2C_DO_RESET 0005  
                          ?_I2C_MasterSendNack 0001                              __size_of___xxtofl 01B4  
                 __end_of_I2C_DO_SEND_ADR_READ 4B6E                           ??_I2C_MasterClearIrq 0005  
                  __end_of_I2C_DO_ADDRESS_NACK 43AA                     __end_of_EUSART_Receive_ISR 3C7A  
                             _I2C_MasterIsNack 4B2A                     __size_of_EUSART_Initialize 0076  
                    _I2C_DO_SEND_RESTART_WRITE 4C10               _EUSART_RxDefaultInterruptHandler 00FA  
                             _I2C_MasterSetIrq 4C44                                      _atoi$2167 0014  
                                    _atoi$2168 0018                                      _atoi$2169 0016  
                                    __pnvBANK0 00FA                                      __pnvBANK1 017E  
                        _rd2RegCompleteHandler 48EC                          __end_of_fsmStateTable 1021  
                                  _efgtoa$2102 0069                                    _efgtoa$2103 006B  
                                  _efgtoa$2112 006F                                    _efgtoa$2113 0071  
                                  _efgtoa$2114 0073                                    _efgtoa$2108 006D  
                 __end_of_EUSART_RxDataHandler 49C8                         _PIN_MANAGER_Initialize 4890  
                        _wr2RegCompleteHandler 4944                      ??_I2C_CallbackReturnReset 0010  
                  __end_of_I2C_MasterOperation 4730                           ??_I2C_MasterSendNack 0005  
                     rd2RegCompleteHandler@ptr 000E                                      __pintcode 0008  
                                     ?___fladd 0037                                       ?___fldiv 001E  
                                     ?___awdiv 0005                                      __ptext100 4730  
                                    __ptext101 3BBA                                      __ptext102 4C34  
                                     ?___flneg 0005                                      __ptext103 4C70  
                                    __ptext104 4C3A                                      __ptext105 499C  
                                    __ptext106 0000                                       ?___awmod 0005  
                                     ?___flmul 0005                                       ?___flsub 0047  
                                     ?___fltol 0005                                   _eusartRxHead 0057  
                                 _eusartTxHead 0059                                   _eusartRxTail 0056  
                       ??_I2C_MasterSendTxData 0005                                   _eusartTxTail 0058  
                 ??_INTERRUPT_InterruptManager 0001                       __size_of_I2C_WriteNBytes 005A  
                            __size_of_vfprintf 0064                                   fp__I2C_DO_RX 0000  
                                 fp__I2C_DO_TX 0000                        _eusartTxBufferRemaining 00FE  
                 __size_of_I2C_DO_SEND_RESTART 0008                                    __smallconst 1000  
                                     ?_isdigit 0005                        I2C_MasterOperation@read 0014  
                                     _I2C_Open 406C                                       ?_isspace 0005  
                                     ?_isupper 0005                              I2C_ReadNBytes@len 0018  
                                     ?_tolower 000B                                 __size_of_fputc 0096  
                               __size_of_fputs 0044                        ??_rd1RegCompleteHandler 0010  
                                     ?_strncmp 0005                                 __size_of_putch 000A  
                         _INTERRUPT_Initialize 4C40                                 _eusartRxBuffer 00CD  
                      ??_wr1RegCompleteHandler 0010                                 _eusartTxBuffer 00D5  
                               ___wmul@product 0009         EUSART_SetErrorHandler@interruptHandler 0005  
                                     _PIE1bits 000F9D                              _eusartRxLastError 00F8  
          __size_of_INTERRUPT_InterruptManager 00A8                                       i2u600_48 0084  
                                     i2u600_49 0098                                       _PIR1bits 000F9E  
              ??_EUSART_SetFramingErrorHandler 0007                                       _PIR2bits 000FA1  
                                     i2u539_40 49BE                                       i2u539_41 49BA  
                                     i2u580_40 3C10                                       i2u580_41 3C0C  
                                     i2u582_40 3C56                                       i2u581_48 3C26  
                                     i2u582_41 3C52                                       i2u581_49 3C3A  
                                     i2u583_48 3C5C                                       i2u576_40 4742  
                                     i2u583_49 3C70                                       i2u576_41 473E  
                                     i2u577_40 4764                                       i2u577_41 4760  
                                     i2u578_40 3BD8                                       i2u594_40 0028  
                                     i2u578_41 3BD4                                       i2u594_41 0024  
                                     i2u595_40 0036                                       i2u595_41 0032  
                                     i2u579_48 3BEE                                       i2u596_40 0044  
                                     i2u579_49 3C02                                       i2u596_41 0040  
                                     i2u598_40 0070                                       i2u597_48 004A  
                                     i2u598_41 006C                                       i2u597_49 005E  
                                     i2u599_40 007E                                       i2u599_41 007A  
                        __end_of_I2C_MasterFsm 42D6                                       _RCONbits 000FD0  
                  __end_of_I2C_DO_RX_NACK_STOP 4BF8           fp__EUSART_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART_DefaultOverrunErrorHandler 4C3A     __size_of_EUSART_DefaultOverrunErrorHandler 0006  
          ??_EUSART_DefaultOverrunErrorHandler 0001             ?_EUSART_DefaultOverrunErrorHandler 0001  
            _EUSART_DefaultOverrunErrorHandler 4C34                __end_of_I2C_MasterEnableRestart 4C60  
                               fp__I2C_DO_IDLE 0000                                 fp__I2C_DO_RCEN 0000  
                                    _vfpfcnvrt 1C68                          __end_of_I2C_SetBuffer 4A90  
                      ??_HDC1080_temp_GetValue 004B                              ___wmul@multiplier 0005  
                       ?_I2C_DO_SEND_ADR_WRITE 0001                       I2C_MasterSendTxData@data 0005  
                     wr2RegCompleteHandler@ptr 000E                                   _isspace$2198 000B  
                                   vfpfcnvrt@c 00B6                                     vfpfcnvrt@f 00AF  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 0005  
                        ?_INTERRUPT_Initialize 0001                       ?_rdBlkRegCompleteHandler 000E  
                             ??_I2C_ReadNBytes 001A                                     _I2C_Poller 4AB2  
                                   _I2C_Status 0100                                   ?_I2C_DO_IDLE 0001  
                                 ?_I2C_DO_RCEN 0001                         ?_rd2RegCompleteHandler 000E  
                             ??_I2C_MasterRead 0016                          fp__EUSART_Receive_ISR 0000  
                          I2C_WriteNBytes@data 0016                               ??_I2C_MasterOpen 0005  
                       ?_wr2RegCompleteHandler 000E                               ??_I2C_MasterStop 0005  
                     ??_I2C_MasterWaitForEvent 0005                               ??_I2C_Initialize 0005  
                    fp__I2C_DO_RX_NACK_RESTART 0000                           __end_of_HDC1080_Init 4A46  
                         __end_of_HDC1080_Read 461C                                       __Hrparam 0000  
                                   vfprintf@ap 00BB                                       __Lrparam 0000  
                                   vfprintf@fp 00B7                           __end_of_I2C_DO_RESET 4B7A  
                     ??_I2C_Write1ByteRegister 0018                        ??_OSCILLATOR_Initialize 0005  
                          _EUSART_ErrorHandler 017E                               __size_of___fladd 04C0  
                             __size_of___fldiv 039A                               __size_of___awdiv 00C4  
                         _I2C_DO_SEND_ADR_READ 4B5E                               __size_of___flneg 0038  
                             __size_of___awmod 00B0                               __size_of___flmul 042A  
                             __size_of___flsub 0046                               __size_of___fltol 0106  
                  ?_EUSART_DefaultErrorHandler 0001                                     ?_vfpfcnvrt 009D  
                           ___fpclassifyf@F463 00E1                                _I2C_MasterClose 4C68  
                I2C_SetAddressNackCallback@ptr 000C                                I2C_Open@address 0005  
               __size_of_HDC1080_humy_GetValue 00AC                                       ___xxtofl 316A  
                          fp__I2C_DO_SEND_STOP 0000                  __end_of_HDC1080_humy_GetValue 3E86  
                              _I2C_MasterStart 4C60                                _I2C_MasterWrite 4BE0  
                             __size_of_isdigit 0038                           _EUSART_RxDataHandler 499C  
                            ??_I2C_WriteNBytes 001A                               __size_of_isspace 0052  
                                     __ptext10 485A                                       __ptext11 46A8  
                                     __ptext20 35BE                                       __ptext12 3FD6  
                                     __ptext21 3E86                                       __ptext13 4B92  
                                     __ptext30 4B9C                                       __ptext22 3D2A  
                                     __ptext14 4526                                       __ptext31 4C40  
                                     __ptext23 3A32                                       __ptext15 2F58  
                                     __ptext40 22D4                                       __ptext32 4B16  
                                     __ptext24 331E                                       __ptext16 36C2  
                                     __ptext41 3DDA                                       __ptext33 41F0  
                                     __ptext25 457E                                       __ptext17 34B8  
                                     __ptext50 42D6                                       __ptext42 316A  
                                     __ptext34 4BA6                                       __ptext26 4822  
                                     __ptext18 461C                                       __ptext51 4AD0  
                                     __ptext43 2794                                       __ptext35 4BB0  
                                     __ptext27 4A46                                       __ptext19 47EA  
                                     __ptext60 4B6E                                       __ptext52 406C  
                                     __ptext44 2BBE                                       __ptext36 4BBA  
                                     __ptext28 4B00                                       __ptext61 4BE8  
                                     __ptext53 4A90                                       __ptext45 45D0  
                                     __ptext37 4BC4                                       __ptext29 4890  
                                     __ptext70 3AF6                                       __ptext62 4BF0  
                                     __ptext54 4BE0                                       __ptext46 44CC  
                                     __ptext38 4BCE                                       __ptext71 4B4E  
                                     __ptext63 4BF8                                       __ptext55 46EC  
                                     __ptext47 4662                                       __ptext39 389C  
                                     __ptext80 4C2E                                       __ptext72 4B5E  
                                     __ptext64 4C00                                       __ptext56 4AB2  
                                     __ptext48 4BD8                                       __ptext81 4C4C  
                                     __ptext73 4B86                                       __ptext65 4C08  
                                     __ptext57 4B3E                                       __ptext49 4A1C  
                                     __ptext90 4176                                       __ptext82 4C50  
                                     __ptext74 40FA                                       __ptext66 4C10  
                                     __ptext58 4266                                       __ptext91 4A6C  
                                     __ptext83 4C54                                       __ptext75 4C44  
                                     __ptext67 4C18                                       __ptext59 4344  
                                     __ptext92 4C58                                       __ptext84 4772  
                                     __ptext76 4B2A                                       __ptext68 4B7A  
                                     __ptext93 4C5C                                       __ptext85 48C0  
                                     __ptext77 4C20                                       __ptext69 3F30  
                                     __ptext94 4C60                                       __ptext86 48EC  
                                     __ptext78 4C28                                       __ptext95 4970  
                                     __ptext87 4918                                       __ptext79 4C48  
                                     __ptext96 4C64                                       __ptext88 4944  
                                     __ptext97 4C68                                       __ptext89 4AE8  
                                     __ptext98 4C6C                               __size_of_isupper 0038  
          __end_of_I2C_SetDataCompleteCallback 4B00                    _I2C_SetDataCompleteCallback 4AE8  
                      ?_I2C_DO_RX_NACK_RESTART 0001                               __size_of_tolower 0060  
                                   strcpy@dest 0005                               __size_of_strncmp 00DC  
                     __end_of_I2C_DO_SEND_STOP 4C08                                  __size_of_atoi 019A  
                                __size_of_main 00B0                        ?_EUSART_SetErrorHandler 0005  
                              _I2C_SetCallback 4176                  ??_I2C_SetDataCompleteCallback 000E  
                   I2C_Write1ByteRegister@data 0017                                       efgtoa@fp 004F  
                                     efgtoa@ne 007B                                       efgtoa@pp 0077  
                                     efgtoa@ou 0065                                       _lufthumy 00E5  
EUSART_SetOverrunErrorHandler@interruptHandler 0005                                       int$flags 005A  
                        ?_I2C_DO_SEND_ADR_READ 0001                                       _vfprintf 43AA  
           __end_of_INTERRUPT_InterruptManager 00B0                     _INTERRUPT_InterruptManager 0008  
                                    printf@fmt 00BF          __end_of_EUSART_SetFramingErrorHandler 4BCE  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 4BC4  
                     __end_of_I2C_MasterIsNack 4B3E                       __end_of_I2C_MasterSetIrq 4C48  
                               _vfpfcnvrt$2133 00AD                                 _vfpfcnvrt$2128 00A9  
                               _vfpfcnvrt$2129 00AB                                     _INTCONbits 000FF2  
                           I2C_WriteNBytes@len 0018                          ?_EUSART_RxDataHandler 0001  
                                     isdigit@c 0005                         ??_INTERRUPT_Initialize 0005  
               __end_of_I2C_DO_RX_NACK_RESTART 4BF0                                       intlevel2 0000  
                                  ?_I2C_Poller 0001                         fp__EUSART_Transmit_ISR 0000  
             __size_of_I2C_MasterEnableRestart 0004                                       isspace@c 0005  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 4BD8  
                          _I2C_DO_SEND_RESTART 4C08                                      strcpy@src 0007  
                __size_of_I2C_MasterDisableIrq 0004                                       isupper@c 0005  
                       fp__I2C_DO_ADDRESS_NACK 0000                                      strncmp@_l 0005  
                                    strncmp@_r 0007           __end_of_EUSART_SetRxInterruptHandler 4BBA  
        __size_of_EUSART_SetRxInterruptHandler 000A                   _EUSART_SetRxInterruptHandler 4BB0  
              __size_of_I2C_MasterWaitForEvent 0010                                    efgtoa@nmode 0083  
                                     printf@ap 0186                __size_of_I2C_Write1ByteRegister 006E  
                           _EUSART_Receive_ISR 3BBA  EUSART_SetFramingErrorHandler@interruptHandler 0005  
                      __end_of_I2C_MasterClose 4C6C                       __size_of_I2C_DO_TX_EMPTY 007C  
                           fp__I2C_DO_TX_EMPTY 0000                                    ??_vfpfcnvrt 00A3  
                      __end_of_I2C_MasterStart 4C64                        __end_of_I2C_MasterWrite 4BE8  
                         ?_I2C_DO_SEND_RESTART 0001                                       tolower@c 000B  
                          ?_EUSART_Receive_ISR 0001                         __size_of___fpclassifyf 00FE  
                fp__EUSART_DefaultErrorHandler 0000                   __size_of_I2C_MasterGetRxData 0004  
                                     strncmp@l 000C                                       strncmp@n 0009  
                                     strncmp@r 000E                                    _SSPCON1bits 000FC6  
                                  _SSPCON2bits 000FC5                                  ___fladd@signs 0043  
                  __size_of_I2C_MasterClearIrq 0004                             EUSART_Write@txData 0005  
                 __size_of_EUSART_Transmit_ISR 0042                        __end_of_I2C_SetCallback 41F0  
               __end_of_PIN_MANAGER_Initialize 48C0                          __size_of_HDC1080_Init 002A  
                        __size_of_HDC1080_Read 004C                 __size_of_rd1RegCompleteHandler 002C  
                __end_of_rd1RegCompleteHandler 4944                         __size_of_I2C_DO_RX_ACK 0008  
                             fp__I2C_DO_RX_ACK 0000                                   ___fladd@aexp 0044  
                                 ___fladd@bexp 0045                 __size_of_wr1RegCompleteHandler 002C  
                         ??_EUSART_Receive_ISR 0001                          __size_of_I2C_DO_RESET 000C  
                __end_of_wr1RegCompleteHandler 48EC                   __size_of_I2C_DO_ADDRESS_NACK 0066  
                         __size_of_I2C_DO_IDLE 000C                           __size_of_I2C_DO_RCEN 000C  
                           __size_of_I2C_DO_RX 00A6                             __size_of_I2C_DO_TX 00C4  
